<?xml version="1.0" encoding="utf-8"?>
<Project FileVersion="0.063" DesignCenterVersion="3.5.3.0">
  <Objects>
    <Object>
      <WireLink VID="2" Master="9722" MTime="" Position="">
        <Name>WireLink Bus 1</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>WireLink</ObjectType>
        <Parent Position="1">9722</Parent>
      </WireLink>
    </Object>
    <Object>
      <WireLink VID="3" Master="9722" MTime="" Position="">
        <Name>WireLink Bus 2</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>WireLink</ObjectType>
        <Parent Position="2">9722</Parent>
      </WireLink>
    </Object>
    <Object>
      <EthernetLink VID="4" Master="9722" MTime="" Position="">
        <Name>Ethernet Bus</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>EthernetLink</ObjectType>
        <Parent Position="8">9722</Parent>
        <Passcode>sYqJoA39kJ6sOCelmntgug==</Passcode>
      </EthernetLink>
    </Object>
    <Object>
      <Area VID="6" Master="9722" MTime="" ExcludeFromWidgets="False">
        <Name>Home</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Area</ObjectType>
        <Area>0</Area>
        <Location>0</Location>
        <AreaType>
        </AreaType>
        <EnclosureArea>0</EnclosureArea>
      </Area>
    </Object>
    <Object>
      <Category VID="7" Master="9722" MTime="">
        <Name>Project</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Category</ObjectType>
        <Category>0</Category>
        <Location>0</Location>
      </Category>
    </Object>
    <Object>
      <PowerProfile VID="8" Master="0" MTime="">
        <Name>Standard</Name>
        <Model>Default</Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>PowerProfile</ObjectType>
        <Min>0</Min>
        <Max>97</Max>
        <Adjust>40</Adjust>
        <Freq>60</Freq>
        <Inductive>false</Inductive>
        <Linearization label="">
        </Linearization>
      </PowerProfile>
    </Object>
    <Object>
      <PowerProfile VID="9" Master="0" MTime="">
        <Name>Relay</Name>
        <Model>Default</Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>PowerProfile</ObjectType>
        <Min>100</Min>
        <Max>100</Max>
        <Adjust>40</Adjust>
        <Freq>60</Freq>
        <Inductive>false</Inductive>
        <Linearization label="">
        </Linearization>
      </PowerProfile>
    </Object>
    <Object>
      <DCPowerProfile VID="10" Master="0" MTime="">
        <Name>DC Power Profile 1</Name>
        <Model>Default</Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>DCPowerProfile</ObjectType>
        <Min>0</Min>
        <Max>10</Max>
        <Adjust>0</Adjust>
        <Freq>60</Freq>
        <Inductive>false</Inductive>
        <Linearization label="">
        </Linearization>
      </DCPowerProfile>
    </Object>
    <Object>
      <PWMPowerProfile VID="11" Master="0" MTime="">
        <Name>PWM Power Profile 1</Name>
        <Model>Default</Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>PWMPowerProfile</ObjectType>
        <Min>0</Min>
        <Max>97</Max>
        <Adjust>0</Adjust>
        <Freq>
        </Freq>
        <Inductive>false</Inductive>
        <Linearization label="">
        </Linearization>
        <Inverted>false</Inverted>
      </PWMPowerProfile>
    </Object>
    <Object>
      <Schedule VID="12" Master="9722" MTime="">
        <Name>Home</Name>
        <Model />
        <Note />
        <DName>Home</DName>
        <ObjectType>Schedule</ObjectType>
        <Category>7</Category>
        <HoldTime>01:00:00</HoldTime>
        <TrackTable>
          <Track Name="Morning">
            <Day Name="Monday">
              <Time>07:30:00</Time>
              <ActionTable>
                <Action Function="Thermostat.SetHeatSetPoint">
                  <val>20000</val>
                </Action>
                <Action Function="Thermostat.SetCoolSetPoint">
                  <val>23500</val>
                </Action>
                <Action Function="Thermostat.SetAutoSetPoint">
                  <val>21500</val>
                </Action>
              </ActionTable>
            </Day>
            <Day Name="Saturday">
              <Time>09:30:00</Time>
              <ActionTable>
                <Action Function="Thermostat.SetHeatSetPoint">
                  <val>21000</val>
                </Action>
                <Action Function="Thermostat.SetCoolSetPoint">
                  <val>22000</val>
                </Action>
                <Action Function="Thermostat.SetAutoSetPoint">
                  <val>21500</val>
                </Action>
              </ActionTable>
            </Day>
          </Track>
          <Track Name="Day">
            <Day Name="Monday">
              <Time>09:30:00</Time>
              <ActionTable>
                <Action Function="Thermostat.SetHeatSetPoint">
                  <val>19000</val>
                </Action>
                <Action Function="Thermostat.SetCoolSetPoint">
                  <val>24500</val>
                </Action>
                <Action Function="Thermostat.SetAutoSetPoint">
                  <val>21500</val>
                </Action>
              </ActionTable>
            </Day>
            <Day Name="Saturday">
              <Time>11:30:00</Time>
              <ActionTable>
                <Action Function="Thermostat.SetHeatSetPoint">
                  <val>21000</val>
                </Action>
                <Action Function="Thermostat.SetCoolSetPoint">
                  <val>22000</val>
                </Action>
                <Action Function="Thermostat.SetAutoSetPoint">
                  <val>21500</val>
                </Action>
              </ActionTable>
            </Day>
          </Track>
          <Track Name="Evening">
            <Day Name="Monday">
              <Time>17:00:00</Time>
              <ActionTable>
                <Action Function="Thermostat.SetHeatSetPoint">
                  <val>21000</val>
                </Action>
                <Action Function="Thermostat.SetCoolSetPoint">
                  <val>22000</val>
                </Action>
                <Action Function="Thermostat.SetAutoSetPoint">
                  <val>21500</val>
                </Action>
              </ActionTable>
            </Day>
            <Day Name="Saturday">
              <Time>7:00:00</Time>
              <ActionTable>
                <Action Function="Thermostat.SetHeatSetPoint">
                  <val>21000</val>
                </Action>
                <Action Function="Thermostat.SetCoolSetPoint">
                  <val>22000</val>
                </Action>
                <Action Function="Thermostat.SetAutoSetPoint">
                  <val>21500</val>
                </Action>
              </ActionTable>
            </Day>
          </Track>
          <Track Name="Night">
            <Day Name="Monday">
              <Time>23:45:00</Time>
              <ActionTable>
                <Action Function="Thermostat.SetHeatSetPoint">
                  <val>19000</val>
                </Action>
                <Action Function="Thermostat.SetCoolSetPoint">
                  <val>24500</val>
                </Action>
                <Action Function="Thermostat.SetAutoSetPoint">
                  <val>21500</val>
                </Action>
              </ActionTable>
            </Day>
            <Day Name="Saturday">
              <Time>23:45:00</Time>
              <ActionTable>
                <Action Function="Thermostat.SetHeatSetPoint">
                  <val>21000</val>
                </Action>
                <Action Function="Thermostat.SetCoolSetPoint">
                  <val>22000</val>
                </Action>
                <Action Function="Thermostat.SetAutoSetPoint">
                  <val>21500</val>
                </Action>
              </ActionTable>
            </Day>
          </Track>
        </TrackTable>
      </Schedule>
    </Object>
    <Object>
      <Schedule VID="13" Master="9722" MTime="">
        <Name>Away</Name>
        <Model />
        <Note />
        <DName>Home</DName>
        <ObjectType>Schedule</ObjectType>
        <Category>7</Category>
        <HoldTime>01:00:00</HoldTime>
        <TrackTable>
          <Track Name="Morning">
            <Day Name="Monday">
              <Time>07:30:00</Time>
              <ActionTable>
                <Action Function="Thermostat.SetHeatSetPoint">
                  <val>19000</val>
                </Action>
                <Action Function="Thermostat.SetCoolSetPoint">
                  <val>24500</val>
                </Action>
                <Action Function="Thermostat.SetAutoSetPoint">
                  <val>21500</val>
                </Action>
              </ActionTable>
            </Day>
          </Track>
          <Track Name="Day">
            <Day Name="Monday">
              <Time>09:30:00</Time>
              <ActionTable>
                <Action Function="Thermostat.SetHeatSetPoint">
                  <val>19000</val>
                </Action>
                <Action Function="Thermostat.SetCoolSetPoint">
                  <val>24500</val>
                </Action>
                <Action Function="Thermostat.SetAutoSetPoint">
                  <val>21500</val>
                </Action>
              </ActionTable>
            </Day>
          </Track>
          <Track Name="Evening">
            <Day Name="Monday">
              <Time>17:00:00</Time>
              <ActionTable>
                <Action Function="Thermostat.SetHeatSetPoint">
                  <val>19000</val>
                </Action>
                <Action Function="Thermostat.SetCoolSetPoint">
                  <val>24500</val>
                </Action>
                <Action Function="Thermostat.SetAutoSetPoint">
                  <val>21500</val>
                </Action>
              </ActionTable>
            </Day>
          </Track>
          <Track Name="Night">
            <Day Name="Monday">
              <Time>23:00:00</Time>
              <ActionTable>
                <Action Function="Thermostat.SetHeatSetPoint">
                  <val>19000</val>
                </Action>
                <Action Function="Thermostat.SetCoolSetPoint">
                  <val>24500</val>
                </Action>
                <Action Function="Thermostat.SetAutoSetPoint">
                  <val>21500</val>
                </Action>
              </ActionTable>
            </Day>
          </Track>
        </TrackTable>
      </Schedule>
    </Object>
    <Object>
      <Schedule VID="14" Master="9722" MTime="">
        <Name>Vacation</Name>
        <Model />
        <Note />
        <DName>Vacation</DName>
        <ObjectType>Schedule</ObjectType>
        <Category>7</Category>
        <HoldTime>01:00:00</HoldTime>
        <TrackTable>
          <Track Name="Morning">
            <Day Name="Monday">
              <Time>07:30:00</Time>
              <ActionTable>
                <Action Function="Thermostat.SetHeatSetPoint">
                  <val>15500</val>
                </Action>
                <Action Function="Thermostat.SetCoolSetPoint">
                  <val>26500</val>
                </Action>
                <Action Function="Thermostat.SetAutoSetPoint">
                  <val>21000</val>
                </Action>
              </ActionTable>
            </Day>
          </Track>
          <Track Name="Day">
            <Day Name="Monday">
              <Time>09:30:00</Time>
              <ActionTable>
                <Action Function="Thermostat.SetHeatSetPoint">
                  <val>15500</val>
                </Action>
                <Action Function="Thermostat.SetCoolSetPoint">
                  <val>26500</val>
                </Action>
                <Action Function="Thermostat.SetAutoSetPoint">
                  <val>21000</val>
                </Action>
              </ActionTable>
            </Day>
          </Track>
          <Track Name="Evening">
            <Day Name="Monday">
              <Time>17:00:00</Time>
              <ActionTable>
                <Action Function="Thermostat.SetHeatSetPoint">
                  <val>15500</val>
                </Action>
                <Action Function="Thermostat.SetCoolSetPoint">
                  <val>26500</val>
                </Action>
                <Action Function="Thermostat.SetAutoSetPoint">
                  <val>21000</val>
                </Action>
              </ActionTable>
            </Day>
          </Track>
          <Track Name="Night">
            <Day Name="Monday">
              <Time>23:00:00</Time>
              <ActionTable>
                <Action Function="Thermostat.SetHeatSetPoint">
                  <val>15500</val>
                </Action>
                <Action Function="Thermostat.SetCoolSetPoint">
                  <val>26500</val>
                </Action>
                <Action Function="Thermostat.SetAutoSetPoint">
                  <val>21000</val>
                </Action>
              </ActionTable>
            </Day>
          </Track>
        </TrackTable>
      </Schedule>
    </Object>
    <Object>
      <Schedule VID="15" Master="9722" MTime="">
        <Name>Custom</Name>
        <Model />
        <Note />
        <DName>Custom</DName>
        <ObjectType>Schedule</ObjectType>
        <Category>7</Category>
        <HoldTime>01:00:00</HoldTime>
        <TrackTable>
          <Track Name="Morning">
            <Day Name="Monday">
              <Time>07:30:00</Time>
              <ActionTable>
                <Action Function="Thermostat.SetHeatSetPoint">
                  <val>15500</val>
                </Action>
                <Action Function="Thermostat.SetCoolSetPoint">
                  <val>26500</val>
                </Action>
                <Action Function="Thermostat.SetAutoSetPoint">
                  <val>21000</val>
                </Action>
              </ActionTable>
            </Day>
            <Day Name="Tuesday">
              <Time>07:30:00</Time>
              <ActionTable>
                <Action Function="Thermostat.SetHeatSetPoint">
                  <val>15500</val>
                </Action>
                <Action Function="Thermostat.SetCoolSetPoint">
                  <val>26500</val>
                </Action>
                <Action Function="Thermostat.SetAutoSetPoint">
                  <val>21000</val>
                </Action>
              </ActionTable>
            </Day>
            <Day Name="Wednesday">
              <Time>07:30:00</Time>
              <ActionTable>
                <Action Function="Thermostat.SetHeatSetPoint">
                  <val>15500</val>
                </Action>
                <Action Function="Thermostat.SetCoolSetPoint">
                  <val>26500</val>
                </Action>
                <Action Function="Thermostat.SetAutoSetPoint">
                  <val>21000</val>
                </Action>
              </ActionTable>
            </Day>
            <Day Name="Thursday">
              <Time>07:30:00</Time>
              <ActionTable>
                <Action Function="Thermostat.SetHeatSetPoint">
                  <val>15500</val>
                </Action>
                <Action Function="Thermostat.SetCoolSetPoint">
                  <val>26500</val>
                </Action>
                <Action Function="Thermostat.SetAutoSetPoint">
                  <val>21000</val>
                </Action>
              </ActionTable>
            </Day>
            <Day Name="Friday">
              <Time>07:30:00</Time>
              <ActionTable>
                <Action Function="Thermostat.SetHeatSetPoint">
                  <val>15500</val>
                </Action>
                <Action Function="Thermostat.SetCoolSetPoint">
                  <val>26500</val>
                </Action>
                <Action Function="Thermostat.SetAutoSetPoint">
                  <val>21000</val>
                </Action>
              </ActionTable>
            </Day>
            <Day Name="Saturday">
              <Time>07:30:00</Time>
              <ActionTable>
                <Action Function="Thermostat.SetHeatSetPoint">
                  <val>15500</val>
                </Action>
                <Action Function="Thermostat.SetCoolSetPoint">
                  <val>26500</val>
                </Action>
                <Action Function="Thermostat.SetAutoSetPoint">
                  <val>21000</val>
                </Action>
              </ActionTable>
            </Day>
            <Day Name="Sunday">
              <Time>07:30:00</Time>
              <ActionTable>
                <Action Function="Thermostat.SetHeatSetPoint">
                  <val>15500</val>
                </Action>
                <Action Function="Thermostat.SetCoolSetPoint">
                  <val>26500</val>
                </Action>
                <Action Function="Thermostat.SetAutoSetPoint">
                  <val>21000</val>
                </Action>
              </ActionTable>
            </Day>
          </Track>
          <Track Name="Day">
            <Day Name="Monday">
              <Time>09:00:00</Time>
              <ActionTable>
                <Action Function="Thermostat.SetHeatSetPoint">
                  <val>15500</val>
                </Action>
                <Action Function="Thermostat.SetCoolSetPoint">
                  <val>26500</val>
                </Action>
                <Action Function="Thermostat.SetAutoSetPoint">
                  <val>21000</val>
                </Action>
              </ActionTable>
            </Day>
            <Day Name="Tuesday">
              <Time>09:00:00</Time>
              <ActionTable>
                <Action Function="Thermostat.SetHeatSetPoint">
                  <val>15500</val>
                </Action>
                <Action Function="Thermostat.SetCoolSetPoint">
                  <val>26500</val>
                </Action>
                <Action Function="Thermostat.SetAutoSetPoint">
                  <val>21000</val>
                </Action>
              </ActionTable>
            </Day>
            <Day Name="Wednesday">
              <Time>09:00:00</Time>
              <ActionTable>
                <Action Function="Thermostat.SetHeatSetPoint">
                  <val>15500</val>
                </Action>
                <Action Function="Thermostat.SetCoolSetPoint">
                  <val>26500</val>
                </Action>
                <Action Function="Thermostat.SetAutoSetPoint">
                  <val>21000</val>
                </Action>
              </ActionTable>
            </Day>
            <Day Name="Thursday">
              <Time>09:00:00</Time>
              <ActionTable>
                <Action Function="Thermostat.SetHeatSetPoint">
                  <val>15500</val>
                </Action>
                <Action Function="Thermostat.SetCoolSetPoint">
                  <val>26500</val>
                </Action>
                <Action Function="Thermostat.SetAutoSetPoint">
                  <val>21000</val>
                </Action>
              </ActionTable>
            </Day>
            <Day Name="Friday">
              <Time>09:00:00</Time>
              <ActionTable>
                <Action Function="Thermostat.SetHeatSetPoint">
                  <val>15500</val>
                </Action>
                <Action Function="Thermostat.SetCoolSetPoint">
                  <val>26500</val>
                </Action>
                <Action Function="Thermostat.SetAutoSetPoint">
                  <val>21000</val>
                </Action>
              </ActionTable>
            </Day>
            <Day Name="Saturday">
              <Time>09:00:00</Time>
              <ActionTable>
                <Action Function="Thermostat.SetHeatSetPoint">
                  <val>15500</val>
                </Action>
                <Action Function="Thermostat.SetCoolSetPoint">
                  <val>26500</val>
                </Action>
                <Action Function="Thermostat.SetAutoSetPoint">
                  <val>21000</val>
                </Action>
              </ActionTable>
            </Day>
            <Day Name="Sunday">
              <Time>09:00:00</Time>
              <ActionTable>
                <Action Function="Thermostat.SetHeatSetPoint">
                  <val>15500</val>
                </Action>
                <Action Function="Thermostat.SetCoolSetPoint">
                  <val>26500</val>
                </Action>
                <Action Function="Thermostat.SetAutoSetPoint">
                  <val>21000</val>
                </Action>
              </ActionTable>
            </Day>
          </Track>
          <Track Name="Evening">
            <Day Name="Monday">
              <Time>17:00:00</Time>
              <ActionTable>
                <Action Function="Thermostat.SetHeatSetPoint">
                  <val>15500</val>
                </Action>
                <Action Function="Thermostat.SetCoolSetPoint">
                  <val>26500</val>
                </Action>
                <Action Function="Thermostat.SetAutoSetPoint">
                  <val>21000</val>
                </Action>
              </ActionTable>
            </Day>
            <Day Name="Tuesday">
              <Time>17:00:00</Time>
              <ActionTable>
                <Action Function="Thermostat.SetHeatSetPoint">
                  <val>15500</val>
                </Action>
                <Action Function="Thermostat.SetCoolSetPoint">
                  <val>26500</val>
                </Action>
                <Action Function="Thermostat.SetAutoSetPoint">
                  <val>21000</val>
                </Action>
              </ActionTable>
            </Day>
            <Day Name="Wednesday">
              <Time>17:00:00</Time>
              <ActionTable>
                <Action Function="Thermostat.SetHeatSetPoint">
                  <val>15500</val>
                </Action>
                <Action Function="Thermostat.SetCoolSetPoint">
                  <val>26500</val>
                </Action>
                <Action Function="Thermostat.SetAutoSetPoint">
                  <val>21000</val>
                </Action>
              </ActionTable>
            </Day>
            <Day Name="Thursday">
              <Time>17:00:00</Time>
              <ActionTable>
                <Action Function="Thermostat.SetHeatSetPoint">
                  <val>15500</val>
                </Action>
                <Action Function="Thermostat.SetCoolSetPoint">
                  <val>26500</val>
                </Action>
                <Action Function="Thermostat.SetAutoSetPoint">
                  <val>21000</val>
                </Action>
              </ActionTable>
            </Day>
            <Day Name="Friday">
              <Time>17:00:00</Time>
              <ActionTable>
                <Action Function="Thermostat.SetHeatSetPoint">
                  <val>15500</val>
                </Action>
                <Action Function="Thermostat.SetCoolSetPoint">
                  <val>26500</val>
                </Action>
                <Action Function="Thermostat.SetAutoSetPoint">
                  <val>21000</val>
                </Action>
              </ActionTable>
            </Day>
            <Day Name="Saturday">
              <Time>17:00:00</Time>
              <ActionTable>
                <Action Function="Thermostat.SetHeatSetPoint">
                  <val>15500</val>
                </Action>
                <Action Function="Thermostat.SetCoolSetPoint">
                  <val>26500</val>
                </Action>
                <Action Function="Thermostat.SetAutoSetPoint">
                  <val>21000</val>
                </Action>
              </ActionTable>
            </Day>
            <Day Name="Sunday">
              <Time>17:00:00</Time>
              <ActionTable>
                <Action Function="Thermostat.SetHeatSetPoint">
                  <val>15500</val>
                </Action>
                <Action Function="Thermostat.SetCoolSetPoint">
                  <val>26500</val>
                </Action>
                <Action Function="Thermostat.SetAutoSetPoint">
                  <val>21000</val>
                </Action>
              </ActionTable>
            </Day>
          </Track>
          <Track Name="Night">
            <Day Name="Monday">
              <Time>22:00:00</Time>
              <ActionTable>
                <Action Function="Thermostat.SetHeatSetPoint">
                  <val>15500</val>
                </Action>
                <Action Function="Thermostat.SetCoolSetPoint">
                  <val>26500</val>
                </Action>
                <Action Function="Thermostat.SetAutoSetPoint">
                  <val>21000</val>
                </Action>
              </ActionTable>
            </Day>
            <Day Name="Tuesday">
              <Time>22:00:00</Time>
              <ActionTable>
                <Action Function="Thermostat.SetHeatSetPoint">
                  <val>15500</val>
                </Action>
                <Action Function="Thermostat.SetCoolSetPoint">
                  <val>26500</val>
                </Action>
                <Action Function="Thermostat.SetAutoSetPoint">
                  <val>21000</val>
                </Action>
              </ActionTable>
            </Day>
            <Day Name="Wednesday">
              <Time>22:00:00</Time>
              <ActionTable>
                <Action Function="Thermostat.SetHeatSetPoint">
                  <val>15500</val>
                </Action>
                <Action Function="Thermostat.SetCoolSetPoint">
                  <val>26500</val>
                </Action>
                <Action Function="Thermostat.SetAutoSetPoint">
                  <val>21000</val>
                </Action>
              </ActionTable>
            </Day>
            <Day Name="Thursday">
              <Time>22:00:00</Time>
              <ActionTable>
                <Action Function="Thermostat.SetHeatSetPoint">
                  <val>15500</val>
                </Action>
                <Action Function="Thermostat.SetCoolSetPoint">
                  <val>26500</val>
                </Action>
                <Action Function="Thermostat.SetAutoSetPoint">
                  <val>21000</val>
                </Action>
              </ActionTable>
            </Day>
            <Day Name="Friday">
              <Time>22:00:00</Time>
              <ActionTable>
                <Action Function="Thermostat.SetHeatSetPoint">
                  <val>15500</val>
                </Action>
                <Action Function="Thermostat.SetCoolSetPoint">
                  <val>26500</val>
                </Action>
                <Action Function="Thermostat.SetAutoSetPoint">
                  <val>21000</val>
                </Action>
              </ActionTable>
            </Day>
            <Day Name="Saturday">
              <Time>22:00:00</Time>
              <ActionTable>
                <Action Function="Thermostat.SetHeatSetPoint">
                  <val>15500</val>
                </Action>
                <Action Function="Thermostat.SetCoolSetPoint">
                  <val>26500</val>
                </Action>
                <Action Function="Thermostat.SetAutoSetPoint">
                  <val>21000</val>
                </Action>
              </ActionTable>
            </Day>
            <Day Name="Sunday">
              <Time>22:00:00</Time>
              <ActionTable>
                <Action Function="Thermostat.SetHeatSetPoint">
                  <val>15500</val>
                </Action>
                <Action Function="Thermostat.SetCoolSetPoint">
                  <val>26500</val>
                </Action>
                <Action Function="Thermostat.SetAutoSetPoint">
                  <val>21000</val>
                </Action>
              </ActionTable>
            </Day>
          </Track>
        </TrackTable>
      </Schedule>
    </Object>
    <Object>
      <Script VID="16" Master="9722" MTime="">
        <Name>EqUXSceneLibrary.sma</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Script</ObjectType>
      </Script>
      <?File / 
/****************************************
 * Copyright (c) 2013, Vantage Legrand
 *
 * Workfile: EqUXSceneLibrary.sma
 * Description: Library supporting EqUX Scene Widgets
 *
 * Revision: 7
 ****************************************/
 
#if defined _EQUXSCENELIBRARY_INCLUDED
  #endinput
#endif

#define _EQUXSCENELIBRARY_INCLUDED

#include <adjust>
#include <avzone>
#include <avswitcher>
#include <avzone2>
#include <buffer>
#include <button>
#include <load>
#include <object>
#include <power>
#include <schedule>
#include <task>
#include <thermostat>
#include <vantage>
#include <volume2>
#include <string>
#include <blind>

/****************************************
 * Interface ID Constants 
 ****************************************/
public const NAVIGATION = 0;
public const KEYBOARD = 0;
public const MEDIASERVER = 0;
public const CHANGER = 0;
public const PLAY = 52;
public const TUNER = 53;
public const CHANNEL = 58;

/****************************************
 * State Maintenance
 ****************************************/
public MemID:EqUXScene_FirstMethod = MemID:-1;
static TaskState:EqUXScene_LoadRampStatus = TaskState:0;

/****************************************
 * Procedures
 ****************************************/
stock EqUXScene_LoadRamp(Load:load, Level:level, Seconds:rampTime, bool:canToggle)
{
	new const MemID:bufferid = GetMemID();
	
	if (EqUXScene_FirstMethod == MemID:-1)
	{
		EqUXScene_FirstMethod = bufferid;
	}

	if (EqUXScene_FirstMethod == bufferid)
	{
		EqUXScene_LoadRampStatus = Task_GetState(GetCurrentTask());
	}

	if (canToggle && EqUXScene_LoadRampStatus > TaskState:0)
	{
		Load_Ramp(load, Load_RampType_Variable, rampTime, Level:0);
	}
	else
	{
		Load_Ramp(load, Load_RampType_Variable, rampTime, level);
	}
}

stock EqUXScene_LaunchButton(Button:button)
{
	if (GetEvent() == Event_ButtonHold)
	{
		Button_SetStateDown(button, Seconds:GetEventParam2());
	}
	else if (GetEvent() == Event_ButtonDown)
	{
		Button_SetState(button, Button_State_Down);
	}
	else if (GetEvent() == Event_ButtonUp)
	{
		Button_SetState(button, Button_State_Up);
	}
	else if (GetEvent() == Event_Timer)
	{
		Button_SetState(button, Button_State_Down);
		Button_SetState(button, Button_State_Up);
	}
}

stock EqUXScene_Delay(Seconds:delayTime)
{
	Delay(delayTime);
}

stock EqUXScene_SetHVACSchedule(Thermostat:thermostat, Schedule:schedule)
{
	Schedule_SetSchedule(Schedule:thermostat, schedule);
}

stock EqUXScene_SetHVACSetPoint(Thermostat:thermostat, Thermostat_OperationMode:mode, DegC:temperature)
{
	if (Thermostat_GetOperationMode(thermostat) != mode)
	{
		Thermostat_SetOperationMode(thermostat, mode);
	}
		
	if (mode == Thermostat_OperationMode_Auto)
	{
		Thermostat_SetHeatSetPoint(thermostat, temperature - DegC:1.0);
		Thermostat_SetCoolSetPoint(thermostat, temperature + DegC:1.0);
	}
	else if (mode == Thermostat_OperationMode_Heat)
	{
		Thermostat_SetHeatSetPoint(thermostat, temperature);
	}
	else if (mode == Thermostat_OperationMode_Cool)
	{
		Thermostat_SetCoolSetPoint(thermostat, temperature);
	}
}

stock EqUXScene_SetPower(Power:device, bool:state)
{
	new objectTypeBuffer[50 char] = {0};
	Object_GetType(Object:device, objectTypeBuffer, 50);
	if (StrCompare(objectTypeBuffer, "Vantage.AVZone") == 0)
	{
		if (state)
		{
			AVZone_ZonePowerOn(AVZone:device);
		}
		else
		{
			AVZone_ZonePowerOff(AVZone:device);
		}
	}
	else
	{
		if (state)
		{
			Power_On(device);
		}
		else
		{
			Power_Off(device);
		}
	}
}

stock EqUXScene_SetVolume(Volume2:device, Percentage:volume)
{
	Volume2_SetVolume(device, volume);
}

stock EqUXScene_SetMute(Volume2:device, bool:state)
{
	if (state)
	{
		Volume2_SetMuteOn(device);
	}
	else
	{
		Volume2_SetMuteOff(device);
	}
}

stock EqUXScene_SetZoneSource(AVZone2:zone, AVSource:source)
{
	AVZone2_SetSource(zone, AVZone2_Mode_AudioAndVideo, source);
}

/****************************************
 * Queries
 ****************************************/
query Number:EqUXScene_LoadQuery(Load:loads[], Level:levels[])
{
	sleep -50;
	for (new i = 0 ; i < sizeof(loads) ; i++)
	{
		if (_:Load_GetLevel(loads[i]) != _:levels[i])
		{
			return Number:0;
		}
	}
	return Number:1;
}

query Number:EqUXScene_ButtonQuery(Button:button[])
{
	if (sizeof(button) >= 1)
	{
		new taskVid = Object_GetProperty(Object:button[0], "Down");
		if (taskVid != _:INVALID_VID) return Number:Task_GetState(Task:taskVid);
		
		taskVid = Object_GetProperty(Object:button[0], "Up");
		if (taskVid != _:INVALID_VID) return Number:Task_GetState(Task:taskVid);

		taskVid = Object_GetProperty(Object:button[0], "Hold");
		if (taskVid != _:INVALID_VID) return Number:Task_GetState(Task:taskVid);
	}
	
	return Number:0;
}

query Number:EqUXScene_HVACScheduleQuery(Thermostat:thermostats[], Schedule:schedules[])
{
	sleep -50;
	for (new i = 0 ; i < sizeof(thermostats) ; i++)
	{
		if (Schedule_GetSchedule(Schedule:thermostats[i]) != schedules[i])
		{
			return Number:0;
		}
	}
	return Number:1;
}

query Number:EqUXScene_HVACSetpointQuery(Thermostat:thermostats[], Thermostat_OperationMode:modes[], DegC:temperatures[])
{
	sleep -50;
	new DegC:currentSetpoint;
	
	for (new i = 0 ; i < sizeof(thermostats) ; i++)
	{
		if (Thermostat_GetOperationMode(thermostats[i]) != modes[i])
		{
			return Number:0;
		}
		else
		{
			switch (modes[i])
			{
			case Thermostat_OperationMode_Off:
				return Number:0;
			case Thermostat_OperationMode_Cool:
			{
				currentSetpoint = Thermostat_GetCoolSetPoint(thermostats[i]);
				if (currentSetpoint < (temperatures[i] - DegC:0.25) || currentSetpoint > (temperatures[i] + DegC:0.25))
					return Number:0;
				break;
			}
			case Thermostat_OperationMode_Heat:
			{
				currentSetpoint = Thermostat_GetHeatSetPoint(thermostats[i]);
				if (currentSetpoint < (temperatures[i] - DegC:0.25) || currentSetpoint > (temperatures[i] + DegC:0.25))
					return Number:0;
				break;
			}
			case Thermostat_OperationMode_Auto:
			{
				if (Object_IsMethodSupported(Object:thermostats[i], THERMOSTAT, THERMOSTAT_GETAUTOSETPOINT))
				{
					currentSetpoint = Thermostat_GetAutoSetPoint(thermostats[i]);
				}
				else
				{
					currentSetpoint = (Thermostat_GetHeatSetPoint(thermostats[i]) + Thermostat_GetCoolSetPoint(thermostats[i])) / 2;
				}
				if (currentSetpoint < (temperatures[i] - DegC:0.25) || currentSetpoint > (temperatures[i] + DegC:0.25))
					return Number:0;
				break;
			}	
			default:
				return Number:0;
			}
		}
	}
	return Number:1;
}

query Number:EqUXScene_MuteQuery(Volume2: devices[], bool:states[])
{
	sleep -50;
	for (new i = 0 ; i < sizeof(devices) ; i++)
	{
		if ((Volume2_GetMuteState(devices[i]) == Volume2_VolumeState_On) != states[i])
		{
			return Number:0;
		}
	}
	return Number:1;
}

query Number:EqUXScene_PowerQuery(Power:devices[], bool:states[])
{
	sleep -50;
	for (new i = 0 ; i < sizeof(devices) ; i++)
	{
		if (bool:Power_GetState(devices[i]) == states[i])
		{
			return Number:0;
		}
	}
	return Number:1;
}

query Number:EqUXScene_VolumeQuery(Volume2:devices[], Percentage:levels[])
{
	sleep -50;
	for (new i = 0 ; i < sizeof(devices) ; i++)
	{
		if (Volume2_GetVolume(devices[i]) == levels[i])
		{
			return Number:0;
		}
	}
	return Number:1;
}

query Number:EqUXScene_SourceQuery(AVZone2:zones[], AVSource:sources[])
{
	sleep -50;
	for (new i = 0 ; i < sizeof(zones) ; i++)
	{
		if (AVZone2_GetSource(zones[i], AVZone2_Mode_AudioAndVideo) == sources[i])
		{
			return Number:0;
		}
	}
	return Number:1;
}

query Number:EqUXScene_BlindPositionQuery(Blind:blinds[], Level:positions [])
{
	sleep - 50;
	for (new i = 0; i < sizeof(blinds); i++)
	{
		if (_:Blind_GetPosition(blinds[i]) != _:positions[i])
		{
			return Number:0;
		}
	}
	return Number:1;
}

/****************************************
 * Levels
 ****************************************/
public Number:EqUXScene_SceneLoadLevel(Load:loads[])
{
	new count = sizeof(loads);
	if (count > 0)
	{
		new Level:highLevel = Level:0;
		new Level:lowLevel = Level:100.0;
		new Level:temp;
		
		for (new i = 0 ; i < count ; i++)
		{
			temp = Load_GetLevel(loads[i]);
			if (temp > highLevel) highLevel = temp;
			if (temp < lowLevel) lowLevel = temp;
		}

		if (lowLevel == Level:0) return Number:0;

		return Number:fround(fdiv(Level:100.0, Level:100.0 - (highLevel - lowLevel)) * (lowLevel));
	}
	return Number:0;
}

public Number:EqUXScene_BlindPosition(Blind:blinds[])
{
	new count = sizeof(blinds);
	if (count > 0)
	{
		new Level:highLevel = Level:0;
		new Level:lowLevel = Level:100.0;
		new Level:temp;

		for (new i = 0; i < count; i++)
		{
			temp = Blind_GetPosition(blinds[i]);
			if (temp > highLevel) highLevel = temp;
			if (temp < lowLevel) lowLevel = temp;
		}

		if (lowLevel == Level:0) return Number:0;

		return Number:fround(fdiv(Level:100.0, Level:100.0 - (highLevel - lowLevel)) * (lowLevel));
	}
	return Number:0;
}

/****************************************
 * Adjust
 ****************************************/
public Number:EqUXScene_AdjustSceneLoads(Load:loads[])
{
	new Seconds:rampRate = Seconds:5.0;
	new Level:bumpPercentage = Level:10.0;
	new MemID:initialValue = GetMemID();
	new count = sizeof(loads);
	new Level:maxLevel;
	new Level:currentLevel;

	if (GetEvent() == Event_Adjust)
	{
		if (Adjust_Type:GetEventParam2() == Adjust_Type_Raise)
		{
			switch (AdjustActionType:GetEventParam1())
			{
			case AdjustAction_Start:
				{	
					if (DoesBufferExist(initialValue) || CreateBuffer(initialValue, count, false))
					{
						for (new i = 0 ; i < count ; i++)
						{
							currentLevel = Load_GetLevel(loads[i]);
							BufferSetAt(initialValue, i, _:currentLevel);
							if (maxLevel < currentLevel) maxLevel = currentLevel;
						}
						for (new i = 0 ; i < count ; i++)
						{
							Load_Ramp(loads[i], Load_RampType_Adjust, rampRate, Level:100.0 - (maxLevel - Level:BufferGetAt(MemID:initialValue, i)));
						}
					}
					return Number:(rampRate / 100);
				}
			case AdjustAction_Stop:
				{
					BatchInvoke( Load_Ramp(Load:0, Load_RampType_Stop, rampRate, Level:100.0), _:loads);
					
					if (DoesBufferExist(initialValue))
					{
						for (new i = 0 ; i < count ; i++)
						{
							currentLevel = Load_GetLevel(loads[i]) - Level:BufferGetAt(initialValue, i);
							if (currentLevel > maxLevel) maxLevel = currentLevel;
						}
						for (new i = 0 ; i < count ; i++)
						{
							Load_Ramp(loads[i], Load_RampType_Variable, Seconds:0.5, Level:BufferGetAt(initialValue, i) + maxLevel);
						}
					}
				}
			case AdjustAction_Bump:
				{
					for (new i = 0 ; i < count ; i++)
					{
						currentLevel = Load_GetLevel(loads[i]);
						if (maxLevel < currentLevel) maxLevel = currentLevel;
					}
				
					for (new i = 0 ; i < count ; i++)
					{
						Load_Ramp(loads[i], Load_RampType_Variable, rampRate, Load_GetLevel(loads[i]) + (((maxLevel + bumpPercentage) > Level:100.0) ? (Level:100.0 - maxLevel) : bumpPercentage));
					}
				}
			}
		}
		else if (Adjust_Type:GetEventParam2() == Adjust_Type_Lower)
		{
			maxLevel = Level:100.0;
			switch (AdjustActionType:GetEventParam1())
			{
			case AdjustAction_Start:
				{	
					if (DoesBufferExist(initialValue) || CreateBuffer(initialValue, count, false))
					{
						for (new i = 0 ; i < count ; i++)
						{
							currentLevel = Load_GetLevel(loads[i]);
							BufferSetAt(initialValue, i, _:currentLevel);
							if (maxLevel > currentLevel) maxLevel = currentLevel;
						}
						for (new i = 0 ; i < count ; i++)
						{
							Load_Ramp(loads[i], Load_RampType_Adjust, rampRate, Level:0 + (Level:BufferGetAt(MemID:initialValue, i) - maxLevel));
						}
					}
					return Number:(-1 * (rampRate / 100));
				}
			case AdjustAction_Stop:
				{
					maxLevel = Level:0.0;
					BatchInvoke( Load_Ramp(Load:0, Load_RampType_Stop, rampRate, Level:0), _:loads);
					
					if (DoesBufferExist(initialValue))
					{
						for (new i = 0 ; i < count ; i++)
						{
							currentLevel = Level:BufferGetAt(initialValue, i) - Load_GetLevel(loads[i]);
							if (currentLevel > maxLevel) maxLevel = currentLevel;
						}
						for (new i = 0 ; i < count ; i++)
						{
							Load_Ramp(loads[i], Load_RampType_Variable, Seconds:0.5, Level:BufferGetAt(initialValue, i) - maxLevel);
						}
					}
				}
			case AdjustAction_Bump:
				{
					maxLevel = Level:100.0;
					for (new i = 0 ; i < count ; i++)
					{
						currentLevel = Load_GetLevel(loads[i]);
						if (maxLevel > currentLevel) maxLevel = currentLevel;
					}
					
					for (new i = 0 ; i < count ; i++)
					{
						Load_Ramp(loads[i], Load_RampType_Variable, rampRate, Load_GetLevel(loads[i]) - (((maxLevel - bumpPercentage) < Level:0) ?  (maxLevel) : bumpPercentage));
					}
				}
			}
		}
	}
	return Number:0;
}?>
    </Object>
    <Object>
      <Area VID="17" Master="9722" MTime="" ExcludeFromWidgets="True">
        <Name>Utility Cupboard</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Area</ObjectType>
        <Area>6</Area>
        <Location>0</Location>
        <AreaType>
        </AreaType>
        <EnclosureArea>0</EnclosureArea>
      </Area>
    </Object>
    <Object>
      <Area VID="18" Master="9722" MTime="" ExcludeFromWidgets="False">
        <Name>Hall</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Area</ObjectType>
        <Area>6</Area>
        <Location>1</Location>
        <AreaType>
        </AreaType>
        <EnclosureArea>0</EnclosureArea>
      </Area>
    </Object>
    <Object>
      <Area VID="19" Master="9722" MTime="">
        <Name>Living</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Area</ObjectType>
        <Area>6</Area>
        <Location>2</Location>
        <AreaType>
        </AreaType>
        <EnclosureArea>0</EnclosureArea>
      </Area>
    </Object>
    <Object>
      <Area VID="20" Master="9722" MTime="">
        <Name>Kitchen</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Area</ObjectType>
        <Area>6</Area>
        <Location>4</Location>
        <AreaType>
        </AreaType>
        <EnclosureArea>0</EnclosureArea>
      </Area>
    </Object>
    <Object>
      <Area VID="21" Master="9722" MTime="">
        <Name>Dining</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Area</ObjectType>
        <Area>6</Area>
        <Location>3</Location>
        <AreaType>
        </AreaType>
        <EnclosureArea>0</EnclosureArea>
      </Area>
    </Object>
    <Object>
      <Area VID="22" Master="9722" MTime="">
        <Name>Bed 1</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Area</ObjectType>
        <Area>6</Area>
        <Location>5</Location>
        <AreaType>
        </AreaType>
        <EnclosureArea>0</EnclosureArea>
      </Area>
    </Object>
    <Object>
      <Area VID="23" Master="9722" MTime="" ExcludeFromWidgets="False">
        <Name>Bed 1 En-Suite</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Area</ObjectType>
        <Area>6</Area>
        <Location>6</Location>
        <AreaType>
        </AreaType>
        <EnclosureArea>0</EnclosureArea>
      </Area>
    </Object>
    <Object>
      <Area VID="24" Master="9722" MTime="">
        <Name>Bed 2</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Area</ObjectType>
        <Area>6</Area>
        <Location>7</Location>
        <AreaType>
        </AreaType>
        <EnclosureArea>0</EnclosureArea>
      </Area>
    </Object>
    <Object>
      <Area VID="27" Master="9722" MTime="" ExcludeFromWidgets="False">
        <Name>Bathroom</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Area</ObjectType>
        <Area>6</Area>
        <Location>9</Location>
        <AreaType>
        </AreaType>
        <EnclosureArea>0</EnclosureArea>
      </Area>
    </Object>
    <Object>
      <DinEnclosure VID="38" Master="9722" MTime="">
        <Name>DIN Enclosure 1</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>DinEnclosure</ObjectType>
        <Area>0</Area>
        <Location>
        </Location>
        <Position>1</Position>
        <DinModules>23</DinModules>
        <Rows>4</Rows>
      </DinEnclosure>
    </Object>
    <Object>
      <DINLVOSPWM VID="52" Master="9722" MTime="">
        <Name>DIN Low Voltage Output Station 1</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>DINLVOSPWM</ObjectType>
        <Area>17</Area>
        <Location>
        </Location>
        <SerialNumber>5010315</SerialNumber>
        <Bus>2</Bus>
        <DINEnclosure Position="0" Row="1">38</DINEnclosure>
        <ModuleCount>9</ModuleCount>
      </DINLVOSPWM>
    </Object>
    <Object>
      <Load VID="53" Position="" Master="9722" MTime="">
        <Name>Bed 1 - Main Spots</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <ContractorNumber>A9</ContractorNumber>
        <DName>Main Spots</DName>
        <FixtureDefinition>0</FixtureDefinition>
        <LoadType>Fluor. Electronic Dim</LoadType>
        <FixturePower>100</FixturePower>
        <FixtureQuantity>1</FixtureQuantity>
        <Power>100</Power>
        <OverrideLevel>100</OverrideLevel>
        <Parent Position="8">52</Parent>
        <ObjectType>Load</ObjectType>
        <Area>22</Area>
        <Location>
        </Location>
        <PowerProfile>10</PowerProfile>
      </Load>
    </Object>
    <Object>
      <Load VID="54" Position="" Master="9722" MTime="">
        <Name>Bed 1 - Window LED</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <ContractorNumber>A10</ContractorNumber>
        <DName>LED 1</DName>
        <FixtureDefinition>0</FixtureDefinition>
        <LoadType>Fluor. Electronic Dim</LoadType>
        <FixturePower>100</FixturePower>
        <FixtureQuantity>1</FixtureQuantity>
        <Power>100</Power>
        <OverrideLevel>100</OverrideLevel>
        <Parent Position="7">65</Parent>
        <ObjectType>Load</ObjectType>
        <Area>22</Area>
        <Location>
        </Location>
        <PowerProfile>10</PowerProfile>
      </Load>
    </Object>
    <Object>
      <Load VID="55" Position="" Master="9722" MTime="">
        <Name>Bed 1 - Bedside Spots</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <ContractorNumber>A11</ContractorNumber>
        <DName>Bed Spots</DName>
        <FixtureDefinition>0</FixtureDefinition>
        <LoadType>Fluor. Electronic Dim</LoadType>
        <FixturePower>100</FixturePower>
        <FixtureQuantity>1</FixtureQuantity>
        <Power>100</Power>
        <OverrideLevel>100</OverrideLevel>
        <Parent Position="1">65</Parent>
        <ObjectType>Load</ObjectType>
        <Area>22</Area>
        <Location>
        </Location>
        <PowerProfile>10</PowerProfile>
      </Load>
    </Object>
    <Object>
      <Load VID="56" Position="" Master="9722" MTime="">
        <Name>Bed 2 - Main Spots</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <ContractorNumber>A12</ContractorNumber>
        <DName>Main Spots</DName>
        <FixtureDefinition>0</FixtureDefinition>
        <LoadType>Fluor. Electronic Dim</LoadType>
        <FixturePower>100</FixturePower>
        <FixtureQuantity>1</FixtureQuantity>
        <Power>100</Power>
        <OverrideLevel>100</OverrideLevel>
        <Parent Position="7">78</Parent>
        <ObjectType>Load</ObjectType>
        <Area>24</Area>
        <Location>
        </Location>
        <PowerProfile>10</PowerProfile>
      </Load>
    </Object>
    <Object>
      <Load VID="57" Position="" Master="9722" MTime="">
        <Name>Bed 2 - Bedside Spots</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <ContractorNumber>A13</ContractorNumber>
        <DName>Bed Spots</DName>
        <FixtureDefinition>0</FixtureDefinition>
        <LoadType>Fluor. Electronic Dim</LoadType>
        <FixturePower>100</FixturePower>
        <FixtureQuantity>1</FixtureQuantity>
        <Power>100</Power>
        <OverrideLevel>100</OverrideLevel>
        <Parent Position="3">78</Parent>
        <ObjectType>Load</ObjectType>
        <Area>24</Area>
        <Location>
        </Location>
        <PowerProfile>10</PowerProfile>
      </Load>
    </Object>
    <Object>
      <Load VID="58" Position="" Master="9722" MTime="">
        <Name>Bed 2  LED</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <ContractorNumber>A14</ContractorNumber>
        <DName>LED</DName>
        <FixtureDefinition>0</FixtureDefinition>
        <LoadType>Fluor. Electronic Dim</LoadType>
        <FixturePower>100</FixturePower>
        <FixtureQuantity>1</FixtureQuantity>
        <Power>100</Power>
        <OverrideLevel>100</OverrideLevel>
        <Parent Position="2">78</Parent>
        <ObjectType>Load</ObjectType>
        <Area>24</Area>
        <Location>
        </Location>
        <PowerProfile>10</PowerProfile>
      </Load>
    </Object>
    <Object>
      <DryContact VID="61" Master="9722" MTime="" Position="">
        <Name>Dry Contact 1</Name>
        <Note>
        </Note>
        <Model>Dry Contact</Model>
        <DName>Smoke Alarm On</DName>
        <ObjectType>DryContact</ObjectType>
        <Area>17</Area>
        <Location>
        </Location>
        <Parent Position="1">52</Parent>
        <Down>9942</Down>
        <Up>0</Up>
        <ReversePolarity>false</ReversePolarity>
        <HoldOnTime>0</HoldOnTime>
      </DryContact>
    </Object>
    <Object>
      <DryContact VID="62" Master="9722" MTime="" Position="">
        <Name>
        </Name>
        <Note>
        </Note>
        <Model>Dry Contact</Model>
        <DName>
        </DName>
        <ObjectType>DryContact</ObjectType>
        <Area>17</Area>
        <Location>
        </Location>
        <Parent Position="2">52</Parent>
        <Down>0</Down>
        <Up>0</Up>
        <ReversePolarity>true</ReversePolarity>
        <HoldOnTime>0</HoldOnTime>
      </DryContact>
    </Object>
    <Object>
      <DryContact VID="63" Master="9722" MTime="" Position="">
        <Name>Dry Contact 3</Name>
        <Note>
        </Note>
        <Model>Dry Contact</Model>
        <DName>
        </DName>
        <ObjectType>DryContact</ObjectType>
        <Area>0</Area>
        <Location>
        </Location>
        <Parent Position="3">52</Parent>
        <Down>0</Down>
        <Up>0</Up>
        <ReversePolarity>false</ReversePolarity>
        <HoldOnTime>0</HoldOnTime>
      </DryContact>
    </Object>
    <Object>
      <DryContact VID="64" Master="9722" MTime="" Position="">
        <Name>Dry Contact 4</Name>
        <Note>
        </Note>
        <Model>Dry Contact</Model>
        <DName>
        </DName>
        <ObjectType>DryContact</ObjectType>
        <Area>0</Area>
        <Location>
        </Location>
        <Parent Position="4">52</Parent>
        <Down>0</Down>
        <Up>0</Up>
        <ReversePolarity>false</ReversePolarity>
        <HoldOnTime>0</HoldOnTime>
      </DryContact>
    </Object>
    <Object>
      <DINLVOSPWM VID="65" Master="9722" MTime="">
        <Name>DIN Low Voltage Output Station 2</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>DINLVOSPWM</ObjectType>
        <Area>17</Area>
        <Location>
        </Location>
        <SerialNumber>5010313</SerialNumber>
        <Bus>2</Bus>
        <DINEnclosure Position="1" Row="1">38</DINEnclosure>
        <ModuleCount>9</ModuleCount>
      </DINLVOSPWM>
    </Object>
    <Object>
      <Load VID="66" Position="" Master="9722" MTime="">
        <Name>Living Room Spots</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <ContractorNumber>A17</ContractorNumber>
        <DName>Living</DName>
        <FixtureDefinition>0</FixtureDefinition>
        <LoadType>Fluor. Electronic Dim</LoadType>
        <FixturePower>100</FixturePower>
        <FixtureQuantity>1</FixtureQuantity>
        <Power>100</Power>
        <OverrideLevel>100</OverrideLevel>
        <Parent Position="1">52</Parent>
        <ObjectType>Load</ObjectType>
        <Area>19</Area>
        <Location>
        </Location>
        <PowerProfile>10</PowerProfile>
      </Load>
    </Object>
    <Object>
      <Load VID="67" Position="" Master="9722" MTime="">
        <Name>Living Room LED</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <ContractorNumber>A18</ContractorNumber>
        <DName>LED</DName>
        <FixtureDefinition>0</FixtureDefinition>
        <LoadType>Fluor. Electronic Dim</LoadType>
        <FixturePower>100</FixturePower>
        <FixtureQuantity>1</FixtureQuantity>
        <Power>100</Power>
        <OverrideLevel>100</OverrideLevel>
        <Parent Position="4">78</Parent>
        <ObjectType>Load</ObjectType>
        <Area>19</Area>
        <Location>
        </Location>
        <PowerProfile>10</PowerProfile>
      </Load>
    </Object>
    <Object>
      <Load VID="70" Position="" Master="9722" MTime="">
        <Name>Kitchen Spots</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <ContractorNumber>A21</ContractorNumber>
        <DName>Spots 1</DName>
        <FixtureDefinition>0</FixtureDefinition>
        <LoadType>Fluor. Electronic Dim</LoadType>
        <FixturePower>100</FixturePower>
        <FixtureQuantity>1</FixtureQuantity>
        <Power>100</Power>
        <OverrideLevel>100</OverrideLevel>
        <Parent Position="6">52</Parent>
        <ObjectType>Load</ObjectType>
        <Area>20</Area>
        <Location>
        </Location>
        <PowerProfile>10</PowerProfile>
      </Load>
    </Object>
    <Object>
      <Load VID="71" Position="" Master="9722" MTime="">
        <Name>Bathroom Spots</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <ContractorNumber>A22</ContractorNumber>
        <DName>Spots</DName>
        <FixtureDefinition>0</FixtureDefinition>
        <LoadType>Fluor. Electronic Dim</LoadType>
        <FixturePower>100</FixturePower>
        <FixtureQuantity>1</FixtureQuantity>
        <Power>100</Power>
        <OverrideLevel>100</OverrideLevel>
        <Parent Position="4">65</Parent>
        <ObjectType>Load</ObjectType>
        <Area>27</Area>
        <Location>
        </Location>
        <PowerProfile>10</PowerProfile>
      </Load>
    </Object>
    <Object>
      <DryContact VID="74" Master="9722" MTime="" Position="">
        <Name>Smoke alarm on</Name>
        <Note>
        </Note>
        <Model>Dry Contact</Model>
        <DName>Smoke Alarm</DName>
        <ObjectType>DryContact</ObjectType>
        <Area>17</Area>
        <Location>
        </Location>
        <Parent Position="1">65</Parent>
        <Down>9942</Down>
        <Up>0</Up>
        <ReversePolarity>true</ReversePolarity>
        <HoldOnTime>0</HoldOnTime>
      </DryContact>
    </Object>
    <Object>
      <DryContact VID="75" Master="9722" MTime="" Position="">
        <Name>Dry Contact 2</Name>
        <Note>
        </Note>
        <Model>Dry Contact</Model>
        <DName>
        </DName>
        <ObjectType>DryContact</ObjectType>
        <Area>0</Area>
        <Location>
        </Location>
        <Parent Position="2">65</Parent>
        <Down>0</Down>
        <Up>0</Up>
        <ReversePolarity>false</ReversePolarity>
        <HoldOnTime>0</HoldOnTime>
      </DryContact>
    </Object>
    <Object>
      <DryContact VID="76" Master="9722" MTime="" Position="">
        <Name>Dry Contact 3</Name>
        <Note>
        </Note>
        <Model>Dry Contact</Model>
        <DName>
        </DName>
        <ObjectType>DryContact</ObjectType>
        <Area>0</Area>
        <Location>
        </Location>
        <Parent Position="3">65</Parent>
        <Down>0</Down>
        <Up>0</Up>
        <ReversePolarity>false</ReversePolarity>
        <HoldOnTime>0</HoldOnTime>
      </DryContact>
    </Object>
    <Object>
      <DryContact VID="77" Master="9722" MTime="" Position="">
        <Name>Dry Contact 4</Name>
        <Note>
        </Note>
        <Model>Dry Contact</Model>
        <DName>
        </DName>
        <ObjectType>DryContact</ObjectType>
        <Area>0</Area>
        <Location>
        </Location>
        <Parent Position="4">65</Parent>
        <Down>0</Down>
        <Up>0</Up>
        <ReversePolarity>false</ReversePolarity>
        <HoldOnTime>0</HoldOnTime>
      </DryContact>
    </Object>
    <Object>
      <DINLVOSPWM VID="78" Master="9722" MTime="">
        <Name>DIN Low Voltage Output Station 3</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>DINLVOSPWM</ObjectType>
        <Area>17</Area>
        <Location>
        </Location>
        <SerialNumber>5010293</SerialNumber>
        <Bus>2</Bus>
        <DINEnclosure Position="0" Row="2">38</DINEnclosure>
        <ModuleCount>9</ModuleCount>
      </DINLVOSPWM>
    </Object>
    <Object>
      <Load VID="79" Position="" Master="9722" MTime="">
        <Name>Hallway Spots</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <ContractorNumber>A25</ContractorNumber>
        <DName>Hall Spots</DName>
        <FixtureDefinition>0</FixtureDefinition>
        <LoadType>Fluor. Electronic Dim</LoadType>
        <FixturePower>100</FixturePower>
        <FixtureQuantity>1</FixtureQuantity>
        <Power>100</Power>
        <OverrideLevel>100</OverrideLevel>
        <Parent Position="4">52</Parent>
        <ObjectType>Load</ObjectType>
        <Area>18</Area>
        <Location>
        </Location>
        <PowerProfile>10</PowerProfile>
      </Load>
    </Object>
    <Object>
      <Load VID="83" Position="" Master="9722" MTime="">
        <Name>Kitchen LED</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <ContractorNumber>A29</ContractorNumber>
        <DName>Kitchen LED</DName>
        <FixtureDefinition>0</FixtureDefinition>
        <LoadType>Fluor. Electronic Dim</LoadType>
        <FixturePower>100</FixturePower>
        <FixtureQuantity>1</FixtureQuantity>
        <Power>100</Power>
        <OverrideLevel>100</OverrideLevel>
        <Parent Position="5">52</Parent>
        <ObjectType>Load</ObjectType>
        <Area>20</Area>
        <Location>
        </Location>
        <PowerProfile>7893</PowerProfile>
      </Load>
    </Object>
    <Object>
      <Load VID="84" Position="" Master="9722" MTime="">
        <Name>Bathroom Mirror Lights</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <ContractorNumber>A30</ContractorNumber>
        <DName>Mirror</DName>
        <FixtureDefinition>0</FixtureDefinition>
        <LoadType>Fluor. Electronic Dim</LoadType>
        <FixturePower>100</FixturePower>
        <FixtureQuantity>1</FixtureQuantity>
        <Power>100</Power>
        <OverrideLevel>100</OverrideLevel>
        <Parent Position="2">65</Parent>
        <ObjectType>Load</ObjectType>
        <Area>27</Area>
        <Location>
        </Location>
        <PowerProfile>10</PowerProfile>
      </Load>
    </Object>
    <Object>
      <Load VID="86" Position="" Master="9722" MTime="" ExcludeFromWidgets="True">
        <Name>Bed 1 En-Suite Mirror Lights</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <ContractorNumber>A32</ContractorNumber>
        <DName>Mirror</DName>
        <FixtureDefinition>0</FixtureDefinition>
        <LoadType>Fluor. Electronic Dim</LoadType>
        <FixturePower>100</FixturePower>
        <FixtureQuantity>1</FixtureQuantity>
        <Power>100</Power>
        <OverrideLevel>100</OverrideLevel>
        <Parent Position="3">65</Parent>
        <ObjectType>Load</ObjectType>
        <Area>23</Area>
        <Location>
        </Location>
        <PowerProfile>10</PowerProfile>
      </Load>
    </Object>
    <Object>
      <DryContact VID="87" Master="9722" MTime="" Position="">
        <Name>Dry Contact 1</Name>
        <Note>
        </Note>
        <Model>Dry Contact</Model>
        <DName>
        </DName>
        <ObjectType>DryContact</ObjectType>
        <Area>0</Area>
        <Location>
        </Location>
        <Parent Position="1">78</Parent>
        <Down>0</Down>
        <Up>0</Up>
        <ReversePolarity>false</ReversePolarity>
        <HoldOnTime>0</HoldOnTime>
      </DryContact>
    </Object>
    <Object>
      <DryContact VID="88" Master="9722" MTime="" Position="">
        <Name>Dry Contact 2</Name>
        <Note>
        </Note>
        <Model>Dry Contact</Model>
        <DName>
        </DName>
        <ObjectType>DryContact</ObjectType>
        <Area>0</Area>
        <Location>
        </Location>
        <Parent Position="2">78</Parent>
        <Down>0</Down>
        <Up>0</Up>
        <ReversePolarity>false</ReversePolarity>
        <HoldOnTime>0</HoldOnTime>
      </DryContact>
    </Object>
    <Object>
      <DryContact VID="89" Master="9722" MTime="" Position="">
        <Name>Dry Contact 3</Name>
        <Note>
        </Note>
        <Model>Dry Contact</Model>
        <DName>
        </DName>
        <ObjectType>DryContact</ObjectType>
        <Area>0</Area>
        <Location>
        </Location>
        <Parent Position="3">78</Parent>
        <Down>0</Down>
        <Up>0</Up>
        <ReversePolarity>false</ReversePolarity>
        <HoldOnTime>0</HoldOnTime>
      </DryContact>
    </Object>
    <Object>
      <DryContact VID="90" Master="9722" MTime="" Position="">
        <Name>Dry Contact 4</Name>
        <Note>
        </Note>
        <Model>Dry Contact</Model>
        <DName>
        </DName>
        <ObjectType>DryContact</ObjectType>
        <Area>0</Area>
        <Location>
        </Location>
        <Parent Position="4">78</Parent>
        <Down>0</Down>
        <Up>0</Up>
        <ReversePolarity>false</ReversePolarity>
        <HoldOnTime>0</HoldOnTime>
      </DryContact>
    </Object>
    <Object>
      <DIN10AmpRelayStation VID="92" Master="9722" MTime="">
        <Name>Blinds Relay Station 1</Name>
        <Model>RS8-DIN</Model>
        <Note>
        </Note>
        <DName>Blinds Relay Station 1</DName>
        <ObjectType>DIN10AmpRelayStation</ObjectType>
        <Area>17</Area>
        <Location>
        </Location>
        <SerialNumber>5004421</SerialNumber>
        <Bus>2</Bus>
        <DINEnclosure Position="0" Row="3">38</DINEnclosure>
        <ModuleCount>9</ModuleCount>
      </DIN10AmpRelayStation>
    </Object>
    <Object>
      <Load VID="100" Position="" Master="9722" MTime="" ExcludeFromWidgets="True">
        <Name>Master Bed Blinds Start/Stop 2</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <ContractorNumber>A39</ContractorNumber>
        <DName>B1 Start/Stop 2</DName>
        <FixtureDefinition>0</FixtureDefinition>
        <LoadType>High Voltage Relay</LoadType>
        <FixturePower>100</FixturePower>
        <FixtureQuantity>1</FixtureQuantity>
        <Power>100</Power>
        <OverrideLevel>100</OverrideLevel>
        <Parent Position="7">92</Parent>
        <ObjectType>Load</ObjectType>
        <Area>10147</Area>
        <Location>
        </Location>
        <PowerProfile>9</PowerProfile>
      </Load>
    </Object>
    <Object>
      <Load VID="101" Position="" Master="9722" MTime="" ExcludeFromWidgets="True">
        <Name>Master Bed Blinds Open Close 2</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <ContractorNumber>A40</ContractorNumber>
        <DName>B1 Up/Down 2</DName>
        <FixtureDefinition>0</FixtureDefinition>
        <LoadType>High Voltage Relay</LoadType>
        <FixturePower>100</FixturePower>
        <FixtureQuantity>1</FixtureQuantity>
        <Power>100</Power>
        <OverrideLevel>100</OverrideLevel>
        <Parent Position="8">92</Parent>
        <ObjectType>Load</ObjectType>
        <Area>10147</Area>
        <Location>
        </Location>
        <PowerProfile>9</PowerProfile>
      </Load>
    </Object>
    <Object>
      <Load VID="104" Position="" Master="9722" MTime="" ExcludeFromWidgets="True">
        <Name>Bed 2 Blinds Up/Down</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <ContractorNumber>A43</ContractorNumber>
        <DName>B2 Up/Down</DName>
        <FixtureDefinition>0</FixtureDefinition>
        <LoadType>High Voltage Relay</LoadType>
        <FixturePower>100</FixturePower>
        <FixtureQuantity>1</FixtureQuantity>
        <Power>100</Power>
        <OverrideLevel>100</OverrideLevel>
        <Parent Position="6">92</Parent>
        <ObjectType>Load</ObjectType>
        <Area>10147</Area>
        <Location>
        </Location>
        <PowerProfile>9</PowerProfile>
      </Load>
    </Object>
    <Object>
      <Load VID="105" Position="" Master="9722" MTime="" ExcludeFromWidgets="True">
        <Name>Bed 2 Blinds Start/Stop</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <ContractorNumber>A44</ContractorNumber>
        <DName>B2 Start/Stop</DName>
        <FixtureDefinition>0</FixtureDefinition>
        <LoadType>High Voltage Relay</LoadType>
        <FixturePower>100</FixturePower>
        <FixtureQuantity>1</FixtureQuantity>
        <Power>100</Power>
        <OverrideLevel>100</OverrideLevel>
        <Parent Position="5">92</Parent>
        <ObjectType>Load</ObjectType>
        <Area>10147</Area>
        <Location>
        </Location>
        <PowerProfile>9</PowerProfile>
      </Load>
    </Object>
    <Object>
      <Load VID="112" Position="" Master="9722" MTime="" ExcludeFromWidgets="True">
        <Name>Living Open/Close 1</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <ContractorNumber>A51</ContractorNumber>
        <DName>Living Open/Close 1</DName>
        <FixtureDefinition>0</FixtureDefinition>
        <LoadType>High Voltage Relay</LoadType>
        <FixturePower>100</FixturePower>
        <FixtureQuantity>1</FixtureQuantity>
        <Power>100</Power>
        <OverrideLevel>100</OverrideLevel>
        <Parent Position="2">10268</Parent>
        <ObjectType>Load</ObjectType>
        <Area>10147</Area>
        <Location>
        </Location>
        <PowerProfile>9</PowerProfile>
      </Load>
    </Object>
    <Object>
      <Load VID="113" Position="" Master="9722" MTime="" ExcludeFromWidgets="True">
        <Name>Living Start/Stop 1</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <ContractorNumber>A52</ContractorNumber>
        <DName>Living Start/Stop 1</DName>
        <FixtureDefinition>0</FixtureDefinition>
        <LoadType>High Voltage Relay</LoadType>
        <FixturePower>100</FixturePower>
        <FixtureQuantity>1</FixtureQuantity>
        <Power>100</Power>
        <OverrideLevel>100</OverrideLevel>
        <Parent Position="1">10268</Parent>
        <ObjectType>Load</ObjectType>
        <Area>10147</Area>
        <Location>
        </Location>
        <PowerProfile>9</PowerProfile>
      </Load>
    </Object>
    <Object>
      <EqCtrlStyle VID="117" Master="0" MTime="">
        <Name>Equinox Keypad Style 1</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>EqCtrlStyle</ObjectType>
        <Backlight>
          <ActiveIntensity>100</ActiveIntensity>
          <InactiveIntensity>50</InactiveIntensity>
          <AutoOffWhenDark>true</AutoOffWhenDark>
          <AutoBrightness>true</AutoBrightness>
          <MinButtonIntensity>2</MinButtonIntensity>
        </Backlight>
        <TextColor>
          <On>FF800000</On>
          <Off>FFFFFF00</Off>
        </TextColor>
        <TempScale>Celsius</TempScale>
        <Sounder>
          <Volume>60</Volume>
          <AutoOff>
          </AutoOff>
        </Sounder>
        <MilitaryTime>false</MilitaryTime>
      </EqCtrlStyle>
    </Object>
    <Object>
      <ButtonStyle VID="119" Master="0" MTime="">
        <Name>OTB</Name>
        <Note>
        </Note>
        <DName>
        </DName>
        <Model>Backlit</Model>
        <ButtonColor>Black</ButtonColor>
        <TextColor>Black</TextColor>
        <ObjectType>ButtonStyle</ObjectType>
        <SoundType>Pulsed</SoundType>
      </ButtonStyle>
    </Object>
    <Object>
      <LEDStyle VID="120" Master="0" MTime="">
        <Name>LED Style 1</Name>
        <Model>RGB</Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>LEDStyle</ObjectType>
        <ColorTable Color1="Red" Color2="Green" Color3="" Color4="">
          <Color ID="2">FF000000</Color>
          <Color ID="3">FF700000</Color>
          <Color ID="1">1A1A1A00</Color>
          <Color ID="4">FF00FF00</Color>
          <Color ID="5">0000FF00</Color>
          <Color ID="0">00001A00</Color>
          <Color ID="6">00000000</Color>
          <Color ID="7">00FF0000</Color>
        </ColorTable>
        <StyleTable Enum="TenState">
          <Mode ID="1" Default="true">
            <Entry Color="1">0</Entry>
            <Entry Color="5">1</Entry>
            <Entry Color="5">2</Entry>
            <Entry Color="5">3</Entry>
            <Entry Color="2" BlinkOffColor="1" Blink="Medium">4</Entry>
            <Entry Color="1">5</Entry>
            <Entry Color="1">6</Entry>
            <Entry Color="1">7</Entry>
            <Entry Color="1">8</Entry>
            <Entry Color="1">9</Entry>
          </Mode>
          <Mode ID="2" Default="false">
            <Entry Color="2" BlinkOffColor="1" Blink="Medium">0</Entry>
            <Entry Color="2" BlinkOffColor="1" Blink="Medium">1</Entry>
            <Entry Color="2" BlinkOffColor="1" Blink="Medium">2</Entry>
            <Entry Color="2" BlinkOffColor="1" Blink="Medium">3</Entry>
            <Entry Color="2" BlinkOffColor="1" Blink="Medium">4</Entry>
            <Entry Color="1">5</Entry>
            <Entry Color="1">6</Entry>
            <Entry Color="1">7</Entry>
            <Entry Color="1">8</Entry>
            <Entry Color="1">9</Entry>
          </Mode>
        </StyleTable>
      </LEDStyle>
    </Object>
    <Object>
      <Preset VID="136" Master="9722" MTime="2016-09-28T13:44:13.686" Preset="AM">
        <Name>AMBand 1</Name>
        <Model>AM</Model>
        <Note />
        <DName />
        <Category>7</Category>
        <Setup>
          <Action Function="" />
        </Setup>
        <PresetTable>
          <Preset Name="Preset 1">
            <Action Function="Tuner.SelectFrequency">
              <val>540</val>
            </Action>
          </Preset>
          <Preset Name="Preset 2" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>770</val>
            </Action>
          </Preset>
          <Preset Name="Preset 3" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>1000</val>
            </Action>
          </Preset>
          <Preset Name="Preset 4" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>1230</val>
            </Action>
          </Preset>
          <Preset Name="Preset 5" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>1460</val>
            </Action>
          </Preset>
          <Preset Name="Preset 6" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>1690</val>
            </Action>
          </Preset>
        </PresetTable>
        <DeviceTable />
        <ObjectType>Preset</ObjectType>
      </Preset>
    </Object>
    <Object>
      <Preset VID="137" Master="9722" MTime="2016-09-28T13:44:13.687" Preset="FM">
        <Name>FMBand 1</Name>
        <Model>FM</Model>
        <Note />
        <DName />
        <Category>7</Category>
        <Setup>
          <Action Function="" />
        </Setup>
        <PresetTable>
          <Preset Name="Preset 1" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>87.5</val>
            </Action>
          </Preset>
          <Preset Name="Preset 2">
            <Action Function="Tuner.SelectFrequency">
              <val>91.5</val>
            </Action>
          </Preset>
          <Preset Name="Preset 3" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>95.5</val>
            </Action>
          </Preset>
          <Preset Name="Preset 4" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>99.5</val>
            </Action>
          </Preset>
          <Preset Name="Preset 5">
            <Action Function="Tuner.SelectFrequency">
              <val>103.5</val>
            </Action>
          </Preset>
          <Preset Name="Preset 6" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>107.5</val>
            </Action>
          </Preset>
        </PresetTable>
        <DeviceTable />
        <ObjectType>Preset</ObjectType>
      </Preset>
    </Object>
    <Object>
      <Preset VID="138" Master="9722" MTime="2016-09-28T13:44:13.688" Preset="XM">
        <Name>XMBand 1</Name>
        <Model>XM</Model>
        <Note />
        <DName />
        <Category>7</Category>
        <Setup>
          <Action Function="" />
        </Setup>
        <PresetTable>
          <Preset Name="Preset 1" GenericIcon="true">
            <Action Function="Channel.Set">
              <val>1</val>
            </Action>
          </Preset>
          <Preset Name="Preset 2">
            <Action Function="Channel.Set">
              <val>1</val>
            </Action>
          </Preset>
          <Preset Name="Preset 3" GenericIcon="true">
            <Action Function="Channel.Set">
              <val>1</val>
            </Action>
          </Preset>
          <Preset Name="Preset 4">
            <Action Function="Channel.Set">
              <val>1</val>
            </Action>
          </Preset>
          <Preset Name="Preset 5">
            <Action Function="Channel.Set">
              <val>1</val>
            </Action>
          </Preset>
          <Preset Name="Preset 6">
            <Action Function="Channel.Set">
              <val>1</val>
            </Action>
          </Preset>
        </PresetTable>
        <DeviceTable />
        <ObjectType>Preset</ObjectType>
      </Preset>
    </Object>
    <Object>
      <Preset VID="156" Master="9722" MTime="2016-09-28T13:44:13.689" Preset="AM">
        <Name>AMBand 1</Name>
        <Model>AM</Model>
        <Note />
        <DName />
        <Category>7</Category>
        <Setup>
          <Action Function="" />
        </Setup>
        <PresetTable>
          <Preset Name="Preset 1">
            <Action Function="Tuner.SelectFrequency">
              <val>540</val>
            </Action>
          </Preset>
          <Preset Name="Preset 2">
            <Action Function="Tuner.SelectFrequency">
              <val>770</val>
            </Action>
          </Preset>
          <Preset Name="Preset 3" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>1000</val>
            </Action>
          </Preset>
          <Preset Name="Preset 4">
            <Action Function="Tuner.SelectFrequency">
              <val>1230</val>
            </Action>
          </Preset>
          <Preset Name="Preset 5" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>1460</val>
            </Action>
          </Preset>
          <Preset Name="Preset 6" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>1690</val>
            </Action>
          </Preset>
        </PresetTable>
        <DeviceTable />
        <ObjectType>Preset</ObjectType>
      </Preset>
    </Object>
    <Object>
      <Preset VID="157" Master="9722" MTime="2016-09-28T13:44:13.689" Preset="FM">
        <Name>FMBand 1</Name>
        <Model>FM</Model>
        <Note />
        <DName />
        <Category>7</Category>
        <Setup>
          <Action Function="" />
        </Setup>
        <PresetTable>
          <Preset Name="Preset 1">
            <Action Function="Tuner.SelectFrequency">
              <val>87.5</val>
            </Action>
          </Preset>
          <Preset Name="Preset 2" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>91.5</val>
            </Action>
          </Preset>
          <Preset Name="Preset 3" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>95.5</val>
            </Action>
          </Preset>
          <Preset Name="Preset 4" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>99.5</val>
            </Action>
          </Preset>
          <Preset Name="Preset 5" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>103.5</val>
            </Action>
          </Preset>
          <Preset Name="Preset 6" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>107.5</val>
            </Action>
          </Preset>
        </PresetTable>
        <DeviceTable />
        <ObjectType>Preset</ObjectType>
      </Preset>
    </Object>
    <Object>
      <Preset VID="158" Master="9722" MTime="2016-09-28T13:44:13.691" Preset="XM">
        <Name>XMBand 1</Name>
        <Model>XM</Model>
        <Note />
        <DName />
        <Category>7</Category>
        <Setup>
          <Action Function="" />
        </Setup>
        <PresetTable>
          <Preset Name="Preset 1">
            <Action Function="Channel.Set">
              <val>1</val>
            </Action>
          </Preset>
          <Preset Name="Preset 2">
            <Action Function="Channel.Set">
              <val>1</val>
            </Action>
          </Preset>
          <Preset Name="Preset 3" GenericIcon="true">
            <Action Function="Channel.Set">
              <val>1</val>
            </Action>
          </Preset>
          <Preset Name="Preset 4" GenericIcon="true">
            <Action Function="Channel.Set">
              <val>1</val>
            </Action>
          </Preset>
          <Preset Name="Preset 5" GenericIcon="true">
            <Action Function="Channel.Set">
              <val>1</val>
            </Action>
          </Preset>
          <Preset Name="Preset 6" GenericIcon="true">
            <Action Function="Channel.Set">
              <val>1</val>
            </Action>
          </Preset>
        </PresetTable>
        <DeviceTable />
        <ObjectType>Preset</ObjectType>
      </Preset>
    </Object>
    <Object>
      <Preset VID="176" Master="9722" MTime="2016-09-28T13:44:13.691" Preset="AM">
        <Name>AMBand 1</Name>
        <Model>AM</Model>
        <Note />
        <DName />
        <Category>7</Category>
        <Setup>
          <Action Function="" />
        </Setup>
        <PresetTable>
          <Preset Name="Preset 1" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>540</val>
            </Action>
          </Preset>
          <Preset Name="Preset 2" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>770</val>
            </Action>
          </Preset>
          <Preset Name="Preset 3" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>1000</val>
            </Action>
          </Preset>
          <Preset Name="Preset 4" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>1230</val>
            </Action>
          </Preset>
          <Preset Name="Preset 5" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>1460</val>
            </Action>
          </Preset>
          <Preset Name="Preset 6" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>1690</val>
            </Action>
          </Preset>
        </PresetTable>
        <DeviceTable />
        <ObjectType>Preset</ObjectType>
      </Preset>
    </Object>
    <Object>
      <Preset VID="177" Master="9722" MTime="2016-09-28T13:44:13.692" Preset="FM">
        <Name>FMBand 1</Name>
        <Model>FM</Model>
        <Note />
        <DName />
        <Category>7</Category>
        <Setup>
          <Action Function="" />
        </Setup>
        <PresetTable>
          <Preset Name="Preset 1" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>87.5</val>
            </Action>
          </Preset>
          <Preset Name="Preset 2" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>91.5</val>
            </Action>
          </Preset>
          <Preset Name="Preset 3" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>95.5</val>
            </Action>
          </Preset>
          <Preset Name="Preset 4" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>99.5</val>
            </Action>
          </Preset>
          <Preset Name="Preset 5" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>103.5</val>
            </Action>
          </Preset>
          <Preset Name="Preset 6" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>107.5</val>
            </Action>
          </Preset>
        </PresetTable>
        <DeviceTable />
        <ObjectType>Preset</ObjectType>
      </Preset>
    </Object>
    <Object>
      <Preset VID="178" Master="9722" MTime="2016-09-28T13:44:13.692" Preset="XM">
        <Name>XMBand 1</Name>
        <Model>XM</Model>
        <Note />
        <DName />
        <Category>7</Category>
        <Setup>
          <Action Function="" />
        </Setup>
        <PresetTable>
          <Preset Name="Preset 1" GenericIcon="true">
            <Action Function="Channel.Set">
              <val>1</val>
            </Action>
          </Preset>
          <Preset Name="Preset 2" GenericIcon="true">
            <Action Function="Channel.Set">
              <val>1</val>
            </Action>
          </Preset>
          <Preset Name="Preset 3" GenericIcon="true">
            <Action Function="Channel.Set">
              <val>1</val>
            </Action>
          </Preset>
          <Preset Name="Preset 4" GenericIcon="true">
            <Action Function="Channel.Set">
              <val>1</val>
            </Action>
          </Preset>
          <Preset Name="Preset 5" GenericIcon="true">
            <Action Function="Channel.Set">
              <val>1</val>
            </Action>
          </Preset>
          <Preset Name="Preset 6" GenericIcon="true">
            <Action Function="Channel.Set">
              <val>1</val>
            </Action>
          </Preset>
        </PresetTable>
        <DeviceTable />
        <ObjectType>Preset</ObjectType>
      </Preset>
    </Object>
    <Object>
      <Preset VID="196" Master="9722" MTime="2016-09-28T13:44:13.693" Preset="AM">
        <Name>AMBand 1</Name>
        <Model>AM</Model>
        <Note />
        <DName />
        <Category>7</Category>
        <Setup>
          <Action Function="" />
        </Setup>
        <PresetTable>
          <Preset Name="Preset 1" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>540</val>
            </Action>
          </Preset>
          <Preset Name="Preset 2" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>770</val>
            </Action>
          </Preset>
          <Preset Name="Preset 3" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>1000</val>
            </Action>
          </Preset>
          <Preset Name="Preset 4" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>1230</val>
            </Action>
          </Preset>
          <Preset Name="Preset 5" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>1460</val>
            </Action>
          </Preset>
          <Preset Name="Preset 6" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>1690</val>
            </Action>
          </Preset>
        </PresetTable>
        <DeviceTable />
        <ObjectType>Preset</ObjectType>
      </Preset>
    </Object>
    <Object>
      <Preset VID="197" Master="9722" MTime="2016-09-28T13:44:13.694" Preset="FM">
        <Name>FMBand 1</Name>
        <Model>FM</Model>
        <Note />
        <DName />
        <Category>7</Category>
        <Setup>
          <Action Function="" />
        </Setup>
        <PresetTable>
          <Preset Name="Preset 1" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>87.5</val>
            </Action>
          </Preset>
          <Preset Name="Preset 2" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>91.5</val>
            </Action>
          </Preset>
          <Preset Name="Preset 3" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>95.5</val>
            </Action>
          </Preset>
          <Preset Name="Preset 4" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>99.5</val>
            </Action>
          </Preset>
          <Preset Name="Preset 5" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>103.5</val>
            </Action>
          </Preset>
          <Preset Name="Preset 6" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>107.5</val>
            </Action>
          </Preset>
        </PresetTable>
        <DeviceTable />
        <ObjectType>Preset</ObjectType>
      </Preset>
    </Object>
    <Object>
      <Preset VID="198" Master="9722" MTime="2016-09-28T13:44:13.694" Preset="XM">
        <Name>XMBand 1</Name>
        <Model>XM</Model>
        <Note />
        <DName />
        <Category>7</Category>
        <Setup>
          <Action Function="" />
        </Setup>
        <PresetTable>
          <Preset Name="Preset 1" GenericIcon="true">
            <Action Function="Channel.Set">
              <val>1</val>
            </Action>
          </Preset>
          <Preset Name="Preset 2" GenericIcon="true">
            <Action Function="Channel.Set">
              <val>1</val>
            </Action>
          </Preset>
          <Preset Name="Preset 3" GenericIcon="true">
            <Action Function="Channel.Set">
              <val>1</val>
            </Action>
          </Preset>
          <Preset Name="Preset 4" GenericIcon="true">
            <Action Function="Channel.Set">
              <val>1</val>
            </Action>
          </Preset>
          <Preset Name="Preset 5" GenericIcon="true">
            <Action Function="Channel.Set">
              <val>1</val>
            </Action>
          </Preset>
          <Preset Name="Preset 6" GenericIcon="true">
            <Action Function="Channel.Set">
              <val>1</val>
            </Action>
          </Preset>
        </PresetTable>
        <DeviceTable />
        <ObjectType>Preset</ObjectType>
      </Preset>
    </Object>
    <Object>
      <Preset VID="216" Master="9722" MTime="2016-09-28T13:44:13.695" Preset="AM">
        <Name>AMBand 1</Name>
        <Model>AM</Model>
        <Note />
        <DName />
        <Category>7</Category>
        <Setup>
          <Action Function="" />
        </Setup>
        <PresetTable>
          <Preset Name="Preset 1" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>540</val>
            </Action>
          </Preset>
          <Preset Name="Preset 2" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>770</val>
            </Action>
          </Preset>
          <Preset Name="Preset 3" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>1000</val>
            </Action>
          </Preset>
          <Preset Name="Preset 4" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>1230</val>
            </Action>
          </Preset>
          <Preset Name="Preset 5" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>1460</val>
            </Action>
          </Preset>
          <Preset Name="Preset 6" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>1690</val>
            </Action>
          </Preset>
        </PresetTable>
        <DeviceTable />
        <ObjectType>Preset</ObjectType>
      </Preset>
    </Object>
    <Object>
      <Preset VID="217" Master="9722" MTime="2016-09-28T13:44:13.696" Preset="FM">
        <Name>FMBand 1</Name>
        <Model>FM</Model>
        <Note />
        <DName />
        <Category>7</Category>
        <Setup>
          <Action Function="" />
        </Setup>
        <PresetTable>
          <Preset Name="Preset 1" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>87.5</val>
            </Action>
          </Preset>
          <Preset Name="Preset 2" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>91.5</val>
            </Action>
          </Preset>
          <Preset Name="Preset 3" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>95.5</val>
            </Action>
          </Preset>
          <Preset Name="Preset 4" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>99.5</val>
            </Action>
          </Preset>
          <Preset Name="Preset 5" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>103.5</val>
            </Action>
          </Preset>
          <Preset Name="Preset 6" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>107.5</val>
            </Action>
          </Preset>
        </PresetTable>
        <DeviceTable />
        <ObjectType>Preset</ObjectType>
      </Preset>
    </Object>
    <Object>
      <Preset VID="218" Master="9722" MTime="2016-09-28T13:44:13.697" Preset="XM">
        <Name>XMBand 1</Name>
        <Model>XM</Model>
        <Note />
        <DName />
        <Category>7</Category>
        <Setup>
          <Action Function="" />
        </Setup>
        <PresetTable>
          <Preset Name="Preset 1" GenericIcon="true">
            <Action Function="Channel.Set">
              <val>1</val>
            </Action>
          </Preset>
          <Preset Name="Preset 2" GenericIcon="true">
            <Action Function="Channel.Set">
              <val>1</val>
            </Action>
          </Preset>
          <Preset Name="Preset 3" GenericIcon="true">
            <Action Function="Channel.Set">
              <val>1</val>
            </Action>
          </Preset>
          <Preset Name="Preset 4" GenericIcon="true">
            <Action Function="Channel.Set">
              <val>1</val>
            </Action>
          </Preset>
          <Preset Name="Preset 5" GenericIcon="true">
            <Action Function="Channel.Set">
              <val>1</val>
            </Action>
          </Preset>
          <Preset Name="Preset 6" GenericIcon="true">
            <Action Function="Channel.Set">
              <val>1</val>
            </Action>
          </Preset>
        </PresetTable>
        <DeviceTable />
        <ObjectType>Preset</ObjectType>
      </Preset>
    </Object>
    <Object>
      <Preset VID="236" Master="9722" MTime="2016-09-28T13:44:13.697" Preset="AM">
        <Name>AMBand 1</Name>
        <Model>AM</Model>
        <Note />
        <DName />
        <Category>7</Category>
        <Setup>
          <Action Function="" />
        </Setup>
        <PresetTable>
          <Preset Name="Preset 1" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>540</val>
            </Action>
          </Preset>
          <Preset Name="Preset 2" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>770</val>
            </Action>
          </Preset>
          <Preset Name="Preset 3" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>1000</val>
            </Action>
          </Preset>
          <Preset Name="Preset 4" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>1230</val>
            </Action>
          </Preset>
          <Preset Name="Preset 5" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>1460</val>
            </Action>
          </Preset>
          <Preset Name="Preset 6" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>1690</val>
            </Action>
          </Preset>
        </PresetTable>
        <DeviceTable />
        <ObjectType>Preset</ObjectType>
      </Preset>
    </Object>
    <Object>
      <Preset VID="237" Master="9722" MTime="2016-09-28T13:44:13.698" Preset="FM">
        <Name>FMBand 1</Name>
        <Model>FM</Model>
        <Note />
        <DName />
        <Category>7</Category>
        <Setup>
          <Action Function="" />
        </Setup>
        <PresetTable>
          <Preset Name="Preset 1" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>87.5</val>
            </Action>
          </Preset>
          <Preset Name="Preset 2" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>91.5</val>
            </Action>
          </Preset>
          <Preset Name="Preset 3" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>95.5</val>
            </Action>
          </Preset>
          <Preset Name="Preset 4" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>99.5</val>
            </Action>
          </Preset>
          <Preset Name="Preset 5" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>103.5</val>
            </Action>
          </Preset>
          <Preset Name="Preset 6" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>107.5</val>
            </Action>
          </Preset>
        </PresetTable>
        <DeviceTable />
        <ObjectType>Preset</ObjectType>
      </Preset>
    </Object>
    <Object>
      <Preset VID="238" Master="9722" MTime="2016-09-28T13:44:13.699" Preset="XM">
        <Name>XMBand 1</Name>
        <Model>XM</Model>
        <Note />
        <DName />
        <Category>7</Category>
        <Setup>
          <Action Function="" />
        </Setup>
        <PresetTable>
          <Preset Name="Preset 1">
            <Action Function="Channel.Set">
              <val>1</val>
            </Action>
          </Preset>
          <Preset Name="Preset 2" GenericIcon="true">
            <Action Function="Channel.Set">
              <val>1</val>
            </Action>
          </Preset>
          <Preset Name="Preset 3" GenericIcon="true">
            <Action Function="Channel.Set">
              <val>1</val>
            </Action>
          </Preset>
          <Preset Name="Preset 4" GenericIcon="true">
            <Action Function="Channel.Set">
              <val>1</val>
            </Action>
          </Preset>
          <Preset Name="Preset 5" GenericIcon="true">
            <Action Function="Channel.Set">
              <val>1</val>
            </Action>
          </Preset>
          <Preset Name="Preset 6" GenericIcon="true">
            <Action Function="Channel.Set">
              <val>1</val>
            </Action>
          </Preset>
        </PresetTable>
        <DeviceTable />
        <ObjectType>Preset</ObjectType>
      </Preset>
    </Object>
    <Object>
      <Preset VID="256" Master="9722" MTime="2016-09-28T13:44:13.700" Preset="AM">
        <Name>AMBand 1</Name>
        <Model>AM</Model>
        <Note />
        <DName />
        <Category>7</Category>
        <Setup>
          <Action Function="" />
        </Setup>
        <PresetTable>
          <Preset Name="Preset 1" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>540</val>
            </Action>
          </Preset>
          <Preset Name="Preset 2" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>770</val>
            </Action>
          </Preset>
          <Preset Name="Preset 3" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>1000</val>
            </Action>
          </Preset>
          <Preset Name="Preset 4" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>1230</val>
            </Action>
          </Preset>
          <Preset Name="Preset 5" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>1460</val>
            </Action>
          </Preset>
          <Preset Name="Preset 6" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>1690</val>
            </Action>
          </Preset>
        </PresetTable>
        <DeviceTable />
        <ObjectType>Preset</ObjectType>
      </Preset>
    </Object>
    <Object>
      <Preset VID="257" Master="9722" MTime="2016-09-28T13:44:13.700" Preset="FM">
        <Name>FMBand 1</Name>
        <Model>FM</Model>
        <Note />
        <DName />
        <Category>7</Category>
        <Setup>
          <Action Function="" />
        </Setup>
        <PresetTable>
          <Preset Name="Preset 1" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>87.5</val>
            </Action>
          </Preset>
          <Preset Name="Preset 2" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>91.5</val>
            </Action>
          </Preset>
          <Preset Name="Preset 3" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>95.5</val>
            </Action>
          </Preset>
          <Preset Name="Preset 4" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>99.5</val>
            </Action>
          </Preset>
          <Preset Name="Preset 5" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>103.5</val>
            </Action>
          </Preset>
          <Preset Name="Preset 6" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>107.5</val>
            </Action>
          </Preset>
        </PresetTable>
        <DeviceTable />
        <ObjectType>Preset</ObjectType>
      </Preset>
    </Object>
    <Object>
      <Preset VID="258" Master="9722" MTime="2016-09-28T13:44:13.701" Preset="XM">
        <Name>XMBand 1</Name>
        <Model>XM</Model>
        <Note />
        <DName />
        <Category>7</Category>
        <Setup>
          <Action Function="" />
        </Setup>
        <PresetTable>
          <Preset Name="Preset 1" GenericIcon="true">
            <Action Function="Channel.Set">
              <val>1</val>
            </Action>
          </Preset>
          <Preset Name="Preset 2" GenericIcon="true">
            <Action Function="Channel.Set">
              <val>1</val>
            </Action>
          </Preset>
          <Preset Name="Preset 3" GenericIcon="true">
            <Action Function="Channel.Set">
              <val>1</val>
            </Action>
          </Preset>
          <Preset Name="Preset 4" GenericIcon="true">
            <Action Function="Channel.Set">
              <val>1</val>
            </Action>
          </Preset>
          <Preset Name="Preset 5" GenericIcon="true">
            <Action Function="Channel.Set">
              <val>1</val>
            </Action>
          </Preset>
          <Preset Name="Preset 6" GenericIcon="true">
            <Action Function="Channel.Set">
              <val>1</val>
            </Action>
          </Preset>
        </PresetTable>
        <DeviceTable />
        <ObjectType>Preset</ObjectType>
      </Preset>
    </Object>
    <Object>
      <KeypadStyle VID="261" Master="0" MTime="">
        <Name>OTB</Name>
        <Note>
        </Note>
        <DName>
        </DName>
        <Model>Standard</Model>
        <ButtonShape>EasyTouch II</ButtonShape>
        <Design>TrimLine II - Plastic Faceplate</Design>
        <Color>Black</Color>
        <TrimColor>Black</TrimColor>
        <Font>Helvetica</Font>
        <Italic>false</Italic>
        <TextPlacement>true</TextPlacement>
        <AutoBacklight>true</AutoBacklight>
        <MinAutoDimLevel>25</MinAutoDimLevel>
        <SounderFreq>1200</SounderFreq>
        <SounderLength>100</SounderLength>
        <FastBlinkRate>100</FastBlinkRate>
        <ObjectType>KeypadStyle</ObjectType>
        <BacklitButtons>true</BacklitButtons>
        <BacklightLEDStyle>0</BacklightLEDStyle>
      </KeypadStyle>
    </Object>
    <Object>
      <Keypad VID="274" Master="9722" MTime="" Position="">
        <Name>Bed 2 LHS</Name>
        <Note />
        <Model>Default</Model>
        <DName>Bed 2 LHS</DName>
        <ObjectType>Keypad</ObjectType>
        <Area>24</Area>
        <Location />
        <SerialNumber>4127459</SerialNumber>
        <Bus>3</Bus>
        <Parent Position="1">280</Parent>
      </Keypad>
    </Object>
    <Object>
      <Button VID="275" Master="9722" MTime="" Position="" Adjust="None" ExcludeFromWidgets="True">
        <Name>Scene</Name>
        <Model />
        <Note />
        <DName />
        <ObjectType>Button</ObjectType>
        <Parent Position="1">274</Parent>
        <Down>9923</Down>
        <Up>0</Up>
        <Hold>0</Hold>
        <Text1>Scene</Text1>
        <Text2 />
        <PlacementTable />
        <ButtonStyle>119</ButtonStyle>
        <LEDStyle>120</LEDStyle>
      </Button>
    </Object>
    <Object>
      <Button VID="276" Master="9722" MTime="" Position="" Adjust="None" ExcludeFromWidgets="True">
        <Name>Reading</Name>
        <Model />
        <Note />
        <DName />
        <ObjectType>Button</ObjectType>
        <Parent Position="2">274</Parent>
        <Down>9924</Down>
        <Up>9924</Up>
        <Hold>9924</Hold>
        <Text1>Reading</Text1>
        <Text2 />
        <PlacementTable />
        <ButtonStyle>119</ButtonStyle>
        <LEDStyle>120</LEDStyle>
      </Button>
    </Object>
    <Object>
      <Button VID="277" Master="9722" MTime="" Position="" Adjust="None" ExcludeFromWidgets="True">
        <Name>Blind Up</Name>
        <Model />
        <Note />
        <DName />
        <ObjectType>Button</ObjectType>
        <Parent Position="3">274</Parent>
        <Down>9910</Down>
        <Up>0</Up>
        <Hold>0</Hold>
        <Text1>Blind</Text1>
        <Text2>up</Text2>
        <PlacementTable />
        <ButtonStyle>119</ButtonStyle>
        <LEDStyle>120</LEDStyle>
      </Button>
    </Object>
    <Object>
      <Button VID="278" Master="9722" MTime="" Position="" Adjust="None" ExcludeFromWidgets="True">
        <Name>Blind Down</Name>
        <Model />
        <Note />
        <DName />
        <ObjectType>Button</ObjectType>
        <Parent Position="4">274</Parent>
        <Down>9907</Down>
        <Up>0</Up>
        <Hold>0</Hold>
        <Text1>Blind</Text1>
        <Text2>down</Text2>
        <PlacementTable />
        <ButtonStyle>119</ButtonStyle>
        <LEDStyle>120</LEDStyle>
      </Button>
    </Object>
    <Object>
      <Button VID="279" Master="9722" MTime="" Position="" Adjust="None" ExcludeFromWidgets="True">
        <Name>Off</Name>
        <Model />
        <Note />
        <DName />
        <ObjectType>Button</ObjectType>
        <Parent Position="5">274</Parent>
        <Down>9980</Down>
        <Up>9980</Up>
        <Hold>9980</Hold>
        <Text1>Off</Text1>
        <Text2 />
        <PlacementTable />
        <ButtonStyle>119</ButtonStyle>
        <LEDStyle>120</LEDStyle>
      </Button>
    </Object>
    <Object>
      <BackBox VID="280" Master="9722" MTime="">
        <Name>Back Box 1</Name>
        <Model />
        <Note />
        <DName />
        <ObjectType>BackBox</ObjectType>
        <Area>24</Area>
        <Location />
        <KeypadStyle>261</KeypadStyle>
      </BackBox>
    </Object>
    <Object>
      <EqUX VID="288" Master="9722" MTime="2016-09-28T13:44:13.464">
        <Name>Equinox 73 1</Name>
        <Model>Default</Model>
        <Note />
        <DName />
        <Area>20</Area>
        <Location />
        <SerialNumber>3975888</SerialNumber>
        <Bus>4</Bus>
        <Style>289</Style>
        <Settings>
          <Backlight>
            <ActiveIntensity>100</ActiveIntensity>
            <InactiveIntensity>50</InactiveIntensity>
            <AutoOffWhenDark>true</AutoOffWhenDark>
            <AutoBrightness>true</AutoBrightness>
            <MinButtonIntensity>50</MinButtonIntensity>
            <Timeout>60</Timeout>
            <RangeAdjust>0</RangeAdjust>
            <LowLevel>50</LowLevel>
          </Backlight>
          <Sounder>
            <Volume>0</Volume>
            <AutoOff>true</AutoOff>
          </Sounder>
          <DefaultProfile>1000000</DefaultProfile>
          <ScreenSaver>0</ScreenSaver>
          <TempScale>Celsius</TempScale>
          <MilitaryTime>false</MilitaryTime>
        </Settings>
        <ProfileTable>
        </ProfileTable>
        <Activate>0</Activate>
        <ObjectType>EqUX</ObjectType>
      </EqUX>
    </Object>
    <Object>
      <EqUXStyle VID="289" Master="9722" MTime="">
        <Name>Equinox Widget Style 1</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>EqUXStyle</ObjectType>
        <Backlight>
          <ActiveIntensity>100</ActiveIntensity>
          <InactiveIntensity>50</InactiveIntensity>
          <AutoOffWhenDark>true</AutoOffWhenDark>
          <AutoBrightness>true</AutoBrightness>
          <MinButtonIntensity>50</MinButtonIntensity>
          <Timeout>
          </Timeout>
        </Backlight>
        <Sounder>
          <Volume>60</Volume>
          <AutoOff>true</AutoOff>
        </Sounder>
        <DefaultProfile>0</DefaultProfile>
        <ScreenSaver>0</ScreenSaver>
        <TempScale>Celsius</TempScale>
        <MilitaryTime>false</MilitaryTime>
      </EqUXStyle>
    </Object>
    <Object>
      <Button VID="290" Master="9722" MTime="" Position="" Adjust="None">
        <Name>Kitchen On/Off</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Button</ObjectType>
        <Parent Position="0">288</Parent>
        <Down>10158</Down>
        <Up>10158</Up>
        <Hold>10158</Hold>
        <Text1>
        </Text1>
        <Text2>
        </Text2>
        <PlacementTable>
        </PlacementTable>
        <ButtonStyle>119</ButtonStyle>
        <LEDStyle>120</LEDStyle>
      </Button>
    </Object>
    <Object>
      <Button VID="291" Master="9722" MTime="" Position="" Adjust="None">
        <Name>Water Shut Off</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Button</ObjectType>
        <Parent Position="1">288</Parent>
        <Down>9951</Down>
        <Up>0</Up>
        <Hold>0</Hold>
        <Text1>
        </Text1>
        <Text2>
        </Text2>
        <PlacementTable>
        </PlacementTable>
        <ButtonStyle>119</ButtonStyle>
        <LEDStyle>120</LEDStyle>
      </Button>
    </Object>
    <Object>
      <Button VID="292" Master="9722" MTime="" Position="" Adjust="None">
        <Name>Living</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Button</ObjectType>
        <Parent Position="2">288</Parent>
        <Down>9974</Down>
        <Up>0</Up>
        <Hold>0</Hold>
        <Text1>
        </Text1>
        <Text2>
        </Text2>
        <PlacementTable>
        </PlacementTable>
        <ButtonStyle>119</ButtonStyle>
        <LEDStyle>120</LEDStyle>
      </Button>
    </Object>
    <Object>
      <Button VID="293" Master="9722" MTime="" Position="" Adjust="None">
        <Name>Kitchen 1</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Button</ObjectType>
        <Parent Position="3">288</Parent>
        <Down>10155</Down>
        <Up>0</Up>
        <Hold>0</Hold>
        <Text1>
        </Text1>
        <Text2>
        </Text2>
        <PlacementTable>
        </PlacementTable>
        <ButtonStyle>119</ButtonStyle>
        <LEDStyle>120</LEDStyle>
      </Button>
    </Object>
    <Object>
      <Button VID="294" Master="9722" MTime="" Position="" Adjust="None">
        <Name>Bed 1</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Button</ObjectType>
        <Parent Position="4">288</Parent>
        <Down>9976</Down>
        <Up>0</Up>
        <Hold>0</Hold>
        <Text1>
        </Text1>
        <Text2>
        </Text2>
        <PlacementTable>
        </PlacementTable>
        <ButtonStyle>119</ButtonStyle>
        <LEDStyle>120</LEDStyle>
      </Button>
    </Object>
    <Object>
      <Button VID="295" Master="9722" MTime="" Position="" Adjust="None">
        <Name>Bed 2</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Button</ObjectType>
        <Parent Position="5">288</Parent>
        <Down>9978</Down>
        <Up>0</Up>
        <Hold>0</Hold>
        <Text1>
        </Text1>
        <Text2>
        </Text2>
        <PlacementTable>
        </PlacementTable>
        <ButtonStyle>119</ButtonStyle>
        <LEDStyle>120</LEDStyle>
      </Button>
    </Object>
    <Object>
      <Button VID="296" Master="9722" MTime="" Position="" Adjust="Full" MaxLevel="100">
        <Name>W/C</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Button</ObjectType>
        <Parent Position="6">288</Parent>
        <Down>10338</Down>
        <Up>10338</Up>
        <Hold>10338</Hold>
        <Text1>
        </Text1>
        <Text2>
        </Text2>
        <PlacementTable>
        </PlacementTable>
        <ButtonStyle>119</ButtonStyle>
        <LEDStyle>120</LEDStyle>
      </Button>
    </Object>
    <Object>
      <Button VID="297" Master="9722" MTime="" Position="" Adjust="None">
        <Name>En-Suite 1</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Button</ObjectType>
        <Parent Position="7">288</Parent>
        <Down>9977</Down>
        <Up>0</Up>
        <Hold>0</Hold>
        <Text1>
        </Text1>
        <Text2>
        </Text2>
        <PlacementTable>
        </PlacementTable>
        <ButtonStyle>119</ButtonStyle>
        <LEDStyle>120</LEDStyle>
      </Button>
    </Object>
    <Object>
      <Button VID="298" Master="9722" MTime="" Position="" Adjust="None">
        <Name>Hall PIR</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Button</ObjectType>
        <Parent Position="8">288</Parent>
        <Down>10056</Down>
        <Up>0</Up>
        <Hold>0</Hold>
        <Text1>
        </Text1>
        <Text2>
        </Text2>
        <PlacementTable>
        </PlacementTable>
        <ButtonStyle>119</ButtonStyle>
        <LEDStyle>120</LEDStyle>
      </Button>
    </Object>
    <Object>
      <Button VID="299" Master="9722" MTime="" Position="" Adjust="None">
        <Name>ES 1 PIR</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Button</ObjectType>
        <Parent Position="9">288</Parent>
        <Down>10054</Down>
        <Up>0</Up>
        <Hold>0</Hold>
        <Text1>
        </Text1>
        <Text2>
        </Text2>
        <PlacementTable>
        </PlacementTable>
        <ButtonStyle>119</ButtonStyle>
        <LEDStyle>120</LEDStyle>
      </Button>
    </Object>
    <Object>
      <Button VID="300" Master="9722" MTime="" Position="" Adjust="None">
        <Name>Bath PIR</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Button</ObjectType>
        <Parent Position="10">288</Parent>
        <Down>9742</Down>
        <Up>0</Up>
        <Hold>0</Hold>
        <Text1>
        </Text1>
        <Text2>
        </Text2>
        <PlacementTable>
        </PlacementTable>
        <ButtonStyle>119</ButtonStyle>
        <LEDStyle>120</LEDStyle>
      </Button>
    </Object>
    <Object>
      <Button VID="301" Master="9722" MTime="" Position="" Adjust="None">
        <Name>Kitchen 2</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Button</ObjectType>
        <Parent Position="11">288</Parent>
        <Down>10156</Down>
        <Up>0</Up>
        <Hold>0</Hold>
        <Text1>
        </Text1>
        <Text2>
        </Text2>
        <PlacementTable>
        </PlacementTable>
        <ButtonStyle>119</ButtonStyle>
        <LEDStyle>120</LEDStyle>
      </Button>
    </Object>
    <Object>
      <Button VID="302" Master="9722" MTime="" Position="" Adjust="None">
        <Name>Kitchen 3</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Button</ObjectType>
        <Parent Position="12">288</Parent>
        <Down>10157</Down>
        <Up>0</Up>
        <Hold>0</Hold>
        <Text1>
        </Text1>
        <Text2>
        </Text2>
        <PlacementTable>
        </PlacementTable>
        <ButtonStyle>119</ButtonStyle>
        <LEDStyle>120</LEDStyle>
      </Button>
    </Object>
    <Object>
      <Button VID="303" Master="9722" MTime="" Position="" Adjust="None">
        <Name>Dressing PIR</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Button</ObjectType>
        <Parent Position="13">288</Parent>
        <Down>10434</Down>
        <Up>0</Up>
        <Hold>0</Hold>
        <Text1>
        </Text1>
        <Text2>
        </Text2>
        <PlacementTable>
        </PlacementTable>
        <ButtonStyle>119</ButtonStyle>
        <LEDStyle>120</LEDStyle>
      </Button>
    </Object>
    <Object>
      <Button VID="304" Master="9722" MTime="" Position="" Adjust="None">
        <Name>
        </Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Button</ObjectType>
        <Parent Position="14">288</Parent>
        <Down>0</Down>
        <Up>0</Up>
        <Hold>0</Hold>
        <Text1>
        </Text1>
        <Text2>
        </Text2>
        <PlacementTable>
        </PlacementTable>
        <ButtonStyle>119</ButtonStyle>
        <LEDStyle>120</LEDStyle>
      </Button>
    </Object>
    <Object>
      <Button VID="305" Master="9722" MTime="" Position="" Adjust="None">
        <Name>
        </Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Button</ObjectType>
        <Parent Position="15">288</Parent>
        <Down>0</Down>
        <Up>0</Up>
        <Hold>0</Hold>
        <Text1>
        </Text1>
        <Text2>
        </Text2>
        <PlacementTable>
        </PlacementTable>
        <ButtonStyle>119</ButtonStyle>
        <LEDStyle>120</LEDStyle>
      </Button>
    </Object>
    <Object>
      <IRX2 VID="337" Master="9722" MTime="">
        <Name>IRX II 1</Name>
        <Model>None</Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>IRX2</ObjectType>
        <Area>17</Area>
        <Location>
        </Location>
        <SerialNumber>03986508</SerialNumber>
        <Bus>4</Bus>
        <IRPassThru>
          <Channel>0</Channel>
          <Voltage>False</Voltage>
          <Power>5</Power>
          <Inverted>False</Inverted>
        </IRPassThru>
        <LEDAutoOff>False</LEDAutoOff>
      </IRX2>
    </Object>
    <Object>
      <SerialPort VID="338" Master="9722" MTime="" Position="">
        <Name>Serial Port 1</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>SerialPort</ObjectType>
        <Parent Position="1">337</Parent>
        <Data>0</Data>
        <Write>0</Write>
        <Connect>0</Connect>
        <Disconnect>0</Disconnect>
        <Baud>9600</Baud>
        <Parity>None</Parity>
        <DataBits>8</DataBits>
        <StopBits>1.0</StopBits>
        <FlowControl>None</FlowControl>
        <SoftwareControl>
          <Xon>0</Xon>
          <Xoff>0</Xoff>
        </SoftwareControl>
        <HostCmdPort>false</HostCmdPort>
        <Crossover>false</Crossover>
      </SerialPort>
    </Object>
    <Object>
      <SerialPort VID="339" Master="9722" MTime="" Position="">
        <Name>Serial Port 2</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>SerialPort</ObjectType>
        <Parent Position="2">337</Parent>
        <Data>0</Data>
        <Write>0</Write>
        <Connect>0</Connect>
        <Disconnect>0</Disconnect>
        <Baud>9600</Baud>
        <Parity>None</Parity>
        <DataBits>8</DataBits>
        <StopBits>1.0</StopBits>
        <FlowControl>None</FlowControl>
        <SoftwareControl>
          <Xon>0</Xon>
          <Xoff>0</Xoff>
        </SoftwareControl>
        <HostCmdPort>false</HostCmdPort>
        <Crossover>false</Crossover>
      </SerialPort>
    </Object>
    <Object>
      <IRReceiver VID="340" Master="9722" MTime="" Position="">
        <Name>Internal IR</Name>
        <Model>None</Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>IRReceiver</ObjectType>
        <Parent Position="1">337</Parent>
        <IRZone>0</IRZone>
        <External>false</External>
        <Inverted>false</Inverted>
        <PassThru>false</PassThru>
      </IRReceiver>
    </Object>
    <Object>
      <IRReceiver VID="341" Master="9722" MTime="" Position="">
        <Name>External IR</Name>
        <Model>None</Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>IRReceiver</ObjectType>
        <Parent Position="2">337</Parent>
        <IRZone>0</IRZone>
        <External>true</External>
        <Inverted>false</Inverted>
        <PassThru>false</PassThru>
      </IRReceiver>
    </Object>
    <Object>
      <IRReceiver VID="342" Master="9722" MTime="" Position="">
        <Name>Pass Thru / External IR 2</Name>
        <Model>None</Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>IRReceiver</ObjectType>
        <Parent Position="3">337</Parent>
        <IRZone>0</IRZone>
        <External>true</External>
        <Inverted>false</Inverted>
        <PassThru>true</PassThru>
      </IRReceiver>
    </Object>
    <Object>
      <Load VID="343" Position="" Master="9722" MTime="" ExcludeFromWidgets="True">
        <Name>IRX water shutt off (1)</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <ContractorNumber>A53</ContractorNumber>
        <DName>
        </DName>
        <FixtureDefinition>0</FixtureDefinition>
        <LoadType>Low Voltage Relay</LoadType>
        <FixturePower>100</FixturePower>
        <FixtureQuantity>1</FixtureQuantity>
        <Power>0</Power>
        <OverrideLevel>100</OverrideLevel>
        <Parent Position="1">337</Parent>
        <ObjectType>Load</ObjectType>
        <Area>17</Area>
        <Location>
        </Location>
        <PowerProfile>9</PowerProfile>
      </Load>
    </Object>
    <Object>
      <Load VID="344" Position="" Master="9722" MTime="" ExcludeFromWidgets="True">
        <Name>IRX smoke (2)</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <ContractorNumber>A54</ContractorNumber>
        <DName>
        </DName>
        <FixtureDefinition>0</FixtureDefinition>
        <LoadType>Low Voltage Relay</LoadType>
        <FixturePower>100</FixturePower>
        <FixtureQuantity>1</FixtureQuantity>
        <Power>0</Power>
        <OverrideLevel>100</OverrideLevel>
        <Parent Position="2">337</Parent>
        <ObjectType>Load</ObjectType>
        <Area>17</Area>
        <Location>
        </Location>
        <PowerProfile>9</PowerProfile>
      </Load>
    </Object>
    <Object>
      <DryContact VID="345" Master="9722" MTime="" Position="">
        <Name>Doorbell</Name>
        <Note>
        </Note>
        <Model>Dry Contact</Model>
        <DName>
        </DName>
        <ObjectType>DryContact</ObjectType>
        <Area>6</Area>
        <Location>
        </Location>
        <Parent Position="1">337</Parent>
        <Down>0</Down>
        <Up>0</Up>
        <ReversePolarity>false</ReversePolarity>
        <HoldOnTime>0</HoldOnTime>
      </DryContact>
    </Object>
    <Object>
      <DryContact VID="346" Master="9722" MTime="" Position="">
        <Name>Dry Contact 2</Name>
        <Note>
        </Note>
        <Model>Dry Contact</Model>
        <DName>
        </DName>
        <ObjectType>DryContact</ObjectType>
        <Area>0</Area>
        <Location>
        </Location>
        <Parent Position="2">337</Parent>
        <Down>0</Down>
        <Up>0</Up>
        <ReversePolarity>false</ReversePolarity>
        <HoldOnTime>0</HoldOnTime>
      </DryContact>
    </Object>
    <Object>
      <DryContact VID="347" Master="9722" MTime="" Position="">
        <Name>Dry Contact 3</Name>
        <Note>
        </Note>
        <Model>Dry Contact</Model>
        <DName>
        </DName>
        <ObjectType>DryContact</ObjectType>
        <Area>0</Area>
        <Location>
        </Location>
        <Parent Position="3">337</Parent>
        <Down>0</Down>
        <Up>0</Up>
        <ReversePolarity>false</ReversePolarity>
        <HoldOnTime>0</HoldOnTime>
      </DryContact>
    </Object>
    <Object>
      <DryContact VID="348" Master="9722" MTime="" Position="">
        <Name>Dry Contact 4</Name>
        <Note>
        </Note>
        <Model>Dry Contact</Model>
        <DName>
        </DName>
        <ObjectType>DryContact</ObjectType>
        <Area>0</Area>
        <Location>
        </Location>
        <Parent Position="4">337</Parent>
        <Down>0</Down>
        <Up>0</Up>
        <ReversePolarity>false</ReversePolarity>
        <HoldOnTime>0</HoldOnTime>
      </DryContact>
    </Object>
    <Object>
      <Keypad VID="351" Master="9722" MTime="" Position="">
        <Name>Hall</Name>
        <Note>
        </Note>
        <Model>Default</Model>
        <DName>Hall</DName>
        <ObjectType>Keypad</ObjectType>
        <Area>18</Area>
        <Location>
        </Location>
        <SerialNumber>4124782</SerialNumber>
        <Bus>3</Bus>
        <Parent Position="1">352</Parent>
      </Keypad>
    </Object>
    <Object>
      <BackBox VID="352" Master="9722" MTime="">
        <Name>Back Box 1</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>BackBox</ObjectType>
        <Area>18</Area>
        <Location>
        </Location>
        <KeypadStyle>261</KeypadStyle>
      </BackBox>
    </Object>
    <Object>
      <Button VID="353" Master="9722" MTime="" Position="" Adjust="None" ExcludeFromWidgets="True">
        <Name>Home On</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Button</ObjectType>
        <Parent Position="3">351</Parent>
        <Down>10058</Down>
        <Up>10058</Up>
        <Hold>10058</Hold>
        <Text1>Home on</Text1>
        <Text2>
        </Text2>
        <PlacementTable>
          <Place>1</Place>
          <Place>2</Place>
          <Place>3</Place>
        </PlacementTable>
        <ButtonStyle>119</ButtonStyle>
        <LEDStyle>120</LEDStyle>
      </Button>
    </Object>
    <Object>
      <Button VID="354" Master="9722" MTime="" Position="" Adjust="None" ExcludeFromWidgets="True">
        <Name>Home Off</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Button</ObjectType>
        <Parent Position="4">351</Parent>
        <Down>10103</Down>
        <Up>0</Up>
        <Hold>0</Hold>
        <Text1>Home off</Text1>
        <Text2>
        </Text2>
        <PlacementTable>
        </PlacementTable>
        <ButtonStyle>119</ButtonStyle>
        <LEDStyle>120</LEDStyle>
      </Button>
    </Object>
    <Object>
      <Button VID="355" Master="9722" MTime="" Position="" Adjust="None" ExcludeFromWidgets="True">
        <Name>Away</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Button</ObjectType>
        <Parent Position="5">351</Parent>
        <Down>10060</Down>
        <Up>0</Up>
        <Hold>0</Hold>
        <Text1>Away</Text1>
        <Text2>
        </Text2>
        <PlacementTable>
        </PlacementTable>
        <ButtonStyle>119</ButtonStyle>
        <LEDStyle>120</LEDStyle>
      </Button>
    </Object>
    <Object>
      <DryContact VID="360" Master="9722" MTime="" Position="">
        <Name>Hall PIR Task</Name>
        <Note>
        </Note>
        <Model>FL-MS MINI 360-33 - PIR Motion Sensor 33 ft./10 m.</Model>
        <DName>
        </DName>
        <ObjectType>DryContact</ObjectType>
        <Area>18</Area>
        <Location>
        </Location>
        <Parent Position="9">351</Parent>
        <Down>9878</Down>
        <Up>9878</Up>
        <ReversePolarity>true</ReversePolarity>
        <HoldOnTime>0</HoldOnTime>
      </DryContact>
    </Object>
    <Object>
      <Task VID="722" Master="9722" MTime="">
        <Name>Bathroom Off</Name>
        <Model>Bathroom Off</Model>
        <Note />
        <DName />
        <ObjectType>Task</ObjectType>
        <Category>9740</Category>
        <Procedure>
          <Target>10165</Target>
          <Function>SceneProgram_722</Function>
          <Parameters>
            <Param>0</Param>
            <Param>1</Param>
          </Parameters>
        </Procedure>
        <Query>
          <Target>10168</Target>
          <Function>LoadsOff</Function>
          <Parameters>
            <Param>2</Param>
          </Parameters>
        </Query>
        <Adjust>
          <Target>0</Target>
          <Function />
          <Parameters />
        </Adjust>
        <Level>
          <Target>0</Target>
          <Function />
          <Parameters />
        </Level>
        <ParamTable>
          <Param ID="0">
            <gmem Type="ref">9732</gmem>
          </Param>
          <Param ID="1">
            <gmem Type="ref">10014</gmem>
          </Param>
          <Param ID="2">
            <array>
              <val>84</val>
              <val>71</val>
            </array>
          </Param>
        </ParamTable>
        <DependTable>
          <Param status="Load.GetLevel">2</Param>
        </DependTable>
      </Task>
      <Module>
        <Library Name="Programming\VantageTime" Local="true" />
        <Library Name="Lighting\Toggle" Local="true" />
        <Library Name="vantage" Local="false" />
        <Scene>
          <Name>SceneProgram_722</Name>
          <Type>procedure</Type>
          <Parameters>
            <Param>
              <Reference>true</Reference>
              <Label>bool</Label>
              <Label>GMem</Label>
              <Name>param2</Name>
            </Param>
            <Param>
              <Reference>true</Reference>
              <Label>Number</Label>
              <Label>GMem</Label>
              <Name>param3</Name>
            </Param>
          </Parameters>
          <ParameterValues>
            <Param>
              <Label>GMem</Label>
              <Constant Type="int">9732</Constant>
              <ParamName>param2</ParamName>
            </Param>
            <Param>
              <Label>GMem</Label>
              <Constant Type="int">10014</Constant>
              <ParamName>param3</ParamName>
            </Param>
          </ParameterValues>
          <FunctionBody>
            <FunctionCall disable="false">
              <Name>Off</Name>
              <Parameters>
                <Param>
                  <Label>Load</Label>
                  <Initializer>
                    <Constant Type="int">84</Constant>
                    <Constant Type="int">71</Constant>
                  </Initializer>
                  <ParamName>loads</ParamName>
                </Param>
                <Param>
                  <Label>Seconds</Label>
                  <Constant Type="float">2.0</Constant>
                  <ParamName>rampTime</ParamName>
                </Param>
              </Parameters>
            </FunctionCall>
            <Assignment disable="false">
              <Operand>
                <Identifier>param2</Identifier>
              </Operand>
              <Assign>equals</Assign>
              <Operand>
                <Label>bool</Label>
                <Constant Type="bool">true</Constant>
              </Operand>
            </Assignment>
            <Assignment disable="false">
              <Operand>
                <Identifier>param3</Identifier>
              </Operand>
              <Assign>equals</Assign>
              <Operand>
                <Label>Number</Label>
                <Constant Type="int">1</Constant>
              </Operand>
            </Assignment>
            <FunctionCall disable="false">
              <Name>TheDelay</Name>
              <Parameters>
                <Param>
                  <Label>Delay</Label>
                  <Constant Type="float">5.0</Constant>
                  <ParamName>delayTime</ParamName>
                </Param>
              </Parameters>
            </FunctionCall>
            <Assignment disable="false">
              <Operand>
                <Identifier>param2</Identifier>
              </Operand>
              <Assign>equals</Assign>
              <Operand>
                <Label>bool</Label>
                <Constant Type="bool">false</Constant>
              </Operand>
            </Assignment>
            <QueryCall>
              <Name>LoadsOff</Name>
              <Parameters>
                <Param>
                  <Label>Load</Label>
                  <Initializer>
                    <Constant Type="int">84</Constant>
                    <Constant Type="int">71</Constant>
                  </Initializer>
                  <ParamName>loads</ParamName>
                </Param>
              </Parameters>
            </QueryCall>
          </FunctionBody>
        </Scene>
      </Module>
    </Object>
    <Object>
      <Keypad VID="854" Master="9722" MTime="" Position="">
        <Name>Bed 2 RHS</Name>
        <Note />
        <Model>Default</Model>
        <DName>Bed 2 LHS</DName>
        <ObjectType>Keypad</ObjectType>
        <Area>24</Area>
        <Location />
        <SerialNumber>4126268</SerialNumber>
        <Bus>3</Bus>
        <Parent Position="1">860</Parent>
      </Keypad>
    </Object>
    <Object>
      <Button VID="855" Master="9722" MTime="" Position="" Adjust="None" ExcludeFromWidgets="True">
        <Name>Scene</Name>
        <Model />
        <Note />
        <DName />
        <ObjectType>Button</ObjectType>
        <Parent Position="1">854</Parent>
        <Down>9923</Down>
        <Up>0</Up>
        <Hold>0</Hold>
        <Text1>Scene</Text1>
        <Text2 />
        <PlacementTable />
        <ButtonStyle>119</ButtonStyle>
        <LEDStyle>120</LEDStyle>
      </Button>
    </Object>
    <Object>
      <Button VID="856" Master="9722" MTime="" Position="" Adjust="None" ExcludeFromWidgets="True">
        <Name>Reading</Name>
        <Model />
        <Note />
        <DName />
        <ObjectType>Button</ObjectType>
        <Parent Position="2">854</Parent>
        <Down>9924</Down>
        <Up>9924</Up>
        <Hold>9924</Hold>
        <Text1>Reading</Text1>
        <Text2 />
        <PlacementTable />
        <ButtonStyle>119</ButtonStyle>
        <LEDStyle>120</LEDStyle>
      </Button>
    </Object>
    <Object>
      <Button VID="857" Master="9722" MTime="" Position="" Adjust="None" ExcludeFromWidgets="True">
        <Name>Blind Up</Name>
        <Model />
        <Note />
        <DName />
        <ObjectType>Button</ObjectType>
        <Parent Position="3">854</Parent>
        <Down>9910</Down>
        <Up>0</Up>
        <Hold>0</Hold>
        <Text1>Blind</Text1>
        <Text2>up</Text2>
        <PlacementTable />
        <ButtonStyle>119</ButtonStyle>
        <LEDStyle>120</LEDStyle>
      </Button>
    </Object>
    <Object>
      <Button VID="858" Master="9722" MTime="" Position="" Adjust="None" ExcludeFromWidgets="True">
        <Name>Blind Down</Name>
        <Model />
        <Note />
        <DName />
        <ObjectType>Button</ObjectType>
        <Parent Position="4">854</Parent>
        <Down>9907</Down>
        <Up>0</Up>
        <Hold>0</Hold>
        <Text1>Blind</Text1>
        <Text2>down</Text2>
        <PlacementTable />
        <ButtonStyle>119</ButtonStyle>
        <LEDStyle>120</LEDStyle>
      </Button>
    </Object>
    <Object>
      <Button VID="859" Master="9722" MTime="" Position="" Adjust="None" ExcludeFromWidgets="True">
        <Name>Off</Name>
        <Model />
        <Note />
        <DName />
        <ObjectType>Button</ObjectType>
        <Parent Position="5">854</Parent>
        <Down>9980</Down>
        <Up>9980</Up>
        <Hold>9980</Hold>
        <Text1>Off</Text1>
        <Text2 />
        <PlacementTable />
        <ButtonStyle>119</ButtonStyle>
        <LEDStyle>120</LEDStyle>
      </Button>
    </Object>
    <Object>
      <BackBox VID="860" Master="9722" MTime="">
        <Name>Back Box 1</Name>
        <Model />
        <Note />
        <DName />
        <ObjectType>BackBox</ObjectType>
        <Area>24</Area>
        <Location />
        <KeypadStyle>261</KeypadStyle>
      </BackBox>
    </Object>
    <Object>
      <Keypad VID="891" Master="9722" MTime="" Position="">
        <Name>Master Bed LHS</Name>
        <Note />
        <Model>Default</Model>
        <DName>Bed 2 LHS</DName>
        <ObjectType>Keypad</ObjectType>
        <Area>22</Area>
        <Location />
        <SerialNumber>4126187</SerialNumber>
        <Bus>3</Bus>
        <Parent Position="1">897</Parent>
      </Keypad>
    </Object>
    <Object>
      <Button VID="892" Master="9722" MTime="" Position="" Adjust="None" ExcludeFromWidgets="True">
        <Name>Scene</Name>
        <Model />
        <Note />
        <DName />
        <ObjectType>Button</ObjectType>
        <Parent Position="1">891</Parent>
        <Down>9894</Down>
        <Up>0</Up>
        <Hold>0</Hold>
        <Text1>Scene</Text1>
        <Text2 />
        <PlacementTable />
        <ButtonStyle>119</ButtonStyle>
        <LEDStyle>120</LEDStyle>
      </Button>
    </Object>
    <Object>
      <Button VID="893" Master="9722" MTime="" Position="" Adjust="None" ExcludeFromWidgets="True">
        <Name>Reading</Name>
        <Model />
        <Note />
        <DName />
        <ObjectType>Button</ObjectType>
        <Parent Position="2">891</Parent>
        <Down>9890</Down>
        <Up>9890</Up>
        <Hold>9890</Hold>
        <Text1>Reading</Text1>
        <Text2 />
        <PlacementTable />
        <ButtonStyle>119</ButtonStyle>
        <LEDStyle>120</LEDStyle>
      </Button>
    </Object>
    <Object>
      <Button VID="894" Master="9722" MTime="" Position="" Adjust="None" ExcludeFromWidgets="True">
        <Name>Blind Up</Name>
        <Model />
        <Note />
        <DName />
        <ObjectType>Button</ObjectType>
        <Parent Position="3">891</Parent>
        <Down>9899</Down>
        <Up>0</Up>
        <Hold>0</Hold>
        <Text1>Blind</Text1>
        <Text2>up</Text2>
        <PlacementTable />
        <ButtonStyle>119</ButtonStyle>
        <LEDStyle>120</LEDStyle>
      </Button>
    </Object>
    <Object>
      <Button VID="895" Master="9722" MTime="" Position="" Adjust="None" ExcludeFromWidgets="True">
        <Name>Blind Down</Name>
        <Model />
        <Note />
        <DName />
        <ObjectType>Button</ObjectType>
        <Parent Position="4">891</Parent>
        <Down>9900</Down>
        <Up>0</Up>
        <Hold>0</Hold>
        <Text1>Blind</Text1>
        <Text2>down</Text2>
        <PlacementTable />
        <ButtonStyle>119</ButtonStyle>
        <LEDStyle>120</LEDStyle>
      </Button>
    </Object>
    <Object>
      <Button VID="896" Master="9722" MTime="" Position="" Adjust="None" ExcludeFromWidgets="True">
        <Name>Off</Name>
        <Model />
        <Note />
        <DName />
        <ObjectType>Button</ObjectType>
        <Parent Position="5">891</Parent>
        <Down>9979</Down>
        <Up>9979</Up>
        <Hold>9979</Hold>
        <Text1>Off</Text1>
        <Text2 />
        <PlacementTable />
        <ButtonStyle>119</ButtonStyle>
        <LEDStyle>120</LEDStyle>
      </Button>
    </Object>
    <Object>
      <BackBox VID="897" Master="9722" MTime="">
        <Name>Back Box 1</Name>
        <Model />
        <Note />
        <DName />
        <ObjectType>BackBox</ObjectType>
        <Area>22</Area>
        <Location />
        <KeypadStyle>261</KeypadStyle>
      </BackBox>
    </Object>
    <Object>
      <Keypad VID="898" Master="9722" MTime="" Position="">
        <Name>Master Bed RHS</Name>
        <Note />
        <Model>Default</Model>
        <DName>Bed 2 LHS</DName>
        <ObjectType>Keypad</ObjectType>
        <Area>22</Area>
        <Location />
        <SerialNumber>4126186</SerialNumber>
        <Bus>3</Bus>
        <Parent Position="1">904</Parent>
      </Keypad>
    </Object>
    <Object>
      <Button VID="899" Master="9722" MTime="" Position="" Adjust="None" ExcludeFromWidgets="True">
        <Name>Scene</Name>
        <Model />
        <Note />
        <DName />
        <ObjectType>Button</ObjectType>
        <Parent Position="1">898</Parent>
        <Down>9894</Down>
        <Up>0</Up>
        <Hold>0</Hold>
        <Text1>Scene</Text1>
        <Text2 />
        <PlacementTable />
        <ButtonStyle>119</ButtonStyle>
        <LEDStyle>120</LEDStyle>
      </Button>
    </Object>
    <Object>
      <Button VID="900" Master="9722" MTime="" Position="" Adjust="None" ExcludeFromWidgets="True">
        <Name>Reading</Name>
        <Model />
        <Note />
        <DName />
        <ObjectType>Button</ObjectType>
        <Parent Position="2">898</Parent>
        <Down>9890</Down>
        <Up>9890</Up>
        <Hold>9890</Hold>
        <Text1>Reading</Text1>
        <Text2 />
        <PlacementTable />
        <ButtonStyle>119</ButtonStyle>
        <LEDStyle>120</LEDStyle>
      </Button>
    </Object>
    <Object>
      <Button VID="901" Master="9722" MTime="" Position="" Adjust="None" ExcludeFromWidgets="True">
        <Name>Blind Up</Name>
        <Model />
        <Note />
        <DName />
        <ObjectType>Button</ObjectType>
        <Parent Position="3">898</Parent>
        <Down>9899</Down>
        <Up>0</Up>
        <Hold>0</Hold>
        <Text1>Blind</Text1>
        <Text2>up</Text2>
        <PlacementTable />
        <ButtonStyle>119</ButtonStyle>
        <LEDStyle>120</LEDStyle>
      </Button>
    </Object>
    <Object>
      <Button VID="902" Master="9722" MTime="" Position="" Adjust="None" ExcludeFromWidgets="True">
        <Name>Blind Down</Name>
        <Model />
        <Note />
        <DName />
        <ObjectType>Button</ObjectType>
        <Parent Position="4">898</Parent>
        <Down>9900</Down>
        <Up>0</Up>
        <Hold>0</Hold>
        <Text1>Blind</Text1>
        <Text2>down</Text2>
        <PlacementTable />
        <ButtonStyle>119</ButtonStyle>
        <LEDStyle>120</LEDStyle>
      </Button>
    </Object>
    <Object>
      <Button VID="903" Master="9722" MTime="" Position="" Adjust="None" ExcludeFromWidgets="True">
        <Name>Off</Name>
        <Model />
        <Note />
        <DName />
        <ObjectType>Button</ObjectType>
        <Parent Position="5">898</Parent>
        <Down>9979</Down>
        <Up>9979</Up>
        <Hold>9979</Hold>
        <Text1>Off</Text1>
        <Text2 />
        <PlacementTable />
        <ButtonStyle>119</ButtonStyle>
        <LEDStyle>120</LEDStyle>
      </Button>
    </Object>
    <Object>
      <BackBox VID="904" Master="9722" MTime="">
        <Name>Back Box 1</Name>
        <Model />
        <Note />
        <DName />
        <ObjectType>BackBox</ObjectType>
        <Area>22</Area>
        <Location />
        <KeypadStyle>261</KeypadStyle>
      </BackBox>
    </Object>
    <Object>
      <TcpClientPort VID="1264" Master="9722" MTime="">
        <Name>TCP Client Port 1</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>TcpClientPort</ObjectType>
        <Port>17037</Port>
        <IPAddress>192.168.0.11</IPAddress>
        <Data>0</Data>
        <Write>0</Write>
        <Connect>0</Connect>
        <Disconnect>0</Disconnect>
        <ManualConnect>false</ManualConnect>
      </TcpClientPort>
    </Object>
    <Object>
      <TcpClientPort VID="1298" Master="9722" MTime="">
        <Name>TCP Client Port 2</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>TcpClientPort</ObjectType>
        <Port>17037</Port>
        <IPAddress>192.168.0.11</IPAddress>
        <Data>0</Data>
        <Write>0</Write>
        <Connect>0</Connect>
        <Disconnect>0</Disconnect>
        <ManualConnect>false</ManualConnect>
      </TcpClientPort>
    </Object>
    <Object>
      <KeypadStyle VID="2277" Master="0" MTime="">
        <Name>Virtual</Name>
        <Note>
        </Note>
        <DName>Virtual</DName>
        <Model>Standard</Model>
        <ButtonShape>FineTouch</ButtonShape>
        <Design>TrimLine II - Plastic Faceplate</Design>
        <Color>Arctic White</Color>
        <TrimColor>Arctic White</TrimColor>
        <Font>Helvetica</Font>
        <Italic>false</Italic>
        <TextPlacement>true</TextPlacement>
        <AutoBacklight>false</AutoBacklight>
        <MinAutoDimLevel>25</MinAutoDimLevel>
        <SounderFreq>1200</SounderFreq>
        <SounderLength>100</SounderLength>
        <FastBlinkRate>100</FastBlinkRate>
        <ObjectType>KeypadStyle</ObjectType>
        <BacklitButtons>false</BacklitButtons>
        <BacklightLEDStyle>0</BacklightLEDStyle>
      </KeypadStyle>
    </Object>
    <Object>
      <LEDStyle VID="2280" Master="0" MTime="">
        <Name>LED Style 2</Name>
        <Model>RB</Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>LEDStyle</ObjectType>
        <ColorTable Color1="Red" Color2="Blue">
          <Color ID="2">FF000000</Color>
          <Color ID="3">FF000000</Color>
          <Color ID="1">00202000</Color>
          <Color ID="0">0000FF00</Color>
          <Color ID="4">FF800000</Color>
          <Color ID="5">00FF0000</Color>
        </ColorTable>
        <StyleTable Enum="TenState">
          <Mode ID="1" Default="true">
            <Entry Color="5">0</Entry>
            <Entry Color="0">1</Entry>
            <Entry Color="5">2</Entry>
            <Entry Color="4">3</Entry>
            <Entry Color="1">4</Entry>
            <Entry Color="1">5</Entry>
            <Entry Color="1">6</Entry>
            <Entry Color="2">7</Entry>
            <Entry Color="2">8</Entry>
            <Entry Color="2">9</Entry>
          </Mode>
        </StyleTable>
      </LEDStyle>
    </Object>
    <Object>
      <ButtonStyle VID="2282" Master="0" MTime="">
        <Name>Virtual</Name>
        <Note>
        </Note>
        <DName>Virtual</DName>
        <Model>Standard</Model>
        <ButtonColor>Arctic White</ButtonColor>
        <TextColor>Black</TextColor>
        <ObjectType>ButtonStyle</ObjectType>
        <SoundType>Pulsed</SoundType>
      </ButtonStyle>
    </Object>
    <Object>
      <GenericDevice VID="5823" Master="9722" MTime="">
        <Name>Airplay</Name>
        <Model>AirPlay</Model>
        <Note>
        </Note>
        <DName>Airplay</DName>
        <ObjectType>GenericDevice</ObjectType>
        <Area>17</Area>
        <Location>
        </Location>
        <UserPrompt>Play music from your Airplay device</UserPrompt>
      </GenericDevice>
    </Object>
    <Object>
      <GenericDevice VID="5879" Master="9722" MTime="">
        <Name>Living TV</Name>
        <Model>Generic</Model>
        <Note>
        </Note>
        <DName>Living TV</DName>
        <ObjectType>GenericDevice</ObjectType>
        <Area>19</Area>
        <Location>
        </Location>
        <UserPrompt>Play audio from living room TV</UserPrompt>
      </GenericDevice>
    </Object>
    <Object>
      <GenericDevice VID="5880" Master="9722" MTime="">
        <Name>Bed 1 TV</Name>
        <Model>Generic</Model>
        <Note>
        </Note>
        <DName>Bed 1 TV</DName>
        <ObjectType>GenericDevice</ObjectType>
        <Area>22</Area>
        <Location>
        </Location>
        <UserPrompt>Play audio from bedroom TV</UserPrompt>
      </GenericDevice>
    </Object>
    <Object>
      <GenericDevice VID="5881" Master="9722" MTime="">
        <Name>Bed 2 TV</Name>
        <Model>Generic</Model>
        <Note>
        </Note>
        <DName>Bed 2 TV</DName>
        <ObjectType>GenericDevice</ObjectType>
        <Area>24</Area>
        <Location>
        </Location>
        <UserPrompt>Play audio from bedroom TV</UserPrompt>
      </GenericDevice>
    </Object>
    <Object>
      <Preset VID="6383" Master="9722" MTime="2016-09-28T13:44:13.777" Preset="AM">
        <Name>AMBand 1</Name>
        <Model>AM</Model>
        <Note />
        <DName />
        <Category>7</Category>
        <Setup>
          <Action Function="" />
        </Setup>
        <PresetTable>
          <Preset Name="Preset 1" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>540</val>
            </Action>
          </Preset>
          <Preset Name="Preset 2" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>770</val>
            </Action>
          </Preset>
          <Preset Name="Preset 3" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>1000</val>
            </Action>
          </Preset>
          <Preset Name="Preset 4" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>1230</val>
            </Action>
          </Preset>
          <Preset Name="Preset 5" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>1460</val>
            </Action>
          </Preset>
          <Preset Name="Preset 6" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>1690</val>
            </Action>
          </Preset>
        </PresetTable>
        <DeviceTable />
        <ObjectType>Preset</ObjectType>
      </Preset>
    </Object>
    <Object>
      <Preset VID="6384" Master="9722" MTime="2016-09-28T13:44:13.778" Preset="FM">
        <Name>FMBand 1</Name>
        <Model>FM</Model>
        <Note />
        <DName />
        <Category>7</Category>
        <Setup>
          <Action Function="" />
        </Setup>
        <PresetTable>
          <Preset Name="Preset 1" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>87.5</val>
            </Action>
          </Preset>
          <Preset Name="Preset 2" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>91.5</val>
            </Action>
          </Preset>
          <Preset Name="Preset 3" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>95.5</val>
            </Action>
          </Preset>
          <Preset Name="Preset 4" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>99.5</val>
            </Action>
          </Preset>
          <Preset Name="Preset 5" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>103.5</val>
            </Action>
          </Preset>
          <Preset Name="Preset 6" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>107.5</val>
            </Action>
          </Preset>
        </PresetTable>
        <DeviceTable />
        <ObjectType>Preset</ObjectType>
      </Preset>
    </Object>
    <Object>
      <Preset VID="6385" Master="9722" MTime="2016-09-28T13:44:13.778" Preset="XM">
        <Name>XMBand 1</Name>
        <Model>XM</Model>
        <Note />
        <DName />
        <Category>7</Category>
        <Setup>
          <Action Function="" />
        </Setup>
        <PresetTable>
          <Preset Name="Preset 1" GenericIcon="true">
            <Action Function="Channel.Set">
              <val>1</val>
            </Action>
          </Preset>
          <Preset Name="Preset 2" GenericIcon="true">
            <Action Function="Channel.Set">
              <val>1</val>
            </Action>
          </Preset>
          <Preset Name="Preset 3" GenericIcon="true">
            <Action Function="Channel.Set">
              <val>1</val>
            </Action>
          </Preset>
          <Preset Name="Preset 4" GenericIcon="true">
            <Action Function="Channel.Set">
              <val>1</val>
            </Action>
          </Preset>
          <Preset Name="Preset 5" GenericIcon="true">
            <Action Function="Channel.Set">
              <val>1</val>
            </Action>
          </Preset>
          <Preset Name="Preset 6" GenericIcon="true">
            <Action Function="Channel.Set">
              <val>1</val>
            </Action>
          </Preset>
        </PresetTable>
        <DeviceTable />
        <ObjectType>Preset</ObjectType>
      </Preset>
    </Object>
    <Object>
      <Vantage.Generic_HVAC_RS485_PORT VID="6962" Master="9722" MTime="">
        <Name>Trend</Name>
        <Model>
        </Model>
        <DeviceCategory>HVAC</DeviceCategory>
        <Note>
        </Note>
        <DName>Trend</DName>
        <ObjectType>Vantage.Generic_HVAC_RS485_PORT</ObjectType>
        <Area>17</Area>
        <Location>
        </Location>
        <Version>
        </Version>
        <Log>Level 3</Log>
        <PowerTracking Sensor="0">false</PowerTracking>
        <PortLogger>0</PortLogger>
        <Port>10114</Port>
        <FanSpeedSettings>
          <AutoFan>true</AutoFan>
          <HighFan>true</HighFan>
          <LowFan>true</LowFan>
          <MaxFan>true</MaxFan>
          <MedFan>true</MedFan>
          <OffFan>true</OffFan>
        </FanSpeedSettings>
        <ReceivePort>10115</ReceivePort>
        <SensorSettings>
          <NoDeviceSensors>false</NoDeviceSensors>
          <outdoorSensor>0</outdoorSensor>
          <outdoorTempOffset>0</outdoorTempOffset>
          <TrackSensors>false</TrackSensors>
        </SensorSettings>
        <SetpointSettings>
          <BindSetpoints>false</BindSetpoints>
          <MaxTemp>27</MaxTemp>
          <MinTemp>15</MinTemp>
        </SetpointSettings>
      </Vantage.Generic_HVAC_RS485_PORT>
    </Object>
    <Object>
      <Vantage.Generic_HVAC_RS485_TechContacts_CHILD VID="6963" Master="9722" MTime="" Position="">
        <Name>Trend</Name>
        <Model>
        </Model>
        <DeviceCategory>HVAC</DeviceCategory>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Vantage.Generic_HVAC_RS485_TechContacts_CHILD</ObjectType>
        <Area>6</Area>
        <Location>
        </Location>
        <Version>
        </Version>
        <Log>None</Log>
        <Parent Position="1">6962</Parent>
      </Vantage.Generic_HVAC_RS485_TechContacts_CHILD>
    </Object>
    <Object>
      <DryContact VID="6964" Master="9722" MTime="" Position="">
        <Name>Technical contact 1</Name>
        <Note>
        </Note>
        <Model>Dry Contact</Model>
        <DName>
        </DName>
        <ObjectType>DryContact</ObjectType>
        <Area>0</Area>
        <Location>
        </Location>
        <Parent Position="1">6963</Parent>
        <Down>0</Down>
        <Up>0</Up>
        <ReversePolarity>false</ReversePolarity>
        <HoldOnTime>0</HoldOnTime>
      </DryContact>
    </Object>
    <Object>
      <DryContact VID="6965" Master="9722" MTime="" Position="">
        <Name>Technical contact 2</Name>
        <Note>
        </Note>
        <Model>Dry Contact</Model>
        <DName>
        </DName>
        <ObjectType>DryContact</ObjectType>
        <Area>0</Area>
        <Location>
        </Location>
        <Parent Position="2">6963</Parent>
        <Down>0</Down>
        <Up>0</Up>
        <ReversePolarity>false</ReversePolarity>
        <HoldOnTime>0</HoldOnTime>
      </DryContact>
    </Object>
    <Object>
      <DryContact VID="6966" Master="9722" MTime="" Position="">
        <Name>Technical contact 3</Name>
        <Note>
        </Note>
        <Model>Dry Contact</Model>
        <DName>
        </DName>
        <ObjectType>DryContact</ObjectType>
        <Area>0</Area>
        <Location>
        </Location>
        <Parent Position="3">6963</Parent>
        <Down>0</Down>
        <Up>0</Up>
        <ReversePolarity>false</ReversePolarity>
        <HoldOnTime>0</HoldOnTime>
      </DryContact>
    </Object>
    <Object>
      <DryContact VID="6967" Master="9722" MTime="" Position="">
        <Name>Technical contact 4</Name>
        <Note>
        </Note>
        <Model>Dry Contact</Model>
        <DName>
        </DName>
        <ObjectType>DryContact</ObjectType>
        <Area>0</Area>
        <Location>
        </Location>
        <Parent Position="4">6963</Parent>
        <Down>0</Down>
        <Up>0</Up>
        <ReversePolarity>false</ReversePolarity>
        <HoldOnTime>0</HoldOnTime>
      </DryContact>
    </Object>
    <Object>
      <DryContact VID="6968" Master="9722" MTime="" Position="">
        <Name>Technical contact 5</Name>
        <Note>
        </Note>
        <Model>Dry Contact</Model>
        <DName>
        </DName>
        <ObjectType>DryContact</ObjectType>
        <Area>0</Area>
        <Location>
        </Location>
        <Parent Position="5">6963</Parent>
        <Down>0</Down>
        <Up>0</Up>
        <ReversePolarity>false</ReversePolarity>
        <HoldOnTime>0</HoldOnTime>
      </DryContact>
    </Object>
    <Object>
      <DryContact VID="6969" Master="9722" MTime="" Position="">
        <Name>Technical contact 6</Name>
        <Note>
        </Note>
        <Model>Dry Contact</Model>
        <DName>
        </DName>
        <ObjectType>DryContact</ObjectType>
        <Area>0</Area>
        <Location>
        </Location>
        <Parent Position="6">6963</Parent>
        <Down>0</Down>
        <Up>0</Up>
        <ReversePolarity>false</ReversePolarity>
        <HoldOnTime>0</HoldOnTime>
      </DryContact>
    </Object>
    <Object>
      <DryContact VID="6970" Master="9722" MTime="" Position="">
        <Name>Technical contact 7</Name>
        <Note>
        </Note>
        <Model>Dry Contact</Model>
        <DName>
        </DName>
        <ObjectType>DryContact</ObjectType>
        <Area>0</Area>
        <Location>
        </Location>
        <Parent Position="7">6963</Parent>
        <Down>0</Down>
        <Up>0</Up>
        <ReversePolarity>false</ReversePolarity>
        <HoldOnTime>0</HoldOnTime>
      </DryContact>
    </Object>
    <Object>
      <DryContact VID="6971" Master="9722" MTime="" Position="">
        <Name>Technical contact 8</Name>
        <Note>
        </Note>
        <Model>Dry Contact</Model>
        <DName>
        </DName>
        <ObjectType>DryContact</ObjectType>
        <Area>0</Area>
        <Location>
        </Location>
        <Parent Position="8">6963</Parent>
        <Down>0</Down>
        <Up>0</Up>
        <ReversePolarity>false</ReversePolarity>
        <HoldOnTime>0</HoldOnTime>
      </DryContact>
    </Object>
    <Object>
      <DryContact VID="6972" Master="9722" MTime="" Position="">
        <Name>Technical contact 9</Name>
        <Note>
        </Note>
        <Model>Dry Contact</Model>
        <DName>
        </DName>
        <ObjectType>DryContact</ObjectType>
        <Area>0</Area>
        <Location>
        </Location>
        <Parent Position="9">6963</Parent>
        <Down>0</Down>
        <Up>0</Up>
        <ReversePolarity>false</ReversePolarity>
        <HoldOnTime>0</HoldOnTime>
      </DryContact>
    </Object>
    <Object>
      <DryContact VID="6973" Master="9722" MTime="" Position="">
        <Name>Technical contact 10</Name>
        <Note>
        </Note>
        <Model>Dry Contact</Model>
        <DName>
        </DName>
        <ObjectType>DryContact</ObjectType>
        <Area>0</Area>
        <Location>
        </Location>
        <Parent Position="10">6963</Parent>
        <Down>0</Down>
        <Up>0</Up>
        <ReversePolarity>false</ReversePolarity>
        <HoldOnTime>0</HoldOnTime>
      </DryContact>
    </Object>
    <Object>
      <Vantage.Generic_HVAC_RS485_Compound_CHILD VID="6974" Master="9722" MTime="" Position="" ExcludeFromWidgets="True">
        <Name>Trend</Name>
        <Model>
        </Model>
        <DeviceCategory>HVAC</DeviceCategory>
        <Note>
        </Note>
        <DName>Trend</DName>
        <ObjectType>Vantage.Generic_HVAC_RS485_Compound_CHILD</ObjectType>
        <Area>17</Area>
        <Location>
        </Location>
        <Version>
        </Version>
        <Log>None</Log>
        <Parent Position="2">6962</Parent>
        <AdressNumber>1</AdressNumber>
      </Vantage.Generic_HVAC_RS485_Compound_CHILD>
    </Object>
    <Object>
      <Vantage.Generic_HVAC_RS485_Zone_CHILD VID="6975" Master="9722" MTime="" Position="">
        <Name>Living</Name>
        <Model>
        </Model>
        <DeviceCategory>HVAC</DeviceCategory>
        <Note>
        </Note>
        <DName>Living</DName>
        <ObjectType>Vantage.Generic_HVAC_RS485_Zone_CHILD</ObjectType>
        <Area>19</Area>
        <Location>
        </Location>
        <Version>
        </Version>
        <Log>Level 3</Log>
        <Parent Position="1">6974</Parent>
        <IndoorSettings>
          <indoorSensor>0</indoorSensor>
          <IndoorTempOffset>0</IndoorTempOffset>
        </IndoorSettings>
        <PositionNumber>4</PositionNumber>
      </Vantage.Generic_HVAC_RS485_Zone_CHILD>
    </Object>
    <Object>
      <Temperature VID="6976" Master="9722" MTime="" Position="" Setpoint="Cool">
        <Name>CoolSetPoint</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Temperature</ObjectType>
        <Area>0</Area>
        <Location>
        </Location>
        <Parent Position="1">6975</Parent>
        <OutOfRange>0</OutOfRange>
        <InRange>0</InRange>
        <RangeHigh>27</RangeHigh>
        <RangeLow>18</RangeLow>
        <HoldOnTime>0</HoldOnTime>
        <Temp>0</Temp>
      </Temperature>
    </Object>
    <Object>
      <Temperature VID="6977" Master="9722" MTime="" Position="" Setpoint="Heat">
        <Name>HeatSetPoint</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Temperature</ObjectType>
        <Area>0</Area>
        <Location>
        </Location>
        <Parent Position="2">6975</Parent>
        <OutOfRange>0</OutOfRange>
        <InRange>0</InRange>
        <RangeHigh>24</RangeHigh>
        <RangeLow>15</RangeLow>
        <HoldOnTime>0</HoldOnTime>
        <Temp>0</Temp>
      </Temperature>
    </Object>
    <Object>
      <Temperature VID="6978" Master="9722" MTime="" Position="">
        <Name>Indoor Temperature</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Temperature</ObjectType>
        <Area>0</Area>
        <Location>
        </Location>
        <Parent Position="3">6975</Parent>
        <OutOfRange>0</OutOfRange>
        <InRange>0</InRange>
        <RangeHigh>40</RangeHigh>
        <RangeLow>15</RangeLow>
        <HoldOnTime>0</HoldOnTime>
        <Temp>0</Temp>
      </Temperature>
    </Object>
    <Object>
      <Temperature VID="6979" Master="9722" MTime="" Position="">
        <Name>ExternalTemperature</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Temperature</ObjectType>
        <Area>0</Area>
        <Location>
        </Location>
        <Parent Position="4">6975</Parent>
        <OutOfRange>0</OutOfRange>
        <InRange>0</InRange>
        <RangeHigh>40</RangeHigh>
        <RangeLow>15</RangeLow>
        <HoldOnTime>0</HoldOnTime>
        <Temp>0</Temp>
      </Temperature>
    </Object>
    <Object>
      <Vantage.Generic_HVAC_RS485_Zone_CHILD VID="6985" Master="9722" MTime="" Position="">
        <Name>W/C</Name>
        <Model>
        </Model>
        <DeviceCategory>HVAC</DeviceCategory>
        <Note>
        </Note>
        <DName>W/C</DName>
        <ObjectType>Vantage.Generic_HVAC_RS485_Zone_CHILD</ObjectType>
        <Area>27</Area>
        <Location>
        </Location>
        <Version>
        </Version>
        <Log>None</Log>
        <Parent Position="3">6974</Parent>
        <IndoorSettings>
          <indoorSensor>0</indoorSensor>
          <IndoorTempOffset>0</IndoorTempOffset>
        </IndoorSettings>
        <PositionNumber>5</PositionNumber>
      </Vantage.Generic_HVAC_RS485_Zone_CHILD>
    </Object>
    <Object>
      <Temperature VID="6986" Master="9722" MTime="" Position="" Setpoint="Cool">
        <Name>CoolSetPoint</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Temperature</ObjectType>
        <Area>0</Area>
        <Location>
        </Location>
        <Parent Position="1">6985</Parent>
        <OutOfRange>0</OutOfRange>
        <InRange>0</InRange>
        <RangeHigh>27</RangeHigh>
        <RangeLow>18</RangeLow>
        <HoldOnTime>0</HoldOnTime>
        <Temp>0</Temp>
      </Temperature>
    </Object>
    <Object>
      <Temperature VID="6987" Master="9722" MTime="" Position="" Setpoint="Heat">
        <Name>HeatSetPoint</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Temperature</ObjectType>
        <Area>0</Area>
        <Location>
        </Location>
        <Parent Position="2">6985</Parent>
        <OutOfRange>0</OutOfRange>
        <InRange>0</InRange>
        <RangeHigh>24</RangeHigh>
        <RangeLow>15</RangeLow>
        <HoldOnTime>0</HoldOnTime>
        <Temp>0</Temp>
      </Temperature>
    </Object>
    <Object>
      <Temperature VID="6988" Master="9722" MTime="" Position="">
        <Name>Indoor Temperature</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Temperature</ObjectType>
        <Area>0</Area>
        <Location>
        </Location>
        <Parent Position="3">6985</Parent>
        <OutOfRange>0</OutOfRange>
        <InRange>0</InRange>
        <RangeHigh>40</RangeHigh>
        <RangeLow>15</RangeLow>
        <HoldOnTime>0</HoldOnTime>
        <Temp>0</Temp>
      </Temperature>
    </Object>
    <Object>
      <Temperature VID="6989" Master="9722" MTime="" Position="">
        <Name>ExternalTemperature</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Temperature</ObjectType>
        <Area>0</Area>
        <Location>
        </Location>
        <Parent Position="4">6985</Parent>
        <OutOfRange>0</OutOfRange>
        <InRange>0</InRange>
        <RangeHigh>40</RangeHigh>
        <RangeLow>15</RangeLow>
        <HoldOnTime>0</HoldOnTime>
        <Temp>0</Temp>
      </Temperature>
    </Object>
    <Object>
      <Vantage.Generic_HVAC_RS485_Zone_CHILD VID="7000" Master="9722" MTime="" Position="">
        <Name>Bed 1</Name>
        <Model>
        </Model>
        <DeviceCategory>HVAC</DeviceCategory>
        <Note>
        </Note>
        <DName>Bed 1</DName>
        <ObjectType>Vantage.Generic_HVAC_RS485_Zone_CHILD</ObjectType>
        <Area>22</Area>
        <Location>
        </Location>
        <Version>
        </Version>
        <Log>None</Log>
        <Parent Position="6">6974</Parent>
        <IndoorSettings>
          <indoorSensor>0</indoorSensor>
          <IndoorTempOffset>0</IndoorTempOffset>
        </IndoorSettings>
        <PositionNumber>11</PositionNumber>
      </Vantage.Generic_HVAC_RS485_Zone_CHILD>
    </Object>
    <Object>
      <Temperature VID="7001" Master="9722" MTime="" Position="" Setpoint="Cool">
        <Name>CoolSetPoint</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Temperature</ObjectType>
        <Area>0</Area>
        <Location>
        </Location>
        <Parent Position="1">7000</Parent>
        <OutOfRange>0</OutOfRange>
        <InRange>0</InRange>
        <RangeHigh>27</RangeHigh>
        <RangeLow>18</RangeLow>
        <HoldOnTime>0</HoldOnTime>
        <Temp>0</Temp>
      </Temperature>
    </Object>
    <Object>
      <Temperature VID="7002" Master="9722" MTime="" Position="" Setpoint="Heat">
        <Name>HeatSetPoint</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Temperature</ObjectType>
        <Area>0</Area>
        <Location>
        </Location>
        <Parent Position="2">7000</Parent>
        <OutOfRange>0</OutOfRange>
        <InRange>0</InRange>
        <RangeHigh>24</RangeHigh>
        <RangeLow>15</RangeLow>
        <HoldOnTime>0</HoldOnTime>
        <Temp>0</Temp>
      </Temperature>
    </Object>
    <Object>
      <Temperature VID="7003" Master="9722" MTime="" Position="">
        <Name>Indoor Temperature</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Temperature</ObjectType>
        <Area>0</Area>
        <Location>
        </Location>
        <Parent Position="3">7000</Parent>
        <OutOfRange>0</OutOfRange>
        <InRange>0</InRange>
        <RangeHigh>40</RangeHigh>
        <RangeLow>15</RangeLow>
        <HoldOnTime>0</HoldOnTime>
        <Temp>0</Temp>
      </Temperature>
    </Object>
    <Object>
      <Temperature VID="7004" Master="9722" MTime="" Position="">
        <Name>ExternalTemperature</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Temperature</ObjectType>
        <Area>0</Area>
        <Location>
        </Location>
        <Parent Position="4">7000</Parent>
        <OutOfRange>0</OutOfRange>
        <InRange>0</InRange>
        <RangeHigh>40</RangeHigh>
        <RangeLow>15</RangeLow>
        <HoldOnTime>0</HoldOnTime>
        <Temp>0</Temp>
      </Temperature>
    </Object>
    <Object>
      <Vantage.Generic_HVAC_RS485_Zone_CHILD VID="7005" Master="9722" MTime="" Position="">
        <Name>Bed 1 En-Suite</Name>
        <Model>
        </Model>
        <DeviceCategory>HVAC</DeviceCategory>
        <Note>
        </Note>
        <DName>Bed 1 En-Suite</DName>
        <ObjectType>Vantage.Generic_HVAC_RS485_Zone_CHILD</ObjectType>
        <Area>23</Area>
        <Location>
        </Location>
        <Version>
        </Version>
        <Log>Level 3</Log>
        <Parent Position="7">6974</Parent>
        <IndoorSettings>
          <indoorSensor>0</indoorSensor>
          <IndoorTempOffset>0</IndoorTempOffset>
        </IndoorSettings>
        <PositionNumber>8</PositionNumber>
      </Vantage.Generic_HVAC_RS485_Zone_CHILD>
    </Object>
    <Object>
      <Temperature VID="7006" Master="9722" MTime="" Position="" Setpoint="Cool">
        <Name>CoolSetPoint</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Temperature</ObjectType>
        <Area>0</Area>
        <Location>
        </Location>
        <Parent Position="1">7005</Parent>
        <OutOfRange>0</OutOfRange>
        <InRange>0</InRange>
        <RangeHigh>27</RangeHigh>
        <RangeLow>18</RangeLow>
        <HoldOnTime>0</HoldOnTime>
        <Temp>0</Temp>
      </Temperature>
    </Object>
    <Object>
      <Temperature VID="7007" Master="9722" MTime="" Position="" Setpoint="Heat">
        <Name>HeatSetPoint</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Temperature</ObjectType>
        <Area>0</Area>
        <Location>
        </Location>
        <Parent Position="2">7005</Parent>
        <OutOfRange>0</OutOfRange>
        <InRange>0</InRange>
        <RangeHigh>24</RangeHigh>
        <RangeLow>15</RangeLow>
        <HoldOnTime>0</HoldOnTime>
        <Temp>0</Temp>
      </Temperature>
    </Object>
    <Object>
      <Temperature VID="7008" Master="9722" MTime="" Position="">
        <Name>Indoor Temperature</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Temperature</ObjectType>
        <Area>0</Area>
        <Location>
        </Location>
        <Parent Position="3">7005</Parent>
        <OutOfRange>0</OutOfRange>
        <InRange>0</InRange>
        <RangeHigh>40</RangeHigh>
        <RangeLow>15</RangeLow>
        <HoldOnTime>0</HoldOnTime>
        <Temp>0</Temp>
      </Temperature>
    </Object>
    <Object>
      <Temperature VID="7009" Master="9722" MTime="" Position="">
        <Name>ExternalTemperature</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Temperature</ObjectType>
        <Area>0</Area>
        <Location>
        </Location>
        <Parent Position="4">7005</Parent>
        <OutOfRange>0</OutOfRange>
        <InRange>0</InRange>
        <RangeHigh>40</RangeHigh>
        <RangeLow>15</RangeLow>
        <HoldOnTime>0</HoldOnTime>
        <Temp>0</Temp>
      </Temperature>
    </Object>
    <Object>
      <Vantage.Generic_HVAC_RS485_Zone_CHILD VID="7015" Master="9722" MTime="" Position="" ExcludeFromWidgets="True">
        <Name>MVHR</Name>
        <Model>
        </Model>
        <DeviceCategory>HVAC</DeviceCategory>
        <Note>
        </Note>
        <DName>MVHR</DName>
        <ObjectType>Vantage.Generic_HVAC_RS485_Zone_CHILD</ObjectType>
        <Area>17</Area>
        <Location>
        </Location>
        <Version>
        </Version>
        <Log>None</Log>
        <Parent Position="9">6974</Parent>
        <IndoorSettings>
          <indoorSensor>0</indoorSensor>
          <IndoorTempOffset>0</IndoorTempOffset>
        </IndoorSettings>
        <PositionNumber>14</PositionNumber>
      </Vantage.Generic_HVAC_RS485_Zone_CHILD>
    </Object>
    <Object>
      <Temperature VID="7016" Master="9722" MTime="" Position="" Setpoint="Cool">
        <Name>CoolSetPoint</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Temperature</ObjectType>
        <Area>0</Area>
        <Location>
        </Location>
        <Parent Position="1">7015</Parent>
        <OutOfRange>0</OutOfRange>
        <InRange>0</InRange>
        <RangeHigh>40</RangeHigh>
        <RangeLow>15</RangeLow>
        <HoldOnTime>0</HoldOnTime>
        <Temp>0</Temp>
      </Temperature>
    </Object>
    <Object>
      <Temperature VID="7017" Master="9722" MTime="" Position="" Setpoint="Heat">
        <Name>HeatSetPoint</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Temperature</ObjectType>
        <Area>0</Area>
        <Location>
        </Location>
        <Parent Position="2">7015</Parent>
        <OutOfRange>0</OutOfRange>
        <InRange>0</InRange>
        <RangeHigh>40</RangeHigh>
        <RangeLow>15</RangeLow>
        <HoldOnTime>0</HoldOnTime>
        <Temp>0</Temp>
      </Temperature>
    </Object>
    <Object>
      <Temperature VID="7018" Master="9722" MTime="" Position="">
        <Name>Indoor Temperature</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Temperature</ObjectType>
        <Area>0</Area>
        <Location>
        </Location>
        <Parent Position="3">7015</Parent>
        <OutOfRange>0</OutOfRange>
        <InRange>0</InRange>
        <RangeHigh>40</RangeHigh>
        <RangeLow>15</RangeLow>
        <HoldOnTime>0</HoldOnTime>
        <Temp>0</Temp>
      </Temperature>
    </Object>
    <Object>
      <Temperature VID="7019" Master="9722" MTime="" Position="">
        <Name>ExternalTemperature</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Temperature</ObjectType>
        <Area>0</Area>
        <Location>
        </Location>
        <Parent Position="4">7015</Parent>
        <OutOfRange>0</OutOfRange>
        <InRange>0</InRange>
        <RangeHigh>40</RangeHigh>
        <RangeLow>15</RangeLow>
        <HoldOnTime>0</HoldOnTime>
        <Temp>0</Temp>
      </Temperature>
    </Object>
    <Object>
      <Vantage.Generic_HVAC_RS485_Zone_CHILD VID="7534" Master="9722" MTime="" Position="">
        <Name>Bed 2</Name>
        <Model>
        </Model>
        <DeviceCategory>HVAC</DeviceCategory>
        <Note>
        </Note>
        <DName>Bed 2</DName>
        <ObjectType>Vantage.Generic_HVAC_RS485_Zone_CHILD</ObjectType>
        <Area>24</Area>
        <Location>
        </Location>
        <Version>
        </Version>
        <Log>None</Log>
        <Parent Position="2">6974</Parent>
        <IndoorSettings>
          <indoorSensor>0</indoorSensor>
          <IndoorTempOffset>0</IndoorTempOffset>
        </IndoorSettings>
        <PositionNumber>12</PositionNumber>
      </Vantage.Generic_HVAC_RS485_Zone_CHILD>
    </Object>
    <Object>
      <Temperature VID="7535" Master="9722" MTime="" Position="" Setpoint="Cool">
        <Name>CoolSetPoint</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Temperature</ObjectType>
        <Area>0</Area>
        <Location>
        </Location>
        <Parent Position="1">7534</Parent>
        <OutOfRange>0</OutOfRange>
        <InRange>0</InRange>
        <RangeHigh>27</RangeHigh>
        <RangeLow>18</RangeLow>
        <HoldOnTime>0</HoldOnTime>
        <Temp>0</Temp>
      </Temperature>
    </Object>
    <Object>
      <Temperature VID="7536" Master="9722" MTime="" Position="" Setpoint="Heat">
        <Name>HeatSetPoint</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Temperature</ObjectType>
        <Area>0</Area>
        <Location>
        </Location>
        <Parent Position="2">7534</Parent>
        <OutOfRange>0</OutOfRange>
        <InRange>0</InRange>
        <RangeHigh>24</RangeHigh>
        <RangeLow>15</RangeLow>
        <HoldOnTime>0</HoldOnTime>
        <Temp>0</Temp>
      </Temperature>
    </Object>
    <Object>
      <Temperature VID="7537" Master="9722" MTime="" Position="">
        <Name>Indoor Temperature</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Temperature</ObjectType>
        <Area>0</Area>
        <Location>
        </Location>
        <Parent Position="3">7534</Parent>
        <OutOfRange>0</OutOfRange>
        <InRange>0</InRange>
        <RangeHigh>40</RangeHigh>
        <RangeLow>15</RangeLow>
        <HoldOnTime>0</HoldOnTime>
        <Temp>0</Temp>
      </Temperature>
    </Object>
    <Object>
      <Temperature VID="7538" Master="9722" MTime="" Position="">
        <Name>ExternalTemperature</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Temperature</ObjectType>
        <Area>0</Area>
        <Location>
        </Location>
        <Parent Position="4">7534</Parent>
        <OutOfRange>0</OutOfRange>
        <InRange>0</InRange>
        <RangeHigh>40</RangeHigh>
        <RangeLow>15</RangeLow>
        <HoldOnTime>0</HoldOnTime>
        <Temp>0</Temp>
      </Temperature>
    </Object>
    <Object>
      <DCPowerProfile VID="7893" Master="0" MTime="">
        <Name>Anti-Flicker</Name>
        <Model>Default</Model>
        <Note />
        <DName>Anti-Flicker</DName>
        <ObjectType>DCPowerProfile</ObjectType>
        <Min>9</Min>
        <Max>10</Max>
        <Adjust>0</Adjust>
        <Freq>60</Freq>
        <Inductive>false</Inductive>
        <Linearization label="" />
      </DCPowerProfile>
    </Object>
    <Object>
      <Load VID="9306" Position="" Master="9722" MTime="">
        <Name>Bed 1 En-suite spots</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <ContractorNumber>A16</ContractorNumber>
        <DName>Spots</DName>
        <FixtureDefinition>0</FixtureDefinition>
        <LoadType>Fluor. Electronic Dim</LoadType>
        <FixturePower>100</FixturePower>
        <FixtureQuantity>1</FixtureQuantity>
        <Power>100</Power>
        <OverrideLevel>100</OverrideLevel>
        <Parent Position="5">65</Parent>
        <ObjectType>Load</ObjectType>
        <Area>23</Area>
        <Location>
        </Location>
        <PowerProfile>10</PowerProfile>
      </Load>
    </Object>
    <Object>
      <Load VID="9307" Position="" Master="9722" MTime="">
        <Name>Dining Spots</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <ContractorNumber>A24</ContractorNumber>
        <DName>Dining</DName>
        <FixtureDefinition>0</FixtureDefinition>
        <LoadType>Fluor. Electronic Dim</LoadType>
        <FixturePower>100</FixturePower>
        <FixtureQuantity>1</FixtureQuantity>
        <Power>100</Power>
        <OverrideLevel>100</OverrideLevel>
        <Parent Position="6">65</Parent>
        <ObjectType>Load</ObjectType>
        <Area>19</Area>
        <Location>
        </Location>
        <PowerProfile>10</PowerProfile>
      </Load>
    </Object>
    <Object>
      <RelayBlind VID="9650" Master="9722" MTime="" ShadeOrientation="TopDown" ShadeType="Roller">
        <Name>Living Blind 1</Name>
        <Model />
        <Note />
        <DName>Living Blind 1</DName>
        <ObjectType>RelayBlind</ObjectType>
        <Area>19</Area>
        <Location />
        <ControlType>ReversingPolarity</ControlType>
        <OpenLoad>112</OpenLoad>
        <CloseLoad>112</CloseLoad>
        <PowerLoad>113</PowerLoad>
        <Movement>
          <Open>35</Open>
          <Close>35</Close>
        </Movement>
        <PulseDuration>1.0</PulseDuration>
      </RelayBlind>
    </Object>
    <Object>
      <RelayBlind VID="9652" Master="9722" MTime="" ShadeOrientation="TopDown" ShadeType="Roller">
        <Name>Bed 1 Blinds 2</Name>
        <Model />
        <Note />
        <DName>Bed 1 Blinds 2</DName>
        <ObjectType>RelayBlind</ObjectType>
        <Area>22</Area>
        <Location />
        <ControlType>ReversingPolarity</ControlType>
        <OpenLoad>101</OpenLoad>
        <CloseLoad>101</CloseLoad>
        <PowerLoad>100</PowerLoad>
        <Movement>
          <Open>35</Open>
          <Close>35</Close>
        </Movement>
        <PulseDuration>1.0</PulseDuration>
      </RelayBlind>
    </Object>
    <Object>
      <RelayBlind VID="9653" Master="9722" MTime="" ShadeOrientation="TopDown" ShadeType="Roller">
        <Name>Bed 2 Blinds</Name>
        <Model />
        <Note />
        <DName>Bed 2 Blinds</DName>
        <ObjectType>RelayBlind</ObjectType>
        <Area>24</Area>
        <Location />
        <ControlType>ReversingPolarity</ControlType>
        <OpenLoad>104</OpenLoad>
        <CloseLoad>104</CloseLoad>
        <PowerLoad>105</PowerLoad>
        <Movement>
          <Open>35</Open>
          <Close>35</Close>
        </Movement>
        <PulseDuration>1.0</PulseDuration>
      </RelayBlind>
    </Object>
    <Object>
      <KeypadStyle VID="9715" Master="0" MTime="">
        <Name>Keypad Style 1</Name>
        <Note>
        </Note>
        <DName>
        </DName>
        <Model>Standard</Model>
        <ButtonShape>EasyTouch II</ButtonShape>
        <Design>SoftLine - Metal</Design>
        <Color>Black</Color>
        <TrimColor>Black</TrimColor>
        <Font>Helvetica</Font>
        <Italic>false</Italic>
        <TextPlacement>true</TextPlacement>
        <AutoBacklight>true</AutoBacklight>
        <MinAutoDimLevel>25</MinAutoDimLevel>
        <SounderFreq>1200</SounderFreq>
        <SounderLength>100</SounderLength>
        <FastBlinkRate>100</FastBlinkRate>
        <ObjectType>KeypadStyle</ObjectType>
        <BacklitButtons>true</BacklitButtons>
        <BacklightLEDStyle>0</BacklightLEDStyle>
      </KeypadStyle>
    </Object>
    <Object>
      <DINControllerPowerSupply VID="9717" Master="9722" MTime="">
        <Name>DIN Controller Power Supply 1</Name>
        <Model>36VDC</Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>DINControllerPowerSupply</ObjectType>
        <DINEnclosure Position="1" Row="0">38</DINEnclosure>
        <ModuleCount>14</ModuleCount>
        <TrimmingPlate>
        </TrimmingPlate>
      </DINControllerPowerSupply>
    </Object>
    <Object>
      <Master VID="9722" Master="9722" MTime="">
        <Name>IC-DIN</Name>
        <Model>IC-II-DIN</Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Master</ObjectType>
        <Number>1</Number>
        <Boot>0</Boot>
        <Volts>36</Volts>
        <Amps>5.5</Amps>
        <DINEnclosure Position="0" Row="0">38</DINEnclosure>
        <ModuleCount>9</ModuleCount>
        <PowerSupply>9717</PowerSupply>
        <SerialNumber>
        </SerialNumber>
      </Master>
    </Object>
    <Object>
      <GMem VID="9732" Master="9722" MTime="">
        <Name>Motion sensor bathroom overide</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>GMem</ObjectType>
        <Category>9740</Category>
        <data Fixed="false">
          <val>0</val>
        </data>
        <Persistent>true</Persistent>
        <Tag object="false">bool</Tag>
      </GMem>
    </Object>
    <Object>
      <Task VID="9733" Master="9722" MTime="">
        <Name>Bathroom PIR Task</Name>
        <Model>Bathroom PIR Task</Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Task</ObjectType>
        <Category>9740</Category>
        <Procedure>
          <Target>10165</Target>
          <Function>SceneProgram_9733</Function>
          <Parameters>
            <Param>0</Param>
            <Param>1</Param>
            <Param>2</Param>
          </Parameters>
        </Procedure>
        <Query>
          <Target>0</Target>
          <Function />
          <Parameters />
        </Query>
        <Adjust>
          <Target>0</Target>
          <Function />
          <Parameters />
        </Adjust>
        <Level>
          <Target>0</Target>
          <Function />
          <Parameters />
        </Level>
        <ParamTable>
          <Param ID="0">
            <gmem Type="ref">9743</gmem>
          </Param>
          <Param ID="1">
            <gmem Type="ref">10105</gmem>
          </Param>
          <Param ID="2">
            <gmem Type="ref">9732</gmem>
          </Param>
        </ParamTable>
        <DependTable>
        </DependTable>
      </Task>
      <Module>
        <Library Name="Lighting\Toggle" Local="true" />
        <Library Name="Programming\LaunchTasks" Local="true" />
        <Library Name="Programming\VantageTime" Local="true" />
        <Library Name="Programming\MiscTasks" Local="true" />
        <Library Name="vantage" Local="false" />
        <Scene>
          <Name>SceneProgram_9733</Name>
          <Type>procedure</Type>
          <Parameters>
            <Param>
              <Reference>true</Reference>
              <Label>Number</Label>
              <Label>GMem</Label>
              <Name>param4</Name>
            </Param>
            <Param>
              <Reference>true</Reference>
              <Label>Delay</Label>
              <Label>GMem</Label>
              <Name>param5</Name>
            </Param>
            <Param>
              <Reference>true</Reference>
              <Label>bool</Label>
              <Label>GMem</Label>
              <Name>param3</Name>
            </Param>
          </Parameters>
          <ParameterValues>
            <Param>
              <Label>GMem</Label>
              <Constant Type="int">9743</Constant>
              <ParamName>param4</ParamName>
            </Param>
            <Param>
              <Label>GMem</Label>
              <Constant Type="int">10105</Constant>
              <ParamName>param5</ParamName>
            </Param>
            <Param>
              <Label>GMem</Label>
              <Constant Type="int">9732</Constant>
              <ParamName>param3</ParamName>
            </Param>
          </ParameterValues>
          <FunctionBody>
            <If disable="false">
              <LogicalExpression>
                <GivePrecedence>false</GivePrecedence>
                <Expanded>true</Expanded>
                <LogicalExpression>
                  <GivePrecedence>false</GivePrecedence>
                  <Expanded>true</Expanded>
                  <RelationalExpression>
                    <Operand>
                      <Label>bool</Label>
                      <Identifier>param3</Identifier>
                    </Operand>
                    <Operator>eq</Operator>
                    <Operand>
                      <Label>bool</Label>
                      <Constant Type="bool">false</Constant>
                    </Operand>
                  </RelationalExpression>
                </LogicalExpression>
                <Operator>and</Operator>
                <LogicalExpression>
                  <GivePrecedence>false</GivePrecedence>
                  <Expanded>true</Expanded>
                  <RelationalExpression>
                    <Operand>
                      <Label>Number</Label>
                      <Identifier>param4</Identifier>
                    </Operand>
                    <Operator>eq</Operator>
                    <Operand>
                      <Label>Number</Label>
                      <Constant Type="int">0</Constant>
                    </Operand>
                  </RelationalExpression>
                </LogicalExpression>
              </LogicalExpression>
              <StatementList>
                <If disable="false">
                  <LogicalExpression>
                    <GivePrecedence>false</GivePrecedence>
                    <Expanded>true</Expanded>
                    <RelationalExpression>
                      <Operand>
                        <Label>TriggerType</Label>
                        <FunctionCall>
                          <Name>GetEventType</Name>
                          <Parameters />
                        </FunctionCall>
                      </Operand>
                      <Operator>eq</Operator>
                      <Operand>
                        <Label>TriggerType</Label>
                        <Identifier>ButtonPress</Identifier>
                      </Operand>
                    </RelationalExpression>
                  </LogicalExpression>
                  <StatementList>
                    <If disable="false">
                      <LogicalExpression>
                        <GivePrecedence>false</GivePrecedence>
                        <Expanded>true</Expanded>
                        <RelationalExpression>
                          <Operand>
                            <Label>bool</Label>
                            <FunctionCall>
                              <Name>DayTime</Name>
                              <Parameters />
                            </FunctionCall>
                          </Operand>
                          <Operator>eq</Operator>
                          <Operand>
                            <Label>bool</Label>
                            <Constant Type="bool">true</Constant>
                          </Operand>
                        </RelationalExpression>
                      </LogicalExpression>
                      <StatementList>
                        <FunctionCall disable="false">
                          <Name>LaunchTaskWithCurrentEvent</Name>
                          <Parameters>
                            <Param>
                              <Label>Task</Label>
                              <Initializer>
                                <Constant Type="int">10140</Constant>
                              </Initializer>
                              <ParamName>tasks</ParamName>
                            </Param>
                          </Parameters>
                        </FunctionCall>
                      </StatementList>
                      <Expanded>True</Expanded>
                    </If>
                    <Else disable="false">
                      <StatementList>
                        <FunctionCall disable="false">
                          <Name>LaunchTaskWithCurrentEvent</Name>
                          <Parameters>
                            <Param>
                              <Label>Task</Label>
                              <Initializer>
                                <Constant Type="int">10141</Constant>
                              </Initializer>
                              <ParamName>tasks</ParamName>
                            </Param>
                          </Parameters>
                        </FunctionCall>
                      </StatementList>
                      <Expanded>True</Expanded>
                    </Else>
                  </StatementList>
                  <Expanded>True</Expanded>
                </If>
                <ElseIf disable="false">
                  <LogicalExpression>
                    <GivePrecedence>false</GivePrecedence>
                    <Expanded>true</Expanded>
                    <RelationalExpression>
                      <Operand>
                        <Label>TriggerType</Label>
                        <FunctionCall>
                          <Name>GetEventType</Name>
                          <Parameters />
                        </FunctionCall>
                      </Operand>
                      <Operator>eq</Operator>
                      <Operand>
                        <Label>TriggerType</Label>
                        <Identifier>ButtonRelease</Identifier>
                      </Operand>
                    </RelationalExpression>
                  </LogicalExpression>
                  <StatementList>
                    <FunctionCall disable="false">
                      <Name>TheDelay</Name>
                      <Parameters>
                        <Param>
                          <Label>Delay</Label>
                          <Identifier>param5</Identifier>
                          <ParamName>delayTime</ParamName>
                        </Param>
                      </Parameters>
                    </FunctionCall>
                    <FunctionCall disable="false">
                      <Name>Off</Name>
                      <Parameters>
                        <Param>
                          <Label>Load</Label>
                          <Initializer>
                            <Constant Type="int">84</Constant>
                            <Constant Type="int">71</Constant>
                          </Initializer>
                          <ParamName>loads</ParamName>
                        </Param>
                        <Param>
                          <Label>Seconds</Label>
                          <Constant Type="float">2.0</Constant>
                          <ParamName>rampTime</ParamName>
                        </Param>
                      </Parameters>
                    </FunctionCall>
                  </StatementList>
                  <Expanded>True</Expanded>
                </ElseIf>
              </StatementList>
              <Expanded>True</Expanded>
            </If>
          </FunctionBody>
        </Scene>
      </Module>
    </Object>
    <Object>
      <Task VID="9735" Master="9722" MTime="">
        <Name>Bathroom Scene 1</Name>
        <Model>Bathroom Scene 1</Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Task</ObjectType>
        <Category>9740</Category>
        <Procedure>
          <Target>10165</Target>
          <Function>SceneProgram_9735</Function>
          <Parameters>
            <Param>0</Param>
            <Param>1</Param>
          </Parameters>
        </Procedure>
        <Query>
          <Target>10172</Target>
          <Function>VariableAtSpecifiedValue</Function>
          <Parameters>
            <Param>2</Param>
            <Param>3</Param>
          </Parameters>
        </Query>
        <Adjust>
          <Target>10173</Target>
          <Function>AdjustLoads</Function>
          <Parameters>
            <Param>4</Param>
            <Param>5</Param>
            <Param>6</Param>
          </Parameters>
        </Adjust>
        <Level Max="100">
          <Target>10173</Target>
          <Function>AverageLoadLevel</Function>
          <Parameters>
            <Param>4</Param>
          </Parameters>
        </Level>
        <ParamTable>
          <Param ID="0">
            <gmem Type="ref">9732</gmem>
          </Param>
          <Param ID="1">
            <gmem Type="ref">10014</gmem>
          </Param>
          <Param ID="2">
            <gmem>10014</gmem>
          </Param>
          <Param ID="3">
            <val>2</val>
          </Param>
          <Param ID="4">
            <array>
              <val>84</val>
              <val>71</val>
            </array>
          </Param>
          <Param ID="5" Fixed="true">
            <val>5</val>
          </Param>
          <Param ID="6" Fixed="true">
            <val>10</val>
          </Param>
        </ParamTable>
        <DependTable>
          <Param>2</Param>
        </DependTable>
      </Task>
      <Module>
        <Library Name="Lighting\Toggle" Local="true" />
        <Library Name="vantage" Local="false" />
        <Scene>
          <Name>SceneProgram_9735</Name>
          <Type>procedure</Type>
          <Parameters>
            <Param>
              <Reference>true</Reference>
              <Label>bool</Label>
              <Label>GMem</Label>
              <Name>param1</Name>
            </Param>
            <Param>
              <Reference>true</Reference>
              <Label>Number</Label>
              <Label>GMem</Label>
              <Name>param5</Name>
            </Param>
          </Parameters>
          <ParameterValues>
            <Param>
              <Label>GMem</Label>
              <Constant Type="int">9732</Constant>
              <ParamName>param1</ParamName>
            </Param>
            <Param>
              <Label>GMem</Label>
              <Constant Type="int">10014</Constant>
              <ParamName>param5</ParamName>
            </Param>
          </ParameterValues>
          <FunctionBody>
            <FunctionCall disable="false">
              <Name>On</Name>
              <Parameters>
                <Param>
                  <Label>Load</Label>
                  <Initializer>
                    <Constant Type="int">84</Constant>
                    <Constant Type="int">71</Constant>
                  </Initializer>
                  <ParamName>loads</ParamName>
                </Param>
                <Param>
                  <Label>Level</Label>
                  <Initializer>
                    <Constant Type="float">100.0</Constant>
                    <Constant Type="float">100.0</Constant>
                  </Initializer>
                  <ParamName>levels</ParamName>
                </Param>
                <Param>
                  <Label>Seconds</Label>
                  <Constant Type="float">2.0</Constant>
                  <ParamName>rampTime</ParamName>
                </Param>
                <Param>
                  <Label>bool</Label>
                  <Constant Type="bool">true</Constant>
                  <ParamName>learnable</ParamName>
                </Param>
                <Param>
                  <Label>MemID</Label>
                  <Constant Type="int">0</Constant>
                  <ParamName>bufferid</ParamName>
                </Param>
              </Parameters>
            </FunctionCall>
            <Assignment disable="false">
              <Operand>
                <Identifier>param1</Identifier>
              </Operand>
              <Assign>equals</Assign>
              <Operand>
                <Label>bool</Label>
                <Constant Type="bool">true</Constant>
              </Operand>
            </Assignment>
            <Assignment disable="false">
              <Operand>
                <Identifier>param5</Identifier>
              </Operand>
              <Assign>equals</Assign>
              <Operand>
                <Label>Number</Label>
                <Constant Type="int">2</Constant>
              </Operand>
            </Assignment>
            <QueryCall>
              <Name>VariableAtSpecifiedValue</Name>
              <Parameters>
                <Param>
                  <Label>GMem</Label>
                  <Constant Type="int">10014</Constant>
                  <ParamName>variable</ParamName>
                </Param>
                <Param>
                  <Label>Number</Label>
                  <Constant Type="int">2</Constant>
                  <ParamName>value</ParamName>
                </Param>
              </Parameters>
            </QueryCall>
          </FunctionBody>
        </Scene>
      </Module>
    </Object>
    <Object>
      <Category VID="9740" Master="9722" MTime="">
        <Name>W/C</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Category</ObjectType>
        <Category>7</Category>
        <Location>11</Location>
      </Category>
    </Object>
    <Object>
      <Category VID="9741" Master="9722" MTime="">
        <Name>Global</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Category</ObjectType>
        <Category>7</Category>
        <Location>0</Location>
      </Category>
    </Object>
    <Object>
      <Task VID="9742" Master="9722" MTime="">
        <Name>Bathroom PIR</Name>
        <Model>Bathroom PIR</Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Task</ObjectType>
        <Category>9740</Category>
        <Procedure>
          <Target>10165</Target>
          <Function>SceneProgram_9742</Function>
          <Parameters>
            <Param>0</Param>
          </Parameters>
        </Procedure>
        <Query>
          <Target>10172</Target>
          <Function>VariableAtSpecifiedValue</Function>
          <Parameters>
            <Param>1</Param>
            <Param>2</Param>
          </Parameters>
        </Query>
        <Adjust>
          <Target>0</Target>
          <Function />
          <Parameters />
        </Adjust>
        <Level>
          <Target>0</Target>
          <Function />
          <Parameters />
        </Level>
        <ParamTable>
          <Param ID="0">
            <gmem Type="ref">9743</gmem>
          </Param>
          <Param ID="1">
            <gmem>9743</gmem>
          </Param>
          <Param ID="2">
            <val>0</val>
          </Param>
        </ParamTable>
        <DependTable>
          <Param>1</Param>
        </DependTable>
      </Task>
      <Module>
        <Library Name="Lighting\Toggle" Local="true" />
        <Library Name="vantage" Local="false" />
        <Scene>
          <Name>SceneProgram_9742</Name>
          <Type>procedure</Type>
          <Parameters>
            <Param>
              <Reference>true</Reference>
              <Label>Number</Label>
              <Label>GMem</Label>
              <Name>param1</Name>
            </Param>
          </Parameters>
          <ParameterValues>
            <Param>
              <Label>GMem</Label>
              <Constant Type="int">9743</Constant>
              <ParamName>param1</ParamName>
            </Param>
          </ParameterValues>
          <FunctionBody>
            <If disable="false">
              <LogicalExpression>
                <GivePrecedence>false</GivePrecedence>
                <Expanded>true</Expanded>
                <RelationalExpression>
                  <Operand>
                    <Label>Number</Label>
                    <Identifier>param1</Identifier>
                  </Operand>
                  <Operator>eq</Operator>
                  <Operand>
                    <Label>Number</Label>
                    <Constant Type="int">1</Constant>
                  </Operand>
                </RelationalExpression>
              </LogicalExpression>
              <StatementList>
                <Assignment disable="false">
                  <Operand>
                    <Identifier>param1</Identifier>
                  </Operand>
                  <Assign>equals</Assign>
                  <Operand>
                    <Label>Number</Label>
                    <Constant Type="int">0</Constant>
                  </Operand>
                </Assignment>
              </StatementList>
              <Expanded>True</Expanded>
            </If>
            <Else disable="false">
              <StatementList>
                <Assignment disable="false">
                  <Operand>
                    <Identifier>param1</Identifier>
                  </Operand>
                  <Assign>equals</Assign>
                  <Operand>
                    <Label>Number</Label>
                    <Constant Type="int">1</Constant>
                  </Operand>
                </Assignment>
                <FunctionCall disable="false">
                  <Name>Off</Name>
                  <Parameters>
                    <Param>
                      <Label>Load</Label>
                      <Initializer>
                        <Constant Type="int">84</Constant>
                        <Constant Type="int">71</Constant>
                      </Initializer>
                      <ParamName>loads</ParamName>
                    </Param>
                    <Param>
                      <Label>Seconds</Label>
                      <Constant Type="float">2.0</Constant>
                      <ParamName>rampTime</ParamName>
                    </Param>
                  </Parameters>
                </FunctionCall>
              </StatementList>
              <Expanded>True</Expanded>
            </Else>
            <QueryCall>
              <Name>VariableAtSpecifiedValue</Name>
              <Parameters>
                <Param>
                  <Label>GMem</Label>
                  <Constant Type="int">9743</Constant>
                  <ParamName>variable</ParamName>
                </Param>
                <Param>
                  <Label>Number</Label>
                  <Constant Type="int">0</Constant>
                  <ParamName>value</ParamName>
                </Param>
              </Parameters>
            </QueryCall>
          </FunctionBody>
        </Scene>
      </Module>
    </Object>
    <Object>
      <GMem VID="9743" Master="9722" MTime="">
        <Name>Bathroom PIR</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>GMem</ObjectType>
        <Category>9740</Category>
        <data Fixed="false">
          <val>0</val>
        </data>
        <Persistent>true</Persistent>
        <Tag object="false">Number</Tag>
      </GMem>
    </Object>
    <Object>
      <EqCtrl VID="9744" Master="9722" MTime="" Type="Thermostat">
        <Name>Living</Name>
        <Model>Black</Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>EqCtrl</ObjectType>
        <Area>19</Area>
        <Location>
        </Location>
        <Pages>3</Pages>
        <Activate>0</Activate>
        <Header Type="Thermostat">6975</Header>
        <Zone>10263</Zone>
        <SerialNumber>2384337</SerialNumber>
        <Bus>3</Bus>
        <Style>117</Style>
        <PresetTable>
          <Preset>9761</Preset>
          <Preset>9762</Preset>
          <Preset>9763</Preset>
        </PresetTable>
      </EqCtrl>
    </Object>
    <Object>
      <Button VID="9745" Master="9722" MTime="" Position="" Adjust="Full" MaxLevel="100">
        <Name>Scene 3</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Button</ObjectType>
        <Parent Position="7">9744</Parent>
        <Down>10047</Down>
        <Up>0</Up>
        <Hold>0</Hold>
        <Text1>Scene 3</Text1>
        <Text2>
        </Text2>
        <PlacementTable>
        </PlacementTable>
        <ButtonStyle>119</ButtonStyle>
        <LEDStyle>120</LEDStyle>
      </Button>
    </Object>
    <Object>
      <Button VID="9746" Master="9722" MTime="" Position="" Adjust="Full" MaxLevel="100">
        <Name>Spots</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Button</ObjectType>
        <Parent Position="2">9744</Parent>
        <Down>9982</Down>
        <Up>9982</Up>
        <Hold>9982</Hold>
        <Text1>spots</Text1>
        <Text2>
        </Text2>
        <PlacementTable>
        </PlacementTable>
        <ButtonStyle>119</ButtonStyle>
        <LEDStyle>120</LEDStyle>
      </Button>
    </Object>
    <Object>
      <Button VID="9747" Master="9722" MTime="" Position="" Adjust="None">
        <Name>Blinds Up</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Button</ObjectType>
        <Parent Position="3">9744</Parent>
        <Down>9917</Down>
        <Up>0</Up>
        <Hold>0</Hold>
        <Text1>Blinds up</Text1>
        <Text2>
        </Text2>
        <PlacementTable>
        </PlacementTable>
        <ButtonStyle>119</ButtonStyle>
        <LEDStyle>120</LEDStyle>
      </Button>
    </Object>
    <Object>
      <Button VID="9748" Master="9722" MTime="" Position="" Adjust="Full" MaxLevel="100">
        <Name>Scene 1</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Button</ObjectType>
        <Parent Position="1">9744</Parent>
        <Down>10020</Down>
        <Up>0</Up>
        <Hold>0</Hold>
        <Text1>Scene 1</Text1>
        <Text2>
        </Text2>
        <PlacementTable>
        </PlacementTable>
        <ButtonStyle>119</ButtonStyle>
        <LEDStyle>120</LEDStyle>
      </Button>
    </Object>
    <Object>
      <Button VID="9749" Master="9722" MTime="" Position="" Adjust="Full" MaxLevel="100">
        <Name>LED</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Button</ObjectType>
        <Parent Position="5">9744</Parent>
        <Down>9983</Down>
        <Up>9983</Up>
        <Hold>9983</Hold>
        <Text1>led</Text1>
        <Text2>
        </Text2>
        <PlacementTable>
        </PlacementTable>
        <ButtonStyle>119</ButtonStyle>
        <LEDStyle>120</LEDStyle>
      </Button>
    </Object>
    <Object>
      <Button VID="9750" Master="9722" MTime="" Position="" Adjust="None">
        <Name>Blinds Stop</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Button</ObjectType>
        <Parent Position="6">9744</Parent>
        <Down>9916</Down>
        <Up>0</Up>
        <Hold>0</Hold>
        <Text1>Blinds stop</Text1>
        <Text2>
        </Text2>
        <PlacementTable>
        </PlacementTable>
        <ButtonStyle>119</ButtonStyle>
        <LEDStyle>120</LEDStyle>
      </Button>
    </Object>
    <Object>
      <Button VID="9751" Master="9722" MTime="" Position="" Adjust="Full" MaxLevel="100">
        <Name>Scene 2</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Button</ObjectType>
        <Parent Position="4">9744</Parent>
        <Down>9929</Down>
        <Up>0</Up>
        <Hold>0</Hold>
        <Text1>Scene 2</Text1>
        <Text2>
        </Text2>
        <PlacementTable>
        </PlacementTable>
        <ButtonStyle>119</ButtonStyle>
        <LEDStyle>120</LEDStyle>
      </Button>
    </Object>
    <Object>
      <Button VID="9752" Master="9722" MTime="" Position="" Adjust="None" MaxLevel="100">
        <Name>
        </Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Button</ObjectType>
        <Parent Position="8">9744</Parent>
        <Down>0</Down>
        <Up>0</Up>
        <Hold>0</Hold>
        <Text1>
        </Text1>
        <Text2>
        </Text2>
        <PlacementTable>
        </PlacementTable>
        <ButtonStyle>119</ButtonStyle>
        <LEDStyle>120</LEDStyle>
      </Button>
    </Object>
    <Object>
      <Button VID="9753" Master="9722" MTime="" Position="" Adjust="None">
        <Name>Blinds Down</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Button</ObjectType>
        <Parent Position="9">9744</Parent>
        <Down>9915</Down>
        <Up>0</Up>
        <Hold>0</Hold>
        <Text1>Blinds down</Text1>
        <Text2>
        </Text2>
        <PlacementTable>
        </PlacementTable>
        <ButtonStyle>119</ButtonStyle>
        <LEDStyle>120</LEDStyle>
      </Button>
    </Object>
    <Object>
      <Button VID="9760" Master="9722" MTime="" Position="" Adjust="None">
        <Name>Hard Right Button</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Button</ObjectType>
        <Parent Position="254">9744</Parent>
        <Down>10006</Down>
        <Up>10006</Up>
        <Hold>10006</Hold>
        <Text1>
        </Text1>
        <Text2>
        </Text2>
        <PlacementTable>
        </PlacementTable>
        <ButtonStyle>119</ButtonStyle>
        <LEDStyle>120</LEDStyle>
      </Button>
    </Object>
    <Object>
      <Preset VID="9761" Master="9722" MTime="2016-09-28T13:44:13.879" Preset="AM">
        <Name>AMBand 1</Name>
        <Model>AM</Model>
        <Note />
        <DName />
        <Category>9740</Category>
        <Setup>
          <Action Function="" />
        </Setup>
        <PresetTable>
          <Preset Name="Preset 1" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>540</val>
            </Action>
          </Preset>
          <Preset Name="Preset 2" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>770</val>
            </Action>
          </Preset>
          <Preset Name="Preset 3" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>1000</val>
            </Action>
          </Preset>
          <Preset Name="Preset 4" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>1230</val>
            </Action>
          </Preset>
          <Preset Name="Preset 5" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>1460</val>
            </Action>
          </Preset>
          <Preset Name="Preset 6" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>1690</val>
            </Action>
          </Preset>
        </PresetTable>
        <DeviceTable />
        <ObjectType>Preset</ObjectType>
      </Preset>
    </Object>
    <Object>
      <Preset VID="9762" Master="9722" MTime="2016-09-28T13:44:13.880" Preset="FM">
        <Name>FMBand 1</Name>
        <Model>FM</Model>
        <Note />
        <DName />
        <Category>9740</Category>
        <Setup>
          <Action Function="" />
        </Setup>
        <PresetTable>
          <Preset Name="Preset 1" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>87.5</val>
            </Action>
          </Preset>
          <Preset Name="Preset 2" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>91.5</val>
            </Action>
          </Preset>
          <Preset Name="Preset 3" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>95.5</val>
            </Action>
          </Preset>
          <Preset Name="Preset 4" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>99.5</val>
            </Action>
          </Preset>
          <Preset Name="Preset 5" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>103.5</val>
            </Action>
          </Preset>
          <Preset Name="Preset 6" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>107.5</val>
            </Action>
          </Preset>
        </PresetTable>
        <DeviceTable />
        <ObjectType>Preset</ObjectType>
      </Preset>
    </Object>
    <Object>
      <Preset VID="9763" Master="9722" MTime="2016-09-28T13:44:13.880" Preset="XM">
        <Name>XMBand 1</Name>
        <Model>XM</Model>
        <Note />
        <DName />
        <Category>9740</Category>
        <Setup>
          <Action Function="" />
        </Setup>
        <PresetTable>
          <Preset Name="Preset 1" GenericIcon="true">
            <Action Function="Channel.Set">
              <val>1</val>
            </Action>
          </Preset>
          <Preset Name="Preset 2" GenericIcon="true">
            <Action Function="Channel.Set">
              <val>1</val>
            </Action>
          </Preset>
          <Preset Name="Preset 3" GenericIcon="true">
            <Action Function="Channel.Set">
              <val>1</val>
            </Action>
          </Preset>
          <Preset Name="Preset 4" GenericIcon="true">
            <Action Function="Channel.Set">
              <val>1</val>
            </Action>
          </Preset>
          <Preset Name="Preset 5" GenericIcon="true">
            <Action Function="Channel.Set">
              <val>1</val>
            </Action>
          </Preset>
          <Preset Name="Preset 6" GenericIcon="true">
            <Action Function="Channel.Set">
              <val>1</val>
            </Action>
          </Preset>
        </PresetTable>
        <DeviceTable />
        <ObjectType>Preset</ObjectType>
      </Preset>
    </Object>
    <Object>
      <Preset VID="9781" Master="9722" MTime="2016-09-28T13:44:13.881" Preset="AM">
        <Name>AMBand 1</Name>
        <Model>AM</Model>
        <Note />
        <DName />
        <Category>9740</Category>
        <Setup>
          <Action Function="" />
        </Setup>
        <PresetTable>
          <Preset Name="Preset 1" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>540</val>
            </Action>
          </Preset>
          <Preset Name="Preset 2" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>770</val>
            </Action>
          </Preset>
          <Preset Name="Preset 3" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>1000</val>
            </Action>
          </Preset>
          <Preset Name="Preset 4" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>1230</val>
            </Action>
          </Preset>
          <Preset Name="Preset 5" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>1460</val>
            </Action>
          </Preset>
          <Preset Name="Preset 6" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>1690</val>
            </Action>
          </Preset>
        </PresetTable>
        <DeviceTable />
        <ObjectType>Preset</ObjectType>
      </Preset>
    </Object>
    <Object>
      <Preset VID="9782" Master="9722" MTime="2016-09-28T13:44:13.892" Preset="FM">
        <Name>FMBand 1</Name>
        <Model>FM</Model>
        <Note />
        <DName />
        <Category>9740</Category>
        <Setup>
          <Action Function="" />
        </Setup>
        <PresetTable>
          <Preset Name="Preset 1" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>87.5</val>
            </Action>
          </Preset>
          <Preset Name="Preset 2" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>91.5</val>
            </Action>
          </Preset>
          <Preset Name="Preset 3" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>95.5</val>
            </Action>
          </Preset>
          <Preset Name="Preset 4" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>99.5</val>
            </Action>
          </Preset>
          <Preset Name="Preset 5" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>103.5</val>
            </Action>
          </Preset>
          <Preset Name="Preset 6" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>107.5</val>
            </Action>
          </Preset>
        </PresetTable>
        <DeviceTable />
        <ObjectType>Preset</ObjectType>
      </Preset>
    </Object>
    <Object>
      <Preset VID="9783" Master="9722" MTime="2016-09-28T13:44:13.893" Preset="XM">
        <Name>XMBand 1</Name>
        <Model>XM</Model>
        <Note />
        <DName />
        <Category>9740</Category>
        <Setup>
          <Action Function="" />
        </Setup>
        <PresetTable>
          <Preset Name="Preset 1" GenericIcon="true">
            <Action Function="Channel.Set">
              <val>1</val>
            </Action>
          </Preset>
          <Preset Name="Preset 2" GenericIcon="true">
            <Action Function="Channel.Set">
              <val>1</val>
            </Action>
          </Preset>
          <Preset Name="Preset 3" GenericIcon="true">
            <Action Function="Channel.Set">
              <val>1</val>
            </Action>
          </Preset>
          <Preset Name="Preset 4" GenericIcon="true">
            <Action Function="Channel.Set">
              <val>1</val>
            </Action>
          </Preset>
          <Preset Name="Preset 5" GenericIcon="true">
            <Action Function="Channel.Set">
              <val>1</val>
            </Action>
          </Preset>
          <Preset Name="Preset 6" GenericIcon="true">
            <Action Function="Channel.Set">
              <val>1</val>
            </Action>
          </Preset>
        </PresetTable>
        <DeviceTable />
        <ObjectType>Preset</ObjectType>
      </Preset>
    </Object>
    <Object>
      <EqCtrl VID="9784" Master="9722" MTime="" Type="Thermostat">
        <Name>bed 1 </Name>
        <Model>Black</Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>EqCtrl</ObjectType>
        <Area>22</Area>
        <Location>
        </Location>
        <Pages>3</Pages>
        <Activate>0</Activate>
        <Header Type="Thermostat">7000</Header>
        <Zone>10264</Zone>
        <SerialNumber>2384062</SerialNumber>
        <Bus>3</Bus>
        <Style>117</Style>
        <PresetTable>
          <Preset>9801</Preset>
          <Preset>9802</Preset>
          <Preset>9803</Preset>
        </PresetTable>
      </EqCtrl>
    </Object>
    <Object>
      <Button VID="9785" Master="9722" MTime="" Position="" Adjust="Full" MaxLevel="100">
        <Name>Scene 3</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Button</ObjectType>
        <Parent Position="7">9784</Parent>
        <Down>10050</Down>
        <Up>0</Up>
        <Hold>0</Hold>
        <Text1>scene 3</Text1>
        <Text2>
        </Text2>
        <PlacementTable>
        </PlacementTable>
        <ButtonStyle>119</ButtonStyle>
        <LEDStyle>120</LEDStyle>
      </Button>
    </Object>
    <Object>
      <Button VID="9786" Master="9722" MTime="" Position="" Adjust="Full" MaxLevel="100">
        <Name>LED</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Button</ObjectType>
        <Parent Position="5">9784</Parent>
        <Down>9986</Down>
        <Up>9986</Up>
        <Hold>9986</Hold>
        <Text1>led</Text1>
        <Text2>
        </Text2>
        <PlacementTable>
        </PlacementTable>
        <ButtonStyle>119</ButtonStyle>
        <LEDStyle>120</LEDStyle>
      </Button>
    </Object>
    <Object>
      <Button VID="9787" Master="9722" MTime="" Position="" Adjust="None">
        <Name>Blinds Up</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Button</ObjectType>
        <Parent Position="3">9784</Parent>
        <Down>9896</Down>
        <Up>0</Up>
        <Hold>0</Hold>
        <Text1>Blinds up</Text1>
        <Text2>
        </Text2>
        <PlacementTable>
        </PlacementTable>
        <ButtonStyle>119</ButtonStyle>
        <LEDStyle>120</LEDStyle>
      </Button>
    </Object>
    <Object>
      <Button VID="9788" Master="9722" MTime="" Position="" Adjust="Full" MaxLevel="100">
        <Name>Scene 1</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Button</ObjectType>
        <Parent Position="1">9784</Parent>
        <Down>9888</Down>
        <Up>0</Up>
        <Hold>0</Hold>
        <Text1>scene 1</Text1>
        <Text2>
        </Text2>
        <PlacementTable>
        </PlacementTable>
        <ButtonStyle>119</ButtonStyle>
        <LEDStyle>120</LEDStyle>
      </Button>
    </Object>
    <Object>
      <Button VID="9789" Master="9722" MTime="" Position="" Adjust="Full" MaxLevel="100">
        <Name>
        </Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Button</ObjectType>
        <Parent Position="8">9784</Parent>
        <Down>9986</Down>
        <Up>9986</Up>
        <Hold>9986</Hold>
        <Text1>
        </Text1>
        <Text2>
        </Text2>
        <PlacementTable>
        </PlacementTable>
        <ButtonStyle>119</ButtonStyle>
        <LEDStyle>120</LEDStyle>
      </Button>
    </Object>
    <Object>
      <Button VID="9790" Master="9722" MTime="" Position="" Adjust="None">
        <Name>Blinds Stop</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Button</ObjectType>
        <Parent Position="6">9784</Parent>
        <Down>9897</Down>
        <Up>0</Up>
        <Hold>0</Hold>
        <Text1>Blinds stop</Text1>
        <Text2>
        </Text2>
        <PlacementTable>
        </PlacementTable>
        <ButtonStyle>119</ButtonStyle>
        <LEDStyle>120</LEDStyle>
      </Button>
    </Object>
    <Object>
      <Button VID="9791" Master="9722" MTime="" Position="" Adjust="Full" MaxLevel="100">
        <Name>Scene 2</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Button</ObjectType>
        <Parent Position="4">9784</Parent>
        <Down>10028</Down>
        <Up>0</Up>
        <Hold>0</Hold>
        <Text1>scene 2</Text1>
        <Text2>
        </Text2>
        <PlacementTable>
        </PlacementTable>
        <ButtonStyle>119</ButtonStyle>
        <LEDStyle>120</LEDStyle>
      </Button>
    </Object>
    <Object>
      <Button VID="9792" Master="9722" MTime="" Position="" Adjust="Full" MaxLevel="100">
        <Name>Spots</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Button</ObjectType>
        <Parent Position="2">9784</Parent>
        <Down>9987</Down>
        <Up>9987</Up>
        <Hold>9987</Hold>
        <Text1>spots</Text1>
        <Text2>
        </Text2>
        <PlacementTable>
        </PlacementTable>
        <ButtonStyle>119</ButtonStyle>
        <LEDStyle>120</LEDStyle>
      </Button>
    </Object>
    <Object>
      <Button VID="9793" Master="9722" MTime="" Position="" Adjust="None">
        <Name>Blinds Down</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Button</ObjectType>
        <Parent Position="9">9784</Parent>
        <Down>9898</Down>
        <Up>0</Up>
        <Hold>0</Hold>
        <Text1>Blinds down</Text1>
        <Text2>
        </Text2>
        <PlacementTable>
        </PlacementTable>
        <ButtonStyle>119</ButtonStyle>
        <LEDStyle>120</LEDStyle>
      </Button>
    </Object>
    <Object>
      <Button VID="9800" Master="9722" MTime="" Position="" Adjust="None">
        <Name>Hard Right Button</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Button</ObjectType>
        <Parent Position="254">9784</Parent>
        <Down>10008</Down>
        <Up>10008</Up>
        <Hold>10008</Hold>
        <Text1>
        </Text1>
        <Text2>
        </Text2>
        <PlacementTable>
        </PlacementTable>
        <ButtonStyle>119</ButtonStyle>
        <LEDStyle>120</LEDStyle>
      </Button>
    </Object>
    <Object>
      <Preset VID="9801" Master="9722" MTime="2016-09-28T13:44:13.898" Preset="AM">
        <Name>AMBand 1</Name>
        <Model>AM</Model>
        <Note />
        <DName />
        <Category>9740</Category>
        <Setup>
          <Action Function="" />
        </Setup>
        <PresetTable>
          <Preset Name="Preset 1" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>540</val>
            </Action>
          </Preset>
          <Preset Name="Preset 2" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>770</val>
            </Action>
          </Preset>
          <Preset Name="Preset 3" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>1000</val>
            </Action>
          </Preset>
          <Preset Name="Preset 4" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>1230</val>
            </Action>
          </Preset>
          <Preset Name="Preset 5" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>1460</val>
            </Action>
          </Preset>
          <Preset Name="Preset 6" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>1690</val>
            </Action>
          </Preset>
        </PresetTable>
        <DeviceTable />
        <ObjectType>Preset</ObjectType>
      </Preset>
    </Object>
    <Object>
      <Preset VID="9802" Master="9722" MTime="2016-09-28T13:44:13.898" Preset="FM">
        <Name>FMBand 1</Name>
        <Model>FM</Model>
        <Note />
        <DName />
        <Category>9740</Category>
        <Setup>
          <Action Function="" />
        </Setup>
        <PresetTable>
          <Preset Name="Preset 1" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>87.5</val>
            </Action>
          </Preset>
          <Preset Name="Preset 2" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>91.5</val>
            </Action>
          </Preset>
          <Preset Name="Preset 3" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>95.5</val>
            </Action>
          </Preset>
          <Preset Name="Preset 4" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>99.5</val>
            </Action>
          </Preset>
          <Preset Name="Preset 5" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>103.5</val>
            </Action>
          </Preset>
          <Preset Name="Preset 6" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>107.5</val>
            </Action>
          </Preset>
        </PresetTable>
        <DeviceTable />
        <ObjectType>Preset</ObjectType>
      </Preset>
    </Object>
    <Object>
      <Preset VID="9803" Master="9722" MTime="2016-09-28T13:44:13.900" Preset="XM">
        <Name>XMBand 1</Name>
        <Model>XM</Model>
        <Note />
        <DName />
        <Category>9740</Category>
        <Setup>
          <Action Function="" />
        </Setup>
        <PresetTable>
          <Preset Name="Preset 1" GenericIcon="true">
            <Action Function="Channel.Set">
              <val>1</val>
            </Action>
          </Preset>
          <Preset Name="Preset 2" GenericIcon="true">
            <Action Function="Channel.Set">
              <val>1</val>
            </Action>
          </Preset>
          <Preset Name="Preset 3" GenericIcon="true">
            <Action Function="Channel.Set">
              <val>1</val>
            </Action>
          </Preset>
          <Preset Name="Preset 4" GenericIcon="true">
            <Action Function="Channel.Set">
              <val>1</val>
            </Action>
          </Preset>
          <Preset Name="Preset 5" GenericIcon="true">
            <Action Function="Channel.Set">
              <val>1</val>
            </Action>
          </Preset>
          <Preset Name="Preset 6" GenericIcon="true">
            <Action Function="Channel.Set">
              <val>1</val>
            </Action>
          </Preset>
        </PresetTable>
        <DeviceTable />
        <ObjectType>Preset</ObjectType>
      </Preset>
    </Object>
    <Object>
      <EqCtrl VID="9804" Master="9722" MTime="" Type="Thermostat">
        <Name>Master En-Suite</Name>
        <Model>Black</Model>
        <Note>
        </Note>
        <DName>Master En-Suite</DName>
        <ObjectType>EqCtrl</ObjectType>
        <Area>23</Area>
        <Location>
        </Location>
        <Pages>2</Pages>
        <Activate>0</Activate>
        <Header Type="Thermostat">7005</Header>
        <Zone>10265</Zone>
        <SerialNumber>5019532</SerialNumber>
        <Bus>3</Bus>
        <Style>117</Style>
        <PresetTable>
          <Preset>9821</Preset>
          <Preset>9822</Preset>
          <Preset>9823</Preset>
        </PresetTable>
      </EqCtrl>
    </Object>
    <Object>
      <Button VID="9805" Master="9722" MTime="" Position="" Adjust="Full" MaxLevel="100">
        <Name>Scene 3</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Button</ObjectType>
        <Parent Position="7">9804</Parent>
        <Down>10051</Down>
        <Up>0</Up>
        <Hold>0</Hold>
        <Text1>scene 3</Text1>
        <Text2>
        </Text2>
        <PlacementTable>
        </PlacementTable>
        <ButtonStyle>119</ButtonStyle>
        <LEDStyle>120</LEDStyle>
      </Button>
    </Object>
    <Object>
      <Button VID="9808" Master="9722" MTime="" Position="" Adjust="Full" MaxLevel="100">
        <Name>Scene 1</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Button</ObjectType>
        <Parent Position="1">9804</Parent>
        <Down>9868</Down>
        <Up>0</Up>
        <Hold>0</Hold>
        <Text1>scene 1 </Text1>
        <Text2>
        </Text2>
        <PlacementTable>
        </PlacementTable>
        <ButtonStyle>119</ButtonStyle>
        <LEDStyle>120</LEDStyle>
      </Button>
    </Object>
    <Object>
      <Button VID="9811" Master="9722" MTime="" Position="" Adjust="Full" MaxLevel="100">
        <Name>Scene 2</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Button</ObjectType>
        <Parent Position="4">9804</Parent>
        <Down>10029</Down>
        <Up>0</Up>
        <Hold>0</Hold>
        <Text1>scene 2</Text1>
        <Text2>
        </Text2>
        <PlacementTable>
        </PlacementTable>
        <ButtonStyle>119</ButtonStyle>
        <LEDStyle>120</LEDStyle>
      </Button>
    </Object>
    <Object>
      <Button VID="9820" Master="9722" MTime="" Position="" Adjust="None" MaxLevel="100">
        <Name>Hard Right Button</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Button</ObjectType>
        <Parent Position="254">9804</Parent>
        <Down>10009</Down>
        <Up>10009</Up>
        <Hold>10009</Hold>
        <Text1>
        </Text1>
        <Text2>
        </Text2>
        <PlacementTable>
        </PlacementTable>
        <ButtonStyle>119</ButtonStyle>
        <LEDStyle>120</LEDStyle>
      </Button>
    </Object>
    <Object>
      <Preset VID="9821" Master="9722" MTime="2016-09-28T13:44:13.902" Preset="AM">
        <Name>AMBand 1</Name>
        <Model>AM</Model>
        <Note />
        <DName />
        <Category>9740</Category>
        <Setup>
          <Action Function="" />
        </Setup>
        <PresetTable>
          <Preset Name="Preset 1" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>540</val>
            </Action>
          </Preset>
          <Preset Name="Preset 2" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>770</val>
            </Action>
          </Preset>
          <Preset Name="Preset 3" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>1000</val>
            </Action>
          </Preset>
          <Preset Name="Preset 4">
            <Action Function="Tuner.SelectFrequency">
              <val>1230</val>
            </Action>
          </Preset>
          <Preset Name="Preset 5" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>1460</val>
            </Action>
          </Preset>
          <Preset Name="Preset 6" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>1690</val>
            </Action>
          </Preset>
        </PresetTable>
        <DeviceTable />
        <ObjectType>Preset</ObjectType>
      </Preset>
    </Object>
    <Object>
      <Preset VID="9822" Master="9722" MTime="2016-09-28T13:44:13.903" Preset="FM">
        <Name>FMBand 1</Name>
        <Model>FM</Model>
        <Note />
        <DName />
        <Category>9740</Category>
        <Setup>
          <Action Function="" />
        </Setup>
        <PresetTable>
          <Preset Name="Preset 1" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>87.5</val>
            </Action>
          </Preset>
          <Preset Name="Preset 2" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>91.5</val>
            </Action>
          </Preset>
          <Preset Name="Preset 3" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>95.5</val>
            </Action>
          </Preset>
          <Preset Name="Preset 4" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>99.5</val>
            </Action>
          </Preset>
          <Preset Name="Preset 5" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>103.5</val>
            </Action>
          </Preset>
          <Preset Name="Preset 6" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>107.5</val>
            </Action>
          </Preset>
        </PresetTable>
        <DeviceTable />
        <ObjectType>Preset</ObjectType>
      </Preset>
    </Object>
    <Object>
      <Preset VID="9823" Master="9722" MTime="2016-09-28T13:44:13.904" Preset="XM">
        <Name>XMBand 1</Name>
        <Model>XM</Model>
        <Note />
        <DName />
        <Category>9740</Category>
        <Setup>
          <Action Function="" />
        </Setup>
        <PresetTable>
          <Preset Name="Preset 1" GenericIcon="true">
            <Action Function="Channel.Set">
              <val>1</val>
            </Action>
          </Preset>
          <Preset Name="Preset 2" GenericIcon="true">
            <Action Function="Channel.Set">
              <val>1</val>
            </Action>
          </Preset>
          <Preset Name="Preset 3" GenericIcon="true">
            <Action Function="Channel.Set">
              <val>1</val>
            </Action>
          </Preset>
          <Preset Name="Preset 4" GenericIcon="true">
            <Action Function="Channel.Set">
              <val>1</val>
            </Action>
          </Preset>
          <Preset Name="Preset 5" GenericIcon="true">
            <Action Function="Channel.Set">
              <val>1</val>
            </Action>
          </Preset>
          <Preset Name="Preset 6" GenericIcon="true">
            <Action Function="Channel.Set">
              <val>1</val>
            </Action>
          </Preset>
        </PresetTable>
        <DeviceTable />
        <ObjectType>Preset</ObjectType>
      </Preset>
    </Object>
    <Object>
      <EqCtrl VID="9824" Master="9722" MTime="" Type="Thermostat">
        <Name>Bedroom 2</Name>
        <Model>Black</Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>EqCtrl</ObjectType>
        <Area>24</Area>
        <Location>
        </Location>
        <Pages>3</Pages>
        <Activate>0</Activate>
        <Header Type="Thermostat">7534</Header>
        <Zone>10266</Zone>
        <SerialNumber>2384065</SerialNumber>
        <Bus>3</Bus>
        <Style>117</Style>
        <PresetTable>
          <Preset>9841</Preset>
          <Preset>9842</Preset>
          <Preset>9843</Preset>
        </PresetTable>
      </EqCtrl>
    </Object>
    <Object>
      <Button VID="9825" Master="9722" MTime="" Position="" Adjust="Full" MaxLevel="100">
        <Name>Scene 3</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Button</ObjectType>
        <Parent Position="7">9824</Parent>
        <Down>10052</Down>
        <Up>0</Up>
        <Hold>0</Hold>
        <Text1>scene 3</Text1>
        <Text2>
        </Text2>
        <PlacementTable>
        </PlacementTable>
        <ButtonStyle>119</ButtonStyle>
        <LEDStyle>120</LEDStyle>
      </Button>
    </Object>
    <Object>
      <Button VID="9826" Master="9722" MTime="" Position="" Adjust="Full" MaxLevel="100">
        <Name>Spots</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Button</ObjectType>
        <Parent Position="2">9824</Parent>
        <Down>9995</Down>
        <Up>9995</Up>
        <Hold>9995</Hold>
        <Text1>spots</Text1>
        <Text2>
        </Text2>
        <PlacementTable>
        </PlacementTable>
        <ButtonStyle>119</ButtonStyle>
        <LEDStyle>120</LEDStyle>
      </Button>
    </Object>
    <Object>
      <Button VID="9827" Master="9722" MTime="" Position="" Adjust="None">
        <Name>Blinds Up</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Button</ObjectType>
        <Parent Position="3">9824</Parent>
        <Down>9909</Down>
        <Up>0</Up>
        <Hold>0</Hold>
        <Text1>Blinds up</Text1>
        <Text2>
        </Text2>
        <PlacementTable>
        </PlacementTable>
        <ButtonStyle>119</ButtonStyle>
        <LEDStyle>120</LEDStyle>
      </Button>
    </Object>
    <Object>
      <Button VID="9828" Master="9722" MTime="" Position="" Adjust="Full" MaxLevel="100">
        <Name>Scene 1</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Button</ObjectType>
        <Parent Position="1">9824</Parent>
        <Down>9922</Down>
        <Up>0</Up>
        <Hold>0</Hold>
        <Text1>scene 1</Text1>
        <Text2>
        </Text2>
        <PlacementTable>
        </PlacementTable>
        <ButtonStyle>119</ButtonStyle>
        <LEDStyle>120</LEDStyle>
      </Button>
    </Object>
    <Object>
      <Button VID="9829" Master="9722" MTime="" Position="" Adjust="Full" MaxLevel="100">
        <Name>LED</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Button</ObjectType>
        <Parent Position="5">9824</Parent>
        <Down>9994</Down>
        <Up>9994</Up>
        <Hold>9994</Hold>
        <Text1>led</Text1>
        <Text2>
        </Text2>
        <PlacementTable>
        </PlacementTable>
        <ButtonStyle>119</ButtonStyle>
        <LEDStyle>120</LEDStyle>
      </Button>
    </Object>
    <Object>
      <Button VID="9830" Master="9722" MTime="" Position="" Adjust="None">
        <Name>Blinds Stop</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Button</ObjectType>
        <Parent Position="6">9824</Parent>
        <Down>9908</Down>
        <Up>0</Up>
        <Hold>0</Hold>
        <Text1>Blinds stop</Text1>
        <Text2>
        </Text2>
        <PlacementTable>
        </PlacementTable>
        <ButtonStyle>119</ButtonStyle>
        <LEDStyle>120</LEDStyle>
      </Button>
    </Object>
    <Object>
      <Button VID="9831" Master="9722" MTime="" Position="" Adjust="Full" MaxLevel="100">
        <Name>Scene 2</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Button</ObjectType>
        <Parent Position="4">9824</Parent>
        <Down>10030</Down>
        <Up>0</Up>
        <Hold>0</Hold>
        <Text1>scene 2</Text1>
        <Text2>
        </Text2>
        <PlacementTable>
        </PlacementTable>
        <ButtonStyle>119</ButtonStyle>
        <LEDStyle>120</LEDStyle>
      </Button>
    </Object>
    <Object>
      <Button VID="9832" Master="9722" MTime="" Position="" Adjust="None" MaxLevel="100">
        <Name>
        </Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Button</ObjectType>
        <Parent Position="8">9824</Parent>
        <Down>0</Down>
        <Up>0</Up>
        <Hold>0</Hold>
        <Text1>
        </Text1>
        <Text2>
        </Text2>
        <PlacementTable>
        </PlacementTable>
        <ButtonStyle>119</ButtonStyle>
        <LEDStyle>120</LEDStyle>
      </Button>
    </Object>
    <Object>
      <Button VID="9833" Master="9722" MTime="" Position="" Adjust="None">
        <Name>Blinds Down</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Button</ObjectType>
        <Parent Position="9">9824</Parent>
        <Down>9906</Down>
        <Up>0</Up>
        <Hold>0</Hold>
        <Text1>Blinds down</Text1>
        <Text2>
        </Text2>
        <PlacementTable>
        </PlacementTable>
        <ButtonStyle>119</ButtonStyle>
        <LEDStyle>120</LEDStyle>
      </Button>
    </Object>
    <Object>
      <Button VID="9840" Master="9722" MTime="" Position="" Adjust="None">
        <Name>Hard Right Button</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Button</ObjectType>
        <Parent Position="254">9824</Parent>
        <Down>10010</Down>
        <Up>10010</Up>
        <Hold>10010</Hold>
        <Text1>
        </Text1>
        <Text2>
        </Text2>
        <PlacementTable>
        </PlacementTable>
        <ButtonStyle>119</ButtonStyle>
        <LEDStyle>120</LEDStyle>
      </Button>
    </Object>
    <Object>
      <Preset VID="9841" Master="9722" MTime="2016-09-28T13:44:13.909" Preset="AM">
        <Name>AMBand 1</Name>
        <Model>AM</Model>
        <Note />
        <DName />
        <Category>9740</Category>
        <Setup>
          <Action Function="" />
        </Setup>
        <PresetTable>
          <Preset Name="Preset 1" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>540</val>
            </Action>
          </Preset>
          <Preset Name="Preset 2" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>770</val>
            </Action>
          </Preset>
          <Preset Name="Preset 3" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>1000</val>
            </Action>
          </Preset>
          <Preset Name="Preset 4" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>1230</val>
            </Action>
          </Preset>
          <Preset Name="Preset 5" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>1460</val>
            </Action>
          </Preset>
          <Preset Name="Preset 6" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>1690</val>
            </Action>
          </Preset>
        </PresetTable>
        <DeviceTable />
        <ObjectType>Preset</ObjectType>
      </Preset>
    </Object>
    <Object>
      <Preset VID="9842" Master="9722" MTime="2016-09-28T13:44:13.910" Preset="FM">
        <Name>FMBand 1</Name>
        <Model>FM</Model>
        <Note />
        <DName />
        <Category>9740</Category>
        <Setup>
          <Action Function="" />
        </Setup>
        <PresetTable>
          <Preset Name="Preset 1" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>87.5</val>
            </Action>
          </Preset>
          <Preset Name="Preset 2" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>91.5</val>
            </Action>
          </Preset>
          <Preset Name="Preset 3" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>95.5</val>
            </Action>
          </Preset>
          <Preset Name="Preset 4" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>99.5</val>
            </Action>
          </Preset>
          <Preset Name="Preset 5" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>103.5</val>
            </Action>
          </Preset>
          <Preset Name="Preset 6" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>107.5</val>
            </Action>
          </Preset>
        </PresetTable>
        <DeviceTable />
        <ObjectType>Preset</ObjectType>
      </Preset>
    </Object>
    <Object>
      <Preset VID="9843" Master="9722" MTime="2016-09-28T13:44:13.911" Preset="XM">
        <Name>XMBand 1</Name>
        <Model>XM</Model>
        <Note />
        <DName />
        <Category>9740</Category>
        <Setup>
          <Action Function="" />
        </Setup>
        <PresetTable>
          <Preset Name="Preset 1" GenericIcon="true">
            <Action Function="Channel.Set">
              <val>1</val>
            </Action>
          </Preset>
          <Preset Name="Preset 2" GenericIcon="true">
            <Action Function="Channel.Set">
              <val>1</val>
            </Action>
          </Preset>
          <Preset Name="Preset 3" GenericIcon="true">
            <Action Function="Channel.Set">
              <val>1</val>
            </Action>
          </Preset>
          <Preset Name="Preset 4" GenericIcon="true">
            <Action Function="Channel.Set">
              <val>1</val>
            </Action>
          </Preset>
          <Preset Name="Preset 5" GenericIcon="true">
            <Action Function="Channel.Set">
              <val>1</val>
            </Action>
          </Preset>
          <Preset Name="Preset 6" GenericIcon="true">
            <Action Function="Channel.Set">
              <val>1</val>
            </Action>
          </Preset>
        </PresetTable>
        <DeviceTable />
        <ObjectType>Preset</ObjectType>
      </Preset>
    </Object>
    <Object>
      <Preset VID="9861" Master="9722" MTime="2016-09-28T13:44:13.911" Preset="AM">
        <Name>AMBand 1</Name>
        <Model>AM</Model>
        <Note />
        <DName />
        <Category>9740</Category>
        <Setup>
          <Action Function="" />
        </Setup>
        <PresetTable>
          <Preset Name="Preset 1" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>540</val>
            </Action>
          </Preset>
          <Preset Name="Preset 2" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>770</val>
            </Action>
          </Preset>
          <Preset Name="Preset 3" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>1000</val>
            </Action>
          </Preset>
          <Preset Name="Preset 4" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>1230</val>
            </Action>
          </Preset>
          <Preset Name="Preset 5" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>1460</val>
            </Action>
          </Preset>
          <Preset Name="Preset 6" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>1690</val>
            </Action>
          </Preset>
        </PresetTable>
        <DeviceTable />
        <ObjectType>Preset</ObjectType>
      </Preset>
    </Object>
    <Object>
      <Preset VID="9862" Master="9722" MTime="2016-09-28T13:44:13.913" Preset="FM">
        <Name>FMBand 1</Name>
        <Model>FM</Model>
        <Note />
        <DName />
        <Category>9740</Category>
        <Setup>
          <Action Function="" />
        </Setup>
        <PresetTable>
          <Preset Name="Preset 1" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>87.5</val>
            </Action>
          </Preset>
          <Preset Name="Preset 2" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>91.5</val>
            </Action>
          </Preset>
          <Preset Name="Preset 3" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>95.5</val>
            </Action>
          </Preset>
          <Preset Name="Preset 4" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>99.5</val>
            </Action>
          </Preset>
          <Preset Name="Preset 5" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>103.5</val>
            </Action>
          </Preset>
          <Preset Name="Preset 6" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>107.5</val>
            </Action>
          </Preset>
        </PresetTable>
        <DeviceTable />
        <ObjectType>Preset</ObjectType>
      </Preset>
    </Object>
    <Object>
      <Preset VID="9863" Master="9722" MTime="2016-09-28T13:44:13.913" Preset="XM">
        <Name>XMBand 1</Name>
        <Model>XM</Model>
        <Note />
        <DName />
        <Category>9740</Category>
        <Setup>
          <Action Function="" />
        </Setup>
        <PresetTable>
          <Preset Name="Preset 1" GenericIcon="true">
            <Action Function="Channel.Set">
              <val>1</val>
            </Action>
          </Preset>
          <Preset Name="Preset 2" GenericIcon="true">
            <Action Function="Channel.Set">
              <val>1</val>
            </Action>
          </Preset>
          <Preset Name="Preset 3" GenericIcon="true">
            <Action Function="Channel.Set">
              <val>1</val>
            </Action>
          </Preset>
          <Preset Name="Preset 4" GenericIcon="true">
            <Action Function="Channel.Set">
              <val>1</val>
            </Action>
          </Preset>
          <Preset Name="Preset 5" GenericIcon="true">
            <Action Function="Channel.Set">
              <val>1</val>
            </Action>
          </Preset>
          <Preset Name="Preset 6" GenericIcon="true">
            <Action Function="Channel.Set">
              <val>1</val>
            </Action>
          </Preset>
        </PresetTable>
        <DeviceTable />
        <ObjectType>Preset</ObjectType>
      </Preset>
    </Object>
    <Object>
      <Category VID="9864" Master="9722" MTime="">
        <Name>Bed 1 En-Suite</Name>
        <Model />
        <Note />
        <DName />
        <ObjectType>Category</ObjectType>
        <Category>7</Category>
        <Location>8</Location>
      </Category>
    </Object>
    <Object>
      <Task VID="9866" Master="9722" MTime="">
        <Name>En-Suite Off</Name>
        <Model>En-Suite Off</Model>
        <Note />
        <DName />
        <ObjectType>Task</ObjectType>
        <Category>9864</Category>
        <Procedure>
          <Target>10165</Target>
          <Function>SceneProgram_9866</Function>
          <Parameters>
            <Param>0</Param>
            <Param>1</Param>
          </Parameters>
        </Procedure>
        <Query>
          <Target>10168</Target>
          <Function>LoadsOff</Function>
          <Parameters>
            <Param>2</Param>
          </Parameters>
        </Query>
        <Adjust>
          <Target>0</Target>
          <Function />
          <Parameters />
        </Adjust>
        <Level>
          <Target>0</Target>
          <Function />
          <Parameters />
        </Level>
        <ParamTable>
          <Param ID="0">
            <gmem Type="ref">9869</gmem>
          </Param>
          <Param ID="1">
            <gmem Type="ref">10016</gmem>
          </Param>
          <Param ID="2">
            <array>
              <val>10383</val>
              <val>86</val>
              <val>9306</val>
            </array>
          </Param>
        </ParamTable>
        <DependTable>
          <Param status="Load.GetLevel">2</Param>
        </DependTable>
      </Task>
      <Module>
        <Library Name="Programming\VantageTime" Local="true" />
        <Library Name="Lighting\Toggle" Local="true" />
        <Library Name="vantage" Local="false" />
        <Scene>
          <Name>SceneProgram_9866</Name>
          <Type>procedure</Type>
          <Parameters>
            <Param>
              <Reference>true</Reference>
              <Label>bool</Label>
              <Label>GMem</Label>
              <Name>param2</Name>
            </Param>
            <Param>
              <Reference>true</Reference>
              <Label>Number</Label>
              <Label>GMem</Label>
              <Name>param3</Name>
            </Param>
          </Parameters>
          <ParameterValues>
            <Param>
              <Label>GMem</Label>
              <Constant Type="int">9869</Constant>
              <ParamName>param2</ParamName>
            </Param>
            <Param>
              <Label>GMem</Label>
              <Constant Type="int">10016</Constant>
              <ParamName>param3</ParamName>
            </Param>
          </ParameterValues>
          <FunctionBody>
            <FunctionCall disable="false">
              <Name>Off</Name>
              <Parameters>
                <Param>
                  <Label>Load</Label>
                  <Initializer>
                    <Constant Type="int">10383</Constant>
                    <Constant Type="int">86</Constant>
                    <Constant Type="int">9306</Constant>
                  </Initializer>
                  <ParamName>loads</ParamName>
                </Param>
                <Param>
                  <Label>Seconds</Label>
                  <Constant Type="float">2.0</Constant>
                  <ParamName>rampTime</ParamName>
                </Param>
              </Parameters>
            </FunctionCall>
            <Assignment disable="false">
              <Operand>
                <Identifier>param2</Identifier>
              </Operand>
              <Assign>equals</Assign>
              <Operand>
                <Label>bool</Label>
                <Constant Type="bool">true</Constant>
              </Operand>
            </Assignment>
            <Assignment disable="false">
              <Operand>
                <Identifier>param3</Identifier>
              </Operand>
              <Assign>equals</Assign>
              <Operand>
                <Label>Number</Label>
                <Constant Type="int">1</Constant>
              </Operand>
            </Assignment>
            <FunctionCall disable="false">
              <Name>TheDelay</Name>
              <Parameters>
                <Param>
                  <Label>Delay</Label>
                  <Constant Type="float">5.0</Constant>
                  <ParamName>delayTime</ParamName>
                </Param>
              </Parameters>
            </FunctionCall>
            <Assignment disable="false">
              <Operand>
                <Identifier>param2</Identifier>
              </Operand>
              <Assign>equals</Assign>
              <Operand>
                <Label>bool</Label>
                <Constant Type="bool">false</Constant>
              </Operand>
            </Assignment>
            <QueryCall>
              <Name>LoadsOff</Name>
              <Parameters>
                <Param>
                  <Label>Load</Label>
                  <Initializer>
                    <Constant Type="int">10383</Constant>
                    <Constant Type="int">86</Constant>
                    <Constant Type="int">9306</Constant>
                  </Initializer>
                  <ParamName>loads</ParamName>
                </Param>
              </Parameters>
            </QueryCall>
          </FunctionBody>
        </Scene>
      </Module>
    </Object>
    <Object>
      <Task VID="9867" Master="9722" MTime="">
        <Name>En-Suite PIR Task</Name>
        <Model>En-Suite PIR Task</Model>
        <Note />
        <DName />
        <ObjectType>Task</ObjectType>
        <Category>9864</Category>
        <Procedure>
          <Target>10165</Target>
          <Function>SceneProgram_9867</Function>
          <Parameters>
            <Param>0</Param>
            <Param>1</Param>
            <Param>2</Param>
          </Parameters>
        </Procedure>
        <Query>
          <Target>0</Target>
          <Function />
          <Parameters />
        </Query>
        <Adjust>
          <Target>0</Target>
          <Function />
          <Parameters />
        </Adjust>
        <Level>
          <Target>0</Target>
          <Function />
          <Parameters />
        </Level>
        <ParamTable>
          <Param ID="0">
            <gmem Type="ref">10055</gmem>
          </Param>
          <Param ID="1">
            <gmem Type="ref">10105</gmem>
          </Param>
          <Param ID="2">
            <gmem Type="ref">9869</gmem>
          </Param>
        </ParamTable>
        <DependTable />
      </Task>
      <Module>
        <Library Name="Lighting\Toggle" Local="true" />
        <Library Name="Programming\LaunchTasks" Local="true" />
        <Library Name="Programming\VantageTime" Local="true" />
        <Library Name="Programming\MiscTasks" Local="true" />
        <Library Name="vantage" Local="false" />
        <Scene>
          <Name>SceneProgram_9867</Name>
          <Type>procedure</Type>
          <Parameters>
            <Param>
              <Reference>true</Reference>
              <Label>Number</Label>
              <Label>GMem</Label>
              <Name>param5</Name>
            </Param>
            <Param>
              <Reference>true</Reference>
              <Label>Delay</Label>
              <Label>GMem</Label>
              <Name>param6</Name>
            </Param>
            <Param>
              <Reference>true</Reference>
              <Label>bool</Label>
              <Label>GMem</Label>
              <Name>param3</Name>
            </Param>
          </Parameters>
          <ParameterValues>
            <Param>
              <Label>GMem</Label>
              <Constant Type="int">10055</Constant>
              <ParamName>param5</ParamName>
            </Param>
            <Param>
              <Label>GMem</Label>
              <Constant Type="int">10105</Constant>
              <ParamName>param6</ParamName>
            </Param>
            <Param>
              <Label>GMem</Label>
              <Constant Type="int">9869</Constant>
              <ParamName>param3</ParamName>
            </Param>
          </ParameterValues>
          <FunctionBody>
            <If disable="false">
              <LogicalExpression>
                <GivePrecedence>false</GivePrecedence>
                <Expanded>true</Expanded>
                <LogicalExpression>
                  <GivePrecedence>false</GivePrecedence>
                  <Expanded>true</Expanded>
                  <RelationalExpression>
                    <Operand>
                      <Label>bool</Label>
                      <Identifier>param3</Identifier>
                    </Operand>
                    <Operator>eq</Operator>
                    <Operand>
                      <Label>bool</Label>
                      <Constant Type="bool">false</Constant>
                    </Operand>
                  </RelationalExpression>
                </LogicalExpression>
                <Operator>and</Operator>
                <LogicalExpression>
                  <GivePrecedence>false</GivePrecedence>
                  <Expanded>true</Expanded>
                  <RelationalExpression>
                    <Operand>
                      <Label>Number</Label>
                      <Identifier>param5</Identifier>
                    </Operand>
                    <Operator>eq</Operator>
                    <Operand>
                      <Label>Number</Label>
                      <Constant Type="int">0</Constant>
                    </Operand>
                  </RelationalExpression>
                </LogicalExpression>
              </LogicalExpression>
              <StatementList>
                <If disable="false">
                  <LogicalExpression>
                    <GivePrecedence>false</GivePrecedence>
                    <Expanded>true</Expanded>
                    <RelationalExpression>
                      <Operand>
                        <Label>TriggerType</Label>
                        <FunctionCall>
                          <Name>GetEventType</Name>
                          <Parameters />
                        </FunctionCall>
                      </Operand>
                      <Operator>eq</Operator>
                      <Operand>
                        <Label>TriggerType</Label>
                        <Identifier>ButtonPress</Identifier>
                      </Operand>
                    </RelationalExpression>
                  </LogicalExpression>
                  <StatementList>
                    <If disable="false">
                      <LogicalExpression>
                        <GivePrecedence>false</GivePrecedence>
                        <Expanded>true</Expanded>
                        <RelationalExpression>
                          <Operand>
                            <Label>bool</Label>
                            <FunctionCall>
                              <Name>DayTime</Name>
                              <Parameters />
                            </FunctionCall>
                          </Operand>
                          <Operator>eq</Operator>
                          <Operand>
                            <Label>bool</Label>
                            <Constant Type="bool">true</Constant>
                          </Operand>
                        </RelationalExpression>
                      </LogicalExpression>
                      <StatementList>
                        <FunctionCall disable="false">
                          <Name>LaunchTaskWithCurrentEvent</Name>
                          <Parameters>
                            <Param>
                              <Label>Task</Label>
                              <Initializer>
                                <Constant Type="int">10142</Constant>
                              </Initializer>
                              <ParamName>tasks</ParamName>
                            </Param>
                          </Parameters>
                        </FunctionCall>
                      </StatementList>
                      <Expanded>True</Expanded>
                    </If>
                    <Else disable="false">
                      <StatementList>
                        <FunctionCall disable="false">
                          <Name>LaunchTaskWithCurrentEvent</Name>
                          <Parameters>
                            <Param>
                              <Label>Task</Label>
                              <Initializer>
                                <Constant Type="int">10143</Constant>
                              </Initializer>
                              <ParamName>tasks</ParamName>
                            </Param>
                          </Parameters>
                        </FunctionCall>
                      </StatementList>
                      <Expanded>True</Expanded>
                    </Else>
                  </StatementList>
                  <Expanded>True</Expanded>
                </If>
                <ElseIf disable="false">
                  <LogicalExpression>
                    <GivePrecedence>false</GivePrecedence>
                    <Expanded>true</Expanded>
                    <RelationalExpression>
                      <Operand>
                        <Label>TriggerType</Label>
                        <FunctionCall>
                          <Name>GetEventType</Name>
                          <Parameters />
                        </FunctionCall>
                      </Operand>
                      <Operator>eq</Operator>
                      <Operand>
                        <Label>TriggerType</Label>
                        <Identifier>ButtonRelease</Identifier>
                      </Operand>
                    </RelationalExpression>
                  </LogicalExpression>
                  <StatementList>
                    <FunctionCall disable="false">
                      <Name>TheDelay</Name>
                      <Parameters>
                        <Param>
                          <Label>Delay</Label>
                          <Identifier>param6</Identifier>
                          <ParamName>delayTime</ParamName>
                        </Param>
                      </Parameters>
                    </FunctionCall>
                    <FunctionCall disable="false">
                      <Name>Off</Name>
                      <Parameters>
                        <Param>
                          <Label>Load</Label>
                          <Initializer>
                            <Constant Type="int">10383</Constant>
                            <Constant Type="int">86</Constant>
                            <Constant Type="int">9306</Constant>
                          </Initializer>
                          <ParamName>loads</ParamName>
                        </Param>
                        <Param>
                          <Label>Seconds</Label>
                          <Constant Type="float">2.0</Constant>
                          <ParamName>rampTime</ParamName>
                        </Param>
                      </Parameters>
                    </FunctionCall>
                  </StatementList>
                  <Expanded>True</Expanded>
                </ElseIf>
              </StatementList>
              <Expanded>True</Expanded>
            </If>
          </FunctionBody>
        </Scene>
      </Module>
    </Object>
    <Object>
      <Task VID="9868" Master="9722" MTime="">
        <Name>En-Suite Scene 1</Name>
        <Model>En-Suite Scene 1</Model>
        <Note />
        <DName />
        <ObjectType>Task</ObjectType>
        <Category>9864</Category>
        <Procedure>
          <Target>10165</Target>
          <Function>SceneProgram_9868</Function>
          <Parameters>
            <Param>0</Param>
            <Param>1</Param>
          </Parameters>
        </Procedure>
        <Query>
          <Target>10172</Target>
          <Function>VariableAtSpecifiedValue</Function>
          <Parameters>
            <Param>2</Param>
            <Param>3</Param>
          </Parameters>
        </Query>
        <Adjust>
          <Target>10173</Target>
          <Function>AdjustLoads</Function>
          <Parameters>
            <Param>4</Param>
            <Param>5</Param>
            <Param>6</Param>
          </Parameters>
        </Adjust>
        <Level Max="100">
          <Target>10173</Target>
          <Function>AverageLoadLevel</Function>
          <Parameters>
            <Param>4</Param>
          </Parameters>
        </Level>
        <ParamTable>
          <Param ID="0">
            <gmem Type="ref">9869</gmem>
          </Param>
          <Param ID="1">
            <gmem Type="ref">10016</gmem>
          </Param>
          <Param ID="2">
            <gmem>10016</gmem>
          </Param>
          <Param ID="3">
            <val>2</val>
          </Param>
          <Param ID="4">
            <array>
              <val>10383</val>
              <val>86</val>
              <val>9306</val>
            </array>
          </Param>
          <Param ID="5" Fixed="true">
            <val>5</val>
          </Param>
          <Param ID="6" Fixed="true">
            <val>10</val>
          </Param>
        </ParamTable>
        <DependTable>
          <Param>2</Param>
        </DependTable>
      </Task>
      <Module>
        <Library Name="Lighting\Toggle" Local="true" />
        <Library Name="vantage" Local="false" />
        <Scene>
          <Name>SceneProgram_9868</Name>
          <Type>procedure</Type>
          <Parameters>
            <Param>
              <Reference>true</Reference>
              <Label>bool</Label>
              <Label>GMem</Label>
              <Name>param1</Name>
            </Param>
            <Param>
              <Reference>true</Reference>
              <Label>Number</Label>
              <Label>GMem</Label>
              <Name>param3</Name>
            </Param>
          </Parameters>
          <ParameterValues>
            <Param>
              <Label>GMem</Label>
              <Constant Type="int">9869</Constant>
              <ParamName>param1</ParamName>
            </Param>
            <Param>
              <Label>GMem</Label>
              <Constant Type="int">10016</Constant>
              <ParamName>param3</ParamName>
            </Param>
          </ParameterValues>
          <FunctionBody>
            <FunctionCall disable="false">
              <Name>On</Name>
              <Parameters>
                <Param>
                  <Label>Load</Label>
                  <Initializer>
                    <Constant Type="int">10383</Constant>
                    <Constant Type="int">86</Constant>
                    <Constant Type="int">9306</Constant>
                  </Initializer>
                  <ParamName>loads</ParamName>
                </Param>
                <Param>
                  <Label>Level</Label>
                  <Initializer>
                    <Constant Type="float">100.0</Constant>
                    <Constant Type="float">100.0</Constant>
                    <Constant Type="float">100.0</Constant>
                  </Initializer>
                  <ParamName>levels</ParamName>
                </Param>
                <Param>
                  <Label>Seconds</Label>
                  <Constant Type="float">2.0</Constant>
                  <ParamName>rampTime</ParamName>
                </Param>
                <Param>
                  <Label>bool</Label>
                  <Constant Type="bool">true</Constant>
                  <ParamName>learnable</ParamName>
                </Param>
                <Param>
                  <Label>MemID</Label>
                  <Constant Type="int">0</Constant>
                  <ParamName>bufferid</ParamName>
                </Param>
              </Parameters>
            </FunctionCall>
            <Assignment disable="false">
              <Operand>
                <Identifier>param1</Identifier>
              </Operand>
              <Assign>equals</Assign>
              <Operand>
                <Label>bool</Label>
                <Constant Type="bool">true</Constant>
              </Operand>
            </Assignment>
            <Assignment disable="false">
              <Operand>
                <Identifier>param3</Identifier>
              </Operand>
              <Assign>equals</Assign>
              <Operand>
                <Label>Number</Label>
                <Constant Type="int">2</Constant>
              </Operand>
            </Assignment>
            <QueryCall>
              <Name>VariableAtSpecifiedValue</Name>
              <Parameters>
                <Param>
                  <Label>GMem</Label>
                  <Constant Type="int">10016</Constant>
                  <ParamName>variable</ParamName>
                </Param>
                <Param>
                  <Label>Number</Label>
                  <Constant Type="int">2</Constant>
                  <ParamName>value</ParamName>
                </Param>
              </Parameters>
            </QueryCall>
          </FunctionBody>
        </Scene>
      </Module>
    </Object>
    <Object>
      <GMem VID="9869" Master="9722" MTime="">
        <Name>Motion sensor En-Suite overide </Name>
        <Model />
        <Note />
        <DName />
        <ObjectType>GMem</ObjectType>
        <Category>9864</Category>
        <data Fixed="false">
          <val>0</val>
        </data>
        <Persistent>true</Persistent>
        <Tag object="false">bool</Tag>
      </GMem>
    </Object>
    <Object>
      <Category VID="9876" Master="9722" MTime="">
        <Name>Hall</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Category</ObjectType>
        <Category>7</Category>
        <Location>1</Location>
      </Category>
    </Object>
    <Object>
      <Task VID="9878" Master="9722" MTime="">
        <Name>Hall PIR Task</Name>
        <Model>Hall PIR Task</Model>
        <Note />
        <DName />
        <ObjectType>Task</ObjectType>
        <Category>9876</Category>
        <Procedure>
          <Target>10165</Target>
          <Function>SceneProgram_9878</Function>
          <Parameters>
            <Param>0</Param>
            <Param>1</Param>
            <Param>2</Param>
          </Parameters>
        </Procedure>
        <Query>
          <Target>0</Target>
          <Function />
          <Parameters />
        </Query>
        <Adjust>
          <Target>0</Target>
          <Function />
          <Parameters />
        </Adjust>
        <Level>
          <Target>0</Target>
          <Function />
          <Parameters />
        </Level>
        <ParamTable>
          <Param ID="0">
            <gmem Type="ref">10148</gmem>
          </Param>
          <Param ID="1">
            <gmem Type="ref">10105</gmem>
          </Param>
          <Param ID="2">
            <gmem Type="ref">10057</gmem>
          </Param>
        </ParamTable>
        <DependTable />
      </Task>
      <Module>
        <Library Name="Lighting\Toggle" Local="true" />
        <Library Name="Programming\LaunchTasks" Local="true" />
        <Library Name="Programming\VantageTime" Local="true" />
        <Library Name="Programming\MiscTasks" Local="true" />
        <Library Name="vantage" Local="false" />
        <Scene>
          <Name>SceneProgram_9878</Name>
          <Type>procedure</Type>
          <Parameters>
            <Param>
              <Reference>true</Reference>
              <Label>bool</Label>
              <Label>GMem</Label>
              <Name>param1</Name>
            </Param>
            <Param>
              <Reference>true</Reference>
              <Label>Delay</Label>
              <Label>GMem</Label>
              <Name>param5</Name>
            </Param>
            <Param>
              <Reference>true</Reference>
              <Label>Number</Label>
              <Label>GMem</Label>
              <Name>param6</Name>
            </Param>
          </Parameters>
          <ParameterValues>
            <Param>
              <Label>GMem</Label>
              <Constant Type="int">10148</Constant>
              <ParamName>param1</ParamName>
            </Param>
            <Param>
              <Label>GMem</Label>
              <Constant Type="int">10105</Constant>
              <ParamName>param5</ParamName>
            </Param>
            <Param>
              <Label>GMem</Label>
              <Constant Type="int">10057</Constant>
              <ParamName>param6</ParamName>
            </Param>
          </ParameterValues>
          <FunctionBody>
            <If disable="false">
              <LogicalExpression>
                <GivePrecedence>false</GivePrecedence>
                <Expanded>true</Expanded>
                <LogicalExpression>
                  <GivePrecedence>false</GivePrecedence>
                  <Expanded>true</Expanded>
                  <RelationalExpression>
                    <Operand>
                      <Label>Number</Label>
                      <Identifier>param6</Identifier>
                    </Operand>
                    <Operator>eq</Operator>
                    <Operand>
                      <Label>Number</Label>
                      <Constant Type="int">0</Constant>
                    </Operand>
                  </RelationalExpression>
                </LogicalExpression>
                <Operator>and</Operator>
                <LogicalExpression>
                  <GivePrecedence>false</GivePrecedence>
                  <Expanded>true</Expanded>
                  <RelationalExpression>
                    <Operand>
                      <Label>bool</Label>
                      <Identifier>param1</Identifier>
                    </Operand>
                    <Operator>eq</Operator>
                    <Operand>
                      <Label>bool</Label>
                      <Constant Type="bool">false</Constant>
                    </Operand>
                  </RelationalExpression>
                </LogicalExpression>
              </LogicalExpression>
              <StatementList>
                <If disable="false">
                  <LogicalExpression>
                    <GivePrecedence>false</GivePrecedence>
                    <Expanded>true</Expanded>
                    <RelationalExpression>
                      <Operand>
                        <Label>TriggerType</Label>
                        <FunctionCall>
                          <Name>GetEventType</Name>
                          <Parameters />
                        </FunctionCall>
                      </Operand>
                      <Operator>eq</Operator>
                      <Operand>
                        <Label>TriggerType</Label>
                        <Identifier>ButtonPress</Identifier>
                      </Operand>
                    </RelationalExpression>
                  </LogicalExpression>
                  <StatementList>
                    <If disable="false">
                      <LogicalExpression>
                        <GivePrecedence>false</GivePrecedence>
                        <Expanded>true</Expanded>
                        <RelationalExpression>
                          <Operand>
                            <Label>bool</Label>
                            <FunctionCall>
                              <Name>DayTime</Name>
                              <Parameters />
                            </FunctionCall>
                          </Operand>
                          <Operator>eq</Operator>
                          <Operand>
                            <Label>bool</Label>
                            <Constant Type="bool">true</Constant>
                          </Operand>
                        </RelationalExpression>
                      </LogicalExpression>
                      <StatementList>
                        <FunctionCall disable="false">
                          <Name>LaunchTaskWithCurrentEvent</Name>
                          <Parameters>
                            <Param>
                              <Label>Task</Label>
                              <Initializer>
                                <Constant Type="int">10144</Constant>
                              </Initializer>
                              <ParamName>tasks</ParamName>
                            </Param>
                          </Parameters>
                        </FunctionCall>
                      </StatementList>
                      <Expanded>True</Expanded>
                    </If>
                    <Else disable="false">
                      <StatementList>
                        <FunctionCall disable="false">
                          <Name>LaunchTaskWithCurrentEvent</Name>
                          <Parameters>
                            <Param>
                              <Label>Task</Label>
                              <Initializer>
                                <Constant Type="int">10145</Constant>
                              </Initializer>
                              <ParamName>tasks</ParamName>
                            </Param>
                          </Parameters>
                        </FunctionCall>
                      </StatementList>
                      <Expanded>True</Expanded>
                    </Else>
                  </StatementList>
                  <Expanded>True</Expanded>
                </If>
                <ElseIf disable="false">
                  <LogicalExpression>
                    <GivePrecedence>false</GivePrecedence>
                    <Expanded>true</Expanded>
                    <RelationalExpression>
                      <Operand>
                        <Label>TriggerType</Label>
                        <FunctionCall>
                          <Name>GetEventType</Name>
                          <Parameters />
                        </FunctionCall>
                      </Operand>
                      <Operator>eq</Operator>
                      <Operand>
                        <Label>TriggerType</Label>
                        <Identifier>ButtonRelease</Identifier>
                      </Operand>
                    </RelationalExpression>
                  </LogicalExpression>
                  <StatementList>
                    <FunctionCall disable="false">
                      <Name>TheDelay</Name>
                      <Parameters>
                        <Param>
                          <Label>Delay</Label>
                          <Identifier>param5</Identifier>
                          <ParamName>delayTime</ParamName>
                        </Param>
                      </Parameters>
                    </FunctionCall>
                    <FunctionCall disable="false">
                      <Name>Off</Name>
                      <Parameters>
                        <Param>
                          <Label>Load</Label>
                          <Initializer>
                            <Constant Type="int">79</Constant>
                          </Initializer>
                          <ParamName>loads</ParamName>
                        </Param>
                        <Param>
                          <Label>Seconds</Label>
                          <Constant Type="float">2.0</Constant>
                          <ParamName>rampTime</ParamName>
                        </Param>
                      </Parameters>
                    </FunctionCall>
                  </StatementList>
                  <Expanded>True</Expanded>
                </ElseIf>
              </StatementList>
              <Expanded>True</Expanded>
            </If>
          </FunctionBody>
        </Scene>
      </Module>
    </Object>
    <Object>
      <DryContact VID="9881" Master="9722" MTime="" Position="">
        <Name>Hall PIR Task</Name>
        <Note>
        </Note>
        <Model>FL-MS MINI 360-16 - PIR Motion Sensor 16 ft./5 m.</Model>
        <DName>
        </DName>
        <ObjectType>DryContact</ObjectType>
        <Area>18</Area>
        <Location>
        </Location>
        <Parent Position="252">9744</Parent>
        <Down>9878</Down>
        <Up>9878</Up>
        <ReversePolarity>true</ReversePolarity>
        <HoldOnTime>0</HoldOnTime>
      </DryContact>
    </Object>
    <Object>
      <DryContact VID="9883" Master="9722" MTime="" Position="">
        <Name>En-Suite PIR Task</Name>
        <Note>
        </Note>
        <Model>EM-MOTIONSENSOR15 - 360? PIR Motion Sensor 15 ft./4.6 m.</Model>
        <DName>
        </DName>
        <ObjectType>DryContact</ObjectType>
        <Area>23</Area>
        <Location>
        </Location>
        <Parent Position="252">9804</Parent>
        <Down>9867</Down>
        <Up>9867</Up>
        <ReversePolarity>true</ReversePolarity>
        <HoldOnTime>0</HoldOnTime>
      </DryContact>
    </Object>
    <Object>
      <Category VID="9885" Master="9722" MTime="">
        <Name>Bed 1</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Category</ObjectType>
        <Category>7</Category>
        <Location>5</Location>
      </Category>
    </Object>
    <Object>
      <Task VID="9887" Master="9722" MTime="">
        <Name>Master Bedroom Off</Name>
        <Model>Master Bedroom Off</Model>
        <Note />
        <DName />
        <ObjectType>Task</ObjectType>
        <Category>9885</Category>
        <Procedure>
          <Target>10177</Target>
          <Function>SceneProgram_9887</Function>
          <Parameters>
            <Param>0</Param>
            <Param>1</Param>
          </Parameters>
        </Procedure>
        <Query>
          <Target>10168</Target>
          <Function>AnyLoadsOn</Function>
          <Parameters>
            <Param>2</Param>
          </Parameters>
        </Query>
        <Adjust>
          <Target>0</Target>
          <Function />
          <Parameters />
        </Adjust>
        <Level>
          <Target>0</Target>
          <Function />
          <Parameters />
        </Level>
        <ParamTable>
          <Param ID="0">
            <gmem Type="ref">10017</gmem>
          </Param>
          <Param ID="1">
            <gmem Type="ref">10441</gmem>
          </Param>
          <Param ID="2">
            <array>
              <val>55</val>
              <val>53</val>
              <val>54</val>
            </array>
          </Param>
        </ParamTable>
        <DependTable>
          <Param status="Load.GetLevel">2</Param>
        </DependTable>
      </Task>
      <Module>
        <Library Name="Programming\LaunchTasks" Local="true" />
        <Library Name="Lighting\Toggle" Local="true" />
        <Library Name="vantage" Local="false" />
        <Scene>
          <Name>SceneProgram_9887</Name>
          <Type>procedure</Type>
          <Parameters>
            <Param>
              <Reference>true</Reference>
              <Label>Number</Label>
              <Label>GMem</Label>
              <Name>param2</Name>
            </Param>
            <Param>
              <Reference>true</Reference>
              <Label>bool</Label>
              <Label>GMem</Label>
              <Name>param3</Name>
            </Param>
          </Parameters>
          <ParameterValues>
            <Param>
              <Label>GMem</Label>
              <Constant Type="int">10017</Constant>
              <ParamName>param2</ParamName>
            </Param>
            <Param>
              <Label>GMem</Label>
              <Constant Type="int">10441</Constant>
              <ParamName>param3</ParamName>
            </Param>
          </ParameterValues>
          <FunctionBody>
            <FunctionCall disable="false">
              <Name>Off</Name>
              <Parameters>
                <Param>
                  <Label>Load</Label>
                  <Initializer>
                    <Constant Type="int">79</Constant>
                    <Constant Type="int">55</Constant>
                    <Constant Type="int">10197</Constant>
                    <Constant Type="int">53</Constant>
                    <Constant Type="int">54</Constant>
                  </Initializer>
                  <ParamName>loads</ParamName>
                </Param>
                <Param>
                  <Label>Seconds</Label>
                  <Constant Type="float">2.0</Constant>
                  <ParamName>rampTime</ParamName>
                </Param>
              </Parameters>
            </FunctionCall>
            <FunctionCall disable="false">
              <Name>LaunchTaskWithCurrentEvent</Name>
              <Parameters>
                <Param>
                  <Label>Task</Label>
                  <Initializer>
                    <Constant Type="int">9866</Constant>
                  </Initializer>
                  <ParamName>tasks</ParamName>
                </Param>
              </Parameters>
            </FunctionCall>
            <Assignment disable="false">
              <Operand>
                <Identifier>param2</Identifier>
              </Operand>
              <Assign>equals</Assign>
              <Operand>
                <Label>Number</Label>
                <Constant Type="int">1</Constant>
              </Operand>
            </Assignment>
            <Assignment disable="false">
              <Operand>
                <Identifier>param3</Identifier>
              </Operand>
              <Assign>equals</Assign>
              <Operand>
                <Label>bool</Label>
                <Constant Type="bool">false</Constant>
              </Operand>
            </Assignment>
            <QueryCall>
              <Name>AnyLoadsOn</Name>
              <Parameters>
                <Param>
                  <Label>Load</Label>
                  <Initializer>
                    <Constant Type="int">55</Constant>
                    <Constant Type="int">53</Constant>
                    <Constant Type="int">54</Constant>
                  </Initializer>
                  <ParamName>loads</ParamName>
                </Param>
              </Parameters>
            </QueryCall>
          </FunctionBody>
        </Scene>
      </Module>
    </Object>
    <Object>
      <Task VID="9888" Master="9722" MTime="">
        <Name>Master Bedroom Scene 1</Name>
        <Model>Master Bedroom Scene 1</Model>
        <Note />
        <DName />
        <ObjectType>Task</ObjectType>
        <Category>9885</Category>
        <Procedure>
          <Target>10165</Target>
          <Function>SceneProgram_9888</Function>
          <Parameters>
            <Param>0</Param>
          </Parameters>
        </Procedure>
        <Query>
          <Target>10172</Target>
          <Function>VariableAtSpecifiedValue</Function>
          <Parameters>
            <Param>1</Param>
            <Param>2</Param>
          </Parameters>
        </Query>
        <Adjust>
          <Target>10173</Target>
          <Function>AdjustLoads</Function>
          <Parameters>
            <Param>3</Param>
            <Param>4</Param>
            <Param>5</Param>
          </Parameters>
        </Adjust>
        <Level Max="100">
          <Target>10173</Target>
          <Function>AverageLoadLevel</Function>
          <Parameters>
            <Param>3</Param>
          </Parameters>
        </Level>
        <ParamTable>
          <Param ID="0">
            <gmem Type="ref">10017</gmem>
          </Param>
          <Param ID="1">
            <gmem>10017</gmem>
          </Param>
          <Param ID="2">
            <val>2</val>
          </Param>
          <Param ID="3">
            <array>
              <val>55</val>
              <val>53</val>
              <val>54</val>
            </array>
          </Param>
          <Param ID="4" Fixed="true">
            <val>5</val>
          </Param>
          <Param ID="5" Fixed="true">
            <val>10</val>
          </Param>
        </ParamTable>
        <DependTable>
          <Param>1</Param>
        </DependTable>
      </Task>
      <Module>
        <Library Name="Lighting\Toggle" Local="true" />
        <Library Name="vantage" Local="false" />
        <Scene>
          <Name>SceneProgram_9888</Name>
          <Type>procedure</Type>
          <Parameters>
            <Param>
              <Reference>true</Reference>
              <Label>Number</Label>
              <Label>GMem</Label>
              <Name>param2</Name>
            </Param>
          </Parameters>
          <ParameterValues>
            <Param>
              <Label>GMem</Label>
              <Constant Type="int">10017</Constant>
              <ParamName>param2</ParamName>
            </Param>
          </ParameterValues>
          <FunctionBody>
            <FunctionCall disable="false">
              <Name>On</Name>
              <Parameters>
                <Param>
                  <Label>Load</Label>
                  <Initializer>
                    <Constant Type="int">55</Constant>
                    <Constant Type="int">53</Constant>
                    <Constant Type="int">54</Constant>
                  </Initializer>
                  <ParamName>loads</ParamName>
                </Param>
                <Param>
                  <Label>Level</Label>
                  <Initializer>
                    <Constant Type="float">100.0</Constant>
                    <Constant Type="float">100.0</Constant>
                    <Constant Type="float">100.0</Constant>
                  </Initializer>
                  <ParamName>levels</ParamName>
                </Param>
                <Param>
                  <Label>Seconds</Label>
                  <Constant Type="float">2.0</Constant>
                  <ParamName>rampTime</ParamName>
                </Param>
                <Param>
                  <Label>bool</Label>
                  <Constant Type="bool">true</Constant>
                  <ParamName>learnable</ParamName>
                </Param>
                <Param>
                  <Label>MemID</Label>
                  <Constant Type="int">0</Constant>
                  <ParamName>bufferid</ParamName>
                </Param>
              </Parameters>
            </FunctionCall>
            <Assignment disable="false">
              <Operand>
                <Identifier>param2</Identifier>
              </Operand>
              <Assign>equals</Assign>
              <Operand>
                <Label>Number</Label>
                <Constant Type="int">2</Constant>
              </Operand>
            </Assignment>
            <QueryCall>
              <Name>VariableAtSpecifiedValue</Name>
              <Parameters>
                <Param>
                  <Label>GMem</Label>
                  <Constant Type="int">10017</Constant>
                  <ParamName>variable</ParamName>
                </Param>
                <Param>
                  <Label>Number</Label>
                  <Constant Type="int">2</Constant>
                  <ParamName>value</ParamName>
                </Param>
              </Parameters>
            </QueryCall>
          </FunctionBody>
        </Scene>
      </Module>
    </Object>
    <Object>
      <Task VID="9890" Master="9722" MTime="">
        <Name>Master Bedroom Reading</Name>
        <Model>Master Bedroom Reading</Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Task</ObjectType>
        <Category>9885</Category>
        <Procedure>
          <Target>10175</Target>
          <Function>DimCycle</Function>
          <Parameters>
            <Param>0</Param>
            <Param>1</Param>
            <Param>2</Param>
            <Param>2</Param>
            <Param>3</Param>
            <Param>4</Param>
            <Param>4</Param>
            <Param>5</Param>
            <Param>6</Param>
          </Parameters>
        </Procedure>
        <Query>
          <Target>10168</Target>
          <Function>LoadsOn</Function>
          <Parameters>
            <Param>0</Param>
          </Parameters>
        </Query>
        <Adjust>
          <Target>10173</Target>
          <Function>AdjustLoads</Function>
          <Parameters>
            <Param>0</Param>
            <Param>3</Param>
            <Param>6</Param>
          </Parameters>
        </Adjust>
        <Level Max="100">
          <Target>10173</Target>
          <Function>AverageLoadLevel</Function>
          <Parameters>
            <Param>0</Param>
          </Parameters>
        </Level>
        <ParamTable>
          <Param ID="0">
            <array>
              <val>55</val>
            </array>
          </Param>
          <Param ID="1" Fixed="true">
            <array>
              <val>100</val>
            </array>
          </Param>
          <Param ID="2" Fixed="true">
            <val>2</val>
          </Param>
          <Param ID="3" Fixed="true">
            <val>5</val>
          </Param>
          <Param ID="4">
            <val>1</val>
          </Param>
          <Param ID="5">
            <val>0</val>
          </Param>
          <Param ID="6" Fixed="true">
            <val>10</val>
          </Param>
        </ParamTable>
        <DependTable>
          <Param status="Load.GetLevel">0</Param>
        </DependTable>
      </Task>
      <Module>
        <Library Name="Lighting\Dim" Local="true" />
        <Library Name="vantage" Local="false" />
        <Scene>
          <Name>SceneProgram_9890</Name>
          <Type>procedure</Type>
          <Parameters />
          <ParameterValues />
          <FunctionBody>
            <FunctionCall disable="false">
              <Name>DimCycle</Name>
              <Parameters>
                <Param>
                  <Label>Load</Label>
                  <Initializer>
                    <Constant Type="int">55</Constant>
                  </Initializer>
                  <ParamName>loads</ParamName>
                </Param>
                <Param>
                  <Label>Level</Label>
                  <Initializer>
                    <Constant Type="float">100.0</Constant>
                  </Initializer>
                  <ParamName>levels</ParamName>
                </Param>
                <Param>
                  <Label>Seconds</Label>
                  <Constant Type="float">2.0</Constant>
                  <ParamName>rampTime</ParamName>
                </Param>
                <Param>
                  <Label>Seconds</Label>
                  <Constant Type="float">2.0</Constant>
                  <ParamName>fadeTime</ParamName>
                </Param>
                <Param>
                  <Label>Seconds</Label>
                  <Constant Type="float">5.0</Constant>
                  <ParamName>rampRate</ParamName>
                </Param>
                <Param>
                  <Label>bool</Label>
                  <Constant Type="bool">true</Constant>
                  <ParamName>trackLED</ParamName>
                </Param>
                <Param>
                  <Label>bool</Label>
                  <Constant Type="bool">true</Constant>
                  <ParamName>learnable</ParamName>
                </Param>
                <Param>
                  <Label>MemID</Label>
                  <Constant Type="int">0</Constant>
                  <ParamName>learnedLevels</ParamName>
                </Param>
                <Param>
                  <Label>Level</Label>
                  <Constant Type="float">10.0</Constant>
                  <ParamName>minLearnedLevel</ParamName>
                </Param>
              </Parameters>
            </FunctionCall>
            <QueryCall>
              <Name>LoadsOn</Name>
              <Parameters>
                <Param>
                  <Label>Load</Label>
                  <Initializer>
                    <Constant Type="int">55</Constant>
                  </Initializer>
                  <ParamName>loads</ParamName>
                </Param>
              </Parameters>
            </QueryCall>
          </FunctionBody>
        </Scene>
      </Module>
    </Object>
    <Object>
      <Task VID="9894" Master="9722" MTime="">
        <Name>Master Bedroom Scene scroll</Name>
        <Model>Master Bedroom Scene scroll</Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Task</ObjectType>
        <Category>9885</Category>
        <Procedure>
          <Target>10171</Target>
          <Function>CycleTasks</Function>
          <Parameters>
            <Param>0</Param>
            <Param>1</Param>
            <Param>2</Param>
          </Parameters>
        </Procedure>
        <Query>
          <Target>10168</Target>
          <Function>AnyLoadsOn</Function>
          <Parameters>
            <Param>3</Param>
          </Parameters>
        </Query>
        <Adjust>
          <Target>0</Target>
          <Function />
          <Parameters />
        </Adjust>
        <Level>
          <Target>0</Target>
          <Function />
          <Parameters />
        </Level>
        <ParamTable>
          <Param ID="0">
            <array>
              <val>9888</val>
              <val>10028</val>
              <val>10050</val>
            </array>
          </Param>
          <Param ID="1">
            <array>
              <val>1</val>
              <val>2</val>
              <val>3</val>
            </array>
          </Param>
          <Param ID="2">
            <val>0</val>
          </Param>
          <Param ID="3">
            <array>
              <val>55</val>
              <val>53</val>
              <val>54</val>
              <val>10197</val>
            </array>
          </Param>
        </ParamTable>
        <DependTable>
          <Param status="Load.GetLevel">3</Param>
        </DependTable>
      </Task>
      <Module>
        <Library Name="Programming\LaunchTasks" Local="true" />
        <Library Name="vantage" Local="false" />
        <Scene>
          <Name>SceneProgram_9894</Name>
          <Type>procedure</Type>
          <Parameters />
          <ParameterValues />
          <FunctionBody>
            <FunctionCall disable="false">
              <Name>CycleTasks</Name>
              <Parameters>
                <Param>
                  <Label>Task</Label>
                  <Initializer>
                    <Constant Type="int">9888</Constant>
                    <Constant Type="int">10028</Constant>
                    <Constant Type="int">10050</Constant>
                  </Initializer>
                  <ParamName>tasks</ParamName>
                </Param>
                <Param>
                  <Label>Number</Label>
                  <Initializer>
                    <Constant Type="int">1</Constant>
                    <Constant Type="int">2</Constant>
                    <Constant Type="int">3</Constant>
                  </Initializer>
                  <ParamName>orders</ParamName>
                </Param>
                <Param>
                  <Label>TriggerType</Label>
                  <Identifier>ButtonRelease</Identifier>
                  <ParamName>eventType</ParamName>
                </Param>
              </Parameters>
            </FunctionCall>
            <QueryCall>
              <Name>AnyLoadsOn</Name>
              <Parameters>
                <Param>
                  <Label>Load</Label>
                  <Initializer>
                    <Constant Type="int">55</Constant>
                    <Constant Type="int">53</Constant>
                    <Constant Type="int">54</Constant>
                    <Constant Type="int">10197</Constant>
                  </Initializer>
                  <ParamName>loads</ParamName>
                </Param>
              </Parameters>
            </QueryCall>
          </FunctionBody>
        </Scene>
      </Module>
    </Object>
    <Object>
      <Category VID="9895" Master="9722" MTime="">
        <Name>Bed 1 Blinds</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Category</ObjectType>
        <Category>7</Category>
        <Location>7</Location>
      </Category>
    </Object>
    <Object>
      <Task VID="9896" Master="9722" MTime="">
        <Name>Master Bedroom Blinds Up</Name>
        <Model>Master Bedroom Blinds Up</Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Task</ObjectType>
        <Category>9895</Category>
        <Procedure>
          <Target>10382</Target>
          <Function>Blind.Open</Function>
          <Parameters>
            <Param>0</Param>
          </Parameters>
        </Procedure>
        <Query>
          <Target>10168</Target>
          <Function>LoadsOn</Function>
          <Parameters>
            <Param>1</Param>
          </Parameters>
        </Query>
        <Adjust>
          <Target>0</Target>
          <Function />
          <Parameters />
        </Adjust>
        <Level>
          <Target>0</Target>
          <Function />
          <Parameters />
        </Level>
        <ParamTable>
          <Param ID="0">
            <val>10382</val>
          </Param>
          <Param ID="1">
            <array>
              <val>10394</val>
              <val>101</val>
              <val>10392</val>
              <val>100</val>
            </array>
          </Param>
        </ParamTable>
        <DependTable>
          <Param status="Load.GetLevel">1</Param>
        </DependTable>
      </Task>
      <Module>
        <Library Name="blind" Local="false" />
        <Library Name="vantage" Local="false" />
        <Scene>
          <Name>SceneProgram_9896</Name>
          <Type>procedure</Type>
          <Parameters />
          <ParameterValues />
          <FunctionBody>
            <FunctionCall disable="false">
              <Name>Blind_Open</Name>
              <Parameters>
                <Param>
                  <Label>Blind</Label>
                  <Constant Type="int">10382</Constant>
                  <ParamName>object</ParamName>
                </Param>
              </Parameters>
            </FunctionCall>
            <QueryCall>
              <Name>LoadsOn</Name>
              <Parameters>
                <Param>
                  <Label>Load</Label>
                  <Initializer>
                    <Constant Type="int">10394</Constant>
                    <Constant Type="int">101</Constant>
                    <Constant Type="int">10392</Constant>
                    <Constant Type="int">100</Constant>
                  </Initializer>
                  <ParamName>loads</ParamName>
                </Param>
              </Parameters>
            </QueryCall>
          </FunctionBody>
        </Scene>
      </Module>
    </Object>
    <Object>
      <Task VID="9897" Master="9722" MTime="">
        <Name>Master Bedroom Blinds Stop</Name>
        <Model>Master Bedroom Blinds Stop</Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Task</ObjectType>
        <Category>9895</Category>
        <Procedure>
          <Target>10382</Target>
          <Function>Blind.Stop</Function>
          <Parameters>
            <Param>0</Param>
          </Parameters>
        </Procedure>
        <Query>
          <Target>10168</Target>
          <Function>LoadsOn</Function>
          <Parameters>
            <Param>1</Param>
          </Parameters>
        </Query>
        <Adjust>
          <Target>0</Target>
          <Function />
          <Parameters />
        </Adjust>
        <Level>
          <Target>0</Target>
          <Function />
          <Parameters />
        </Level>
        <ParamTable>
          <Param ID="0">
            <val>10382</val>
          </Param>
          <Param ID="1">
            <array>
              <val>10392</val>
              <val>100</val>
            </array>
          </Param>
        </ParamTable>
        <DependTable>
          <Param status="Load.GetLevel">1</Param>
        </DependTable>
      </Task>
      <Module>
        <Library Name="blind" Local="false" />
        <Library Name="vantage" Local="false" />
        <Scene>
          <Name>SceneProgram_9897</Name>
          <Type>procedure</Type>
          <Parameters />
          <ParameterValues />
          <FunctionBody>
            <FunctionCall disable="false">
              <Name>Blind_Stop</Name>
              <Parameters>
                <Param>
                  <Label>Blind</Label>
                  <Constant Type="int">10382</Constant>
                  <ParamName>object</ParamName>
                </Param>
              </Parameters>
            </FunctionCall>
            <QueryCall>
              <Name>LoadsOn</Name>
              <Parameters>
                <Param>
                  <Label>Load</Label>
                  <Initializer>
                    <Constant Type="int">10392</Constant>
                    <Constant Type="int">100</Constant>
                  </Initializer>
                  <ParamName>loads</ParamName>
                </Param>
              </Parameters>
            </QueryCall>
          </FunctionBody>
        </Scene>
      </Module>
    </Object>
    <Object>
      <Task VID="9898" Master="9722" MTime="">
        <Name>Master Bedroom Blinds down</Name>
        <Model>Master Bedroom Blinds down</Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Task</ObjectType>
        <Category>9895</Category>
        <Procedure>
          <Target>10382</Target>
          <Function>Blind.Close</Function>
          <Parameters>
            <Param>0</Param>
          </Parameters>
        </Procedure>
        <Query>
          <Target>10168</Target>
          <Function>LoadsAtLearnedLevels</Function>
          <Parameters>
            <Param>1</Param>
            <Param>2</Param>
            <Param>3</Param>
          </Parameters>
        </Query>
        <Adjust>
          <Target>0</Target>
          <Function />
          <Parameters />
        </Adjust>
        <Level>
          <Target>0</Target>
          <Function />
          <Parameters />
        </Level>
        <ParamTable>
          <Param ID="0">
            <val>10382</val>
          </Param>
          <Param ID="1">
            <array>
              <val>10394</val>
              <val>101</val>
              <val>10392</val>
              <val>100</val>
            </array>
          </Param>
          <Param ID="2" Fixed="true">
            <array>
              <val>0</val>
              <val>0</val>
              <val>100</val>
              <val>100</val>
            </array>
          </Param>
          <Param ID="3">
            <val>0</val>
          </Param>
        </ParamTable>
        <DependTable>
          <Param status="Load.GetLevel">1</Param>
        </DependTable>
      </Task>
      <Module>
        <Library Name="blind" Local="false" />
        <Library Name="vantage" Local="false" />
        <Scene>
          <Name>SceneProgram_9898</Name>
          <Type>procedure</Type>
          <Parameters />
          <ParameterValues />
          <FunctionBody>
            <FunctionCall disable="false">
              <Name>Blind_Close</Name>
              <Parameters>
                <Param>
                  <Label>Blind</Label>
                  <Constant Type="int">10382</Constant>
                  <ParamName>object</ParamName>
                </Param>
              </Parameters>
            </FunctionCall>
            <QueryCall>
              <Name>LoadsAtLearnedLevels</Name>
              <Parameters>
                <Param>
                  <Label>Load</Label>
                  <Initializer>
                    <Constant Type="int">10394</Constant>
                    <Constant Type="int">101</Constant>
                    <Constant Type="int">10392</Constant>
                    <Constant Type="int">100</Constant>
                  </Initializer>
                  <ParamName>loads</ParamName>
                </Param>
                <Param>
                  <Label>Level</Label>
                  <Initializer>
                    <Constant Type="float">0.0</Constant>
                    <Constant Type="float">0.0</Constant>
                    <Constant Type="float">100.0</Constant>
                    <Constant Type="float">100.0</Constant>
                  </Initializer>
                  <ParamName>levels</ParamName>
                </Param>
                <Param>
                  <Label>MemID</Label>
                  <Constant Type="int">0</Constant>
                  <ParamName>bufferid</ParamName>
                </Param>
              </Parameters>
            </QueryCall>
          </FunctionBody>
        </Scene>
      </Module>
    </Object>
    <Object>
      <Task VID="9899" Master="9722" MTime="">
        <Name>Master Bedroom Blinds Up/Stop</Name>
        <Model>Master Bedroom Blinds Up/Stop</Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Task</ObjectType>
        <Category>9895</Category>
        <Procedure>
          <Target>10176</Target>
          <Function>SceneProgram_9899</Function>
          <Parameters />
        </Procedure>
        <Query>
          <Target>10168</Target>
          <Function>LoadsOn</Function>
          <Parameters>
            <Param>0</Param>
          </Parameters>
        </Query>
        <Adjust>
          <Target>0</Target>
          <Function />
          <Parameters />
        </Adjust>
        <Level>
          <Target>0</Target>
          <Function />
          <Parameters />
        </Level>
        <ParamTable>
          <Param ID="0">
            <array>
              <val>10394</val>
              <val>101</val>
              <val>10392</val>
              <val>100</val>
            </array>
          </Param>
        </ParamTable>
        <DependTable>
          <Param status="Load.GetLevel">0</Param>
        </DependTable>
      </Task>
      <Module>
        <Library Name="blind" Local="false" />
        <Library Name="load" Local="false" />
        <Library Name="vantage" Local="false" />
        <Scene>
          <Name>SceneProgram_9899</Name>
          <Type>procedure</Type>
          <Parameters />
          <ParameterValues />
          <FunctionBody>
            <If disable="false">
              <LogicalExpression>
                <GivePrecedence>false</GivePrecedence>
                <Expanded>true</Expanded>
                <LogicalExpression>
                  <GivePrecedence>false</GivePrecedence>
                  <Expanded>true</Expanded>
                  <RelationalExpression>
                    <Operand>
                      <Label>Level</Label>
                      <FunctionCall>
                        <Name>Load_GetLevel</Name>
                        <Parameters>
                          <Param>
                            <Label>Load</Label>
                            <Constant Type="int">10392</Constant>
                            <ParamName>object</ParamName>
                          </Param>
                        </Parameters>
                      </FunctionCall>
                    </Operand>
                    <Operator>eq</Operator>
                    <Operand>
                      <Label>Level</Label>
                      <Constant Type="float">100.0</Constant>
                    </Operand>
                  </RelationalExpression>
                </LogicalExpression>
                <Operator>or</Operator>
                <LogicalExpression>
                  <GivePrecedence>false</GivePrecedence>
                  <Expanded>true</Expanded>
                  <LogicalExpression>
                    <GivePrecedence>false</GivePrecedence>
                    <Expanded>true</Expanded>
                    <RelationalExpression>
                      <Operand>
                        <Label>Level</Label>
                        <FunctionCall>
                          <Name>Load_GetLevel</Name>
                          <Parameters>
                            <Param>
                              <Label>Load</Label>
                              <Constant Type="int">100</Constant>
                              <ParamName>object</ParamName>
                            </Param>
                          </Parameters>
                        </FunctionCall>
                      </Operand>
                      <Operator>eq</Operator>
                      <Operand>
                        <Label>Level</Label>
                        <Constant Type="float">100.0</Constant>
                      </Operand>
                    </RelationalExpression>
                  </LogicalExpression>
                  <Operator>or</Operator>
                  <LogicalExpression>
                    <GivePrecedence>false</GivePrecedence>
                    <Expanded>true</Expanded>
                    <RelationalExpression>
                      <Operand>
                        <Label>Level</Label>
                        <FunctionCall>
                          <Name>Load_GetLevel</Name>
                          <Parameters>
                            <Param>
                              <Label>Load</Label>
                              <Constant Type="int">10390</Constant>
                              <ParamName>object</ParamName>
                            </Param>
                          </Parameters>
                        </FunctionCall>
                      </Operand>
                      <Operator>eq</Operator>
                      <Operand>
                        <Label>Level</Label>
                        <Constant Type="float">100.0</Constant>
                      </Operand>
                    </RelationalExpression>
                  </LogicalExpression>
                </LogicalExpression>
              </LogicalExpression>
              <StatementList>
                <FunctionCall disable="false">
                  <Name>Blind_Stop</Name>
                  <Parameters>
                    <Param>
                      <Label>Blind</Label>
                      <Constant Type="int">10382</Constant>
                      <ParamName>object</ParamName>
                    </Param>
                  </Parameters>
                </FunctionCall>
              </StatementList>
              <Expanded>True</Expanded>
            </If>
            <Else disable="false">
              <StatementList>
                <FunctionCall disable="false">
                  <Name>Blind_Open</Name>
                  <Parameters>
                    <Param>
                      <Label>Blind</Label>
                      <Constant Type="int">10382</Constant>
                      <ParamName>object</ParamName>
                    </Param>
                  </Parameters>
                </FunctionCall>
              </StatementList>
              <Expanded>True</Expanded>
            </Else>
            <QueryCall>
              <Name>LoadsOn</Name>
              <Parameters>
                <Param>
                  <Label>Load</Label>
                  <Initializer>
                    <Constant Type="int">10394</Constant>
                    <Constant Type="int">101</Constant>
                    <Constant Type="int">10392</Constant>
                    <Constant Type="int">100</Constant>
                  </Initializer>
                  <ParamName>loads</ParamName>
                </Param>
              </Parameters>
            </QueryCall>
          </FunctionBody>
        </Scene>
      </Module>
    </Object>
    <Object>
      <Task VID="9900" Master="9722" MTime="">
        <Name>Master Bedroom Blinds Down/Stop</Name>
        <Model>Master Bedroom Blinds Down/Stop</Model>
        <Note />
        <DName />
        <ObjectType>Task</ObjectType>
        <Category>9895</Category>
        <Procedure>
          <Target>10176</Target>
          <Function>SceneProgram_9900</Function>
          <Parameters />
        </Procedure>
        <Query>
          <Target>10168</Target>
          <Function>LoadsAtLearnedLevels</Function>
          <Parameters>
            <Param>0</Param>
            <Param>1</Param>
            <Param>2</Param>
          </Parameters>
        </Query>
        <Adjust>
          <Target>0</Target>
          <Function />
          <Parameters />
        </Adjust>
        <Level>
          <Target>0</Target>
          <Function />
          <Parameters />
        </Level>
        <ParamTable>
          <Param ID="0">
            <array>
              <val>10394</val>
              <val>101</val>
              <val>10392</val>
              <val>100</val>
            </array>
          </Param>
          <Param ID="1" Fixed="true">
            <array>
              <val>100</val>
              <val>0</val>
              <val>100</val>
              <val>100</val>
            </array>
          </Param>
          <Param ID="2">
            <val>0</val>
          </Param>
        </ParamTable>
        <DependTable>
          <Param status="Load.GetLevel">0</Param>
        </DependTable>
      </Task>
      <Module>
        <Library Name="blind" Local="false" />
        <Library Name="load" Local="false" />
        <Library Name="vantage" Local="false" />
        <Scene>
          <Name>SceneProgram_9900</Name>
          <Type>procedure</Type>
          <Parameters />
          <ParameterValues />
          <FunctionBody>
            <If disable="false">
              <LogicalExpression>
                <GivePrecedence>false</GivePrecedence>
                <Expanded>true</Expanded>
                <LogicalExpression>
                  <GivePrecedence>false</GivePrecedence>
                  <Expanded>true</Expanded>
                  <RelationalExpression>
                    <Operand>
                      <Label>Level</Label>
                      <FunctionCall>
                        <Name>Load_GetLevel</Name>
                        <Parameters>
                          <Param>
                            <Label>Load</Label>
                            <Constant Type="int">10392</Constant>
                            <ParamName>object</ParamName>
                          </Param>
                        </Parameters>
                      </FunctionCall>
                    </Operand>
                    <Operator>eq</Operator>
                    <Operand>
                      <Label>Level</Label>
                      <Constant Type="float">100.0</Constant>
                    </Operand>
                  </RelationalExpression>
                </LogicalExpression>
                <Operator>or</Operator>
                <LogicalExpression>
                  <GivePrecedence>false</GivePrecedence>
                  <Expanded>true</Expanded>
                  <LogicalExpression>
                    <GivePrecedence>false</GivePrecedence>
                    <Expanded>true</Expanded>
                    <RelationalExpression>
                      <Operand>
                        <Label>Level</Label>
                        <FunctionCall>
                          <Name>Load_GetLevel</Name>
                          <Parameters>
                            <Param>
                              <Label>Load</Label>
                              <Constant Type="int">100</Constant>
                              <ParamName>object</ParamName>
                            </Param>
                          </Parameters>
                        </FunctionCall>
                      </Operand>
                      <Operator>eq</Operator>
                      <Operand>
                        <Label>Level</Label>
                        <Constant Type="float">100.0</Constant>
                      </Operand>
                    </RelationalExpression>
                  </LogicalExpression>
                  <Operator>or</Operator>
                  <LogicalExpression>
                    <GivePrecedence>false</GivePrecedence>
                    <Expanded>true</Expanded>
                    <RelationalExpression>
                      <Operand>
                        <Label>Level</Label>
                        <FunctionCall>
                          <Name>Load_GetLevel</Name>
                          <Parameters>
                            <Param>
                              <Label>Load</Label>
                              <Constant Type="int">10390</Constant>
                              <ParamName>object</ParamName>
                            </Param>
                          </Parameters>
                        </FunctionCall>
                      </Operand>
                      <Operator>eq</Operator>
                      <Operand>
                        <Label>Level</Label>
                        <Constant Type="float">100.0</Constant>
                      </Operand>
                    </RelationalExpression>
                  </LogicalExpression>
                </LogicalExpression>
              </LogicalExpression>
              <StatementList>
                <FunctionCall disable="false">
                  <Name>Blind_Stop</Name>
                  <Parameters>
                    <Param>
                      <Label>Blind</Label>
                      <Constant Type="int">10382</Constant>
                      <ParamName>object</ParamName>
                    </Param>
                  </Parameters>
                </FunctionCall>
              </StatementList>
              <Expanded>True</Expanded>
            </If>
            <Else disable="false">
              <StatementList>
                <FunctionCall disable="false">
                  <Name>Blind_Close</Name>
                  <Parameters>
                    <Param>
                      <Label>Blind</Label>
                      <Constant Type="int">10382</Constant>
                      <ParamName>object</ParamName>
                    </Param>
                  </Parameters>
                </FunctionCall>
              </StatementList>
              <Expanded>True</Expanded>
            </Else>
            <QueryCall>
              <Name>LoadsAtLearnedLevels</Name>
              <Parameters>
                <Param>
                  <Label>Load</Label>
                  <Initializer>
                    <Constant Type="int">10394</Constant>
                    <Constant Type="int">101</Constant>
                    <Constant Type="int">10392</Constant>
                    <Constant Type="int">100</Constant>
                  </Initializer>
                  <ParamName>loads</ParamName>
                </Param>
                <Param>
                  <Label>Level</Label>
                  <Initializer>
                    <Constant Type="float">100.0</Constant>
                    <Constant Type="float">0.0</Constant>
                    <Constant Type="float">100.0</Constant>
                    <Constant Type="float">100.0</Constant>
                  </Initializer>
                  <ParamName>levels</ParamName>
                </Param>
                <Param>
                  <Label>MemID</Label>
                  <Constant Type="int">0</Constant>
                  <ParamName>bufferid</ParamName>
                </Param>
              </Parameters>
            </QueryCall>
          </FunctionBody>
        </Scene>
      </Module>
    </Object>
    <Object>
      <Category VID="9901" Master="9722" MTime="">
        <Name>Bed 2</Name>
        <Model />
        <Note />
        <DName />
        <ObjectType>Category</ObjectType>
        <Category>7</Category>
        <Location>9</Location>
      </Category>
    </Object>
    <Object>
      <Category VID="9902" Master="9722" MTime="">
        <Name>Bed 2 Blinds</Name>
        <Model />
        <Note />
        <DName />
        <ObjectType>Category</ObjectType>
        <Category>7</Category>
        <Location>10</Location>
      </Category>
    </Object>
    <Object>
      <Category VID="9903" Master="9722" MTime="">
        <Name>Living Room</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Category</ObjectType>
        <Category>7</Category>
        <Location>2</Location>
      </Category>
    </Object>
    <Object>
      <Category VID="9904" Master="9722" MTime="">
        <Name>Kitchen</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Category</ObjectType>
        <Category>7</Category>
        <Location>4</Location>
      </Category>
    </Object>
    <Object>
      <Category VID="9905" Master="9722" MTime="">
        <Name>Living Room Blinds</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Category</ObjectType>
        <Category>7</Category>
        <Location>3</Location>
      </Category>
    </Object>
    <Object>
      <Task VID="9906" Master="9722" MTime="">
        <Name>Bed 2 Blinds down</Name>
        <Model>Bed 2 Blinds down</Model>
        <Note />
        <DName />
        <ObjectType>Task</ObjectType>
        <Category>9902</Category>
        <Procedure>
          <Target>9653</Target>
          <Function>Blind.Close</Function>
          <Parameters>
            <Param>0</Param>
          </Parameters>
        </Procedure>
        <Query>
          <Target>10168</Target>
          <Function>LoadsAtLearnedLevels</Function>
          <Parameters>
            <Param>1</Param>
            <Param>2</Param>
            <Param>3</Param>
          </Parameters>
        </Query>
        <Adjust>
          <Target>0</Target>
          <Function />
          <Parameters />
        </Adjust>
        <Level>
          <Target>0</Target>
          <Function />
          <Parameters />
        </Level>
        <ParamTable>
          <Param ID="0">
            <val>9653</val>
          </Param>
          <Param ID="1">
            <array>
              <val>104</val>
              <val>105</val>
            </array>
          </Param>
          <Param ID="2" Fixed="true">
            <array>
              <val>0</val>
              <val>100</val>
            </array>
          </Param>
          <Param ID="3">
            <val>0</val>
          </Param>
        </ParamTable>
        <DependTable>
          <Param status="Load.GetLevel">1</Param>
        </DependTable>
      </Task>
      <Module>
        <Library Name="blind" Local="false" />
        <Library Name="vantage" Local="false" />
        <Scene>
          <Name>SceneProgram_9906</Name>
          <Type>procedure</Type>
          <Parameters />
          <ParameterValues />
          <FunctionBody>
            <FunctionCall disable="false">
              <Name>Blind_Close</Name>
              <Parameters>
                <Param>
                  <Label>Blind</Label>
                  <Constant Type="int">9653</Constant>
                  <ParamName>object</ParamName>
                </Param>
              </Parameters>
            </FunctionCall>
            <QueryCall>
              <Name>LoadsAtLearnedLevels</Name>
              <Parameters>
                <Param>
                  <Label>Load</Label>
                  <Initializer>
                    <Constant Type="int">104</Constant>
                    <Constant Type="int">105</Constant>
                  </Initializer>
                  <ParamName>loads</ParamName>
                </Param>
                <Param>
                  <Label>Level</Label>
                  <Initializer>
                    <Constant Type="float">0.0</Constant>
                    <Constant Type="float">100.0</Constant>
                  </Initializer>
                  <ParamName>levels</ParamName>
                </Param>
                <Param>
                  <Label>MemID</Label>
                  <Constant Type="int">0</Constant>
                  <ParamName>bufferid</ParamName>
                </Param>
              </Parameters>
            </QueryCall>
          </FunctionBody>
        </Scene>
      </Module>
    </Object>
    <Object>
      <Task VID="9907" Master="9722" MTime="">
        <Name>Bed 2 Blinds Down/Stop</Name>
        <Model>Bed 2 Blinds Down/Stop</Model>
        <Note />
        <DName />
        <ObjectType>Task</ObjectType>
        <Category>9902</Category>
        <Procedure>
          <Target>10176</Target>
          <Function>SceneProgram_9907</Function>
          <Parameters />
        </Procedure>
        <Query>
          <Target>10168</Target>
          <Function>LoadsAtLearnedLevels</Function>
          <Parameters>
            <Param>0</Param>
            <Param>1</Param>
            <Param>2</Param>
          </Parameters>
        </Query>
        <Adjust>
          <Target>0</Target>
          <Function />
          <Parameters />
        </Adjust>
        <Level>
          <Target>0</Target>
          <Function />
          <Parameters />
        </Level>
        <ParamTable>
          <Param ID="0">
            <array>
              <val>104</val>
              <val>105</val>
            </array>
          </Param>
          <Param ID="1" Fixed="true">
            <array>
              <val>0</val>
              <val>100</val>
            </array>
          </Param>
          <Param ID="2">
            <val>0</val>
          </Param>
        </ParamTable>
        <DependTable>
          <Param status="Load.GetLevel">0</Param>
        </DependTable>
      </Task>
      <Module>
        <Library Name="blind" Local="false" />
        <Library Name="load" Local="false" />
        <Library Name="vantage" Local="false" />
        <Scene>
          <Name>SceneProgram_9907</Name>
          <Type>procedure</Type>
          <Parameters />
          <ParameterValues />
          <FunctionBody>
            <If disable="false">
              <LogicalExpression>
                <GivePrecedence>false</GivePrecedence>
                <Expanded>true</Expanded>
                <RelationalExpression>
                  <Operand>
                    <Label>Level</Label>
                    <FunctionCall>
                      <Name>Load_GetLevel</Name>
                      <Parameters>
                        <Param>
                          <Label>Load</Label>
                          <Constant Type="int">105</Constant>
                          <ParamName>object</ParamName>
                        </Param>
                      </Parameters>
                    </FunctionCall>
                  </Operand>
                  <Operator>eq</Operator>
                  <Operand>
                    <Label>Level</Label>
                    <Constant Type="float">100.0</Constant>
                  </Operand>
                </RelationalExpression>
              </LogicalExpression>
              <StatementList>
                <FunctionCall disable="false">
                  <Name>Blind_Stop</Name>
                  <Parameters>
                    <Param>
                      <Label>Blind</Label>
                      <Constant Type="int">9653</Constant>
                      <ParamName>object</ParamName>
                    </Param>
                  </Parameters>
                </FunctionCall>
              </StatementList>
              <Expanded>True</Expanded>
            </If>
            <Else disable="false">
              <StatementList>
                <FunctionCall disable="false">
                  <Name>Blind_Close</Name>
                  <Parameters>
                    <Param>
                      <Label>Blind</Label>
                      <Constant Type="int">9653</Constant>
                      <ParamName>object</ParamName>
                    </Param>
                  </Parameters>
                </FunctionCall>
              </StatementList>
              <Expanded>True</Expanded>
            </Else>
            <QueryCall>
              <Name>LoadsAtLearnedLevels</Name>
              <Parameters>
                <Param>
                  <Label>Load</Label>
                  <Initializer>
                    <Constant Type="int">104</Constant>
                    <Constant Type="int">105</Constant>
                  </Initializer>
                  <ParamName>loads</ParamName>
                </Param>
                <Param>
                  <Label>Level</Label>
                  <Initializer>
                    <Constant Type="float">0.0</Constant>
                    <Constant Type="float">100.0</Constant>
                  </Initializer>
                  <ParamName>levels</ParamName>
                </Param>
                <Param>
                  <Label>MemID</Label>
                  <Constant Type="int">0</Constant>
                  <ParamName>bufferid</ParamName>
                </Param>
              </Parameters>
            </QueryCall>
          </FunctionBody>
        </Scene>
      </Module>
    </Object>
    <Object>
      <Task VID="9908" Master="9722" MTime="">
        <Name>Bed 2 Blinds Stop</Name>
        <Model>Bed 2 Blinds Stop</Model>
        <Note />
        <DName />
        <ObjectType>Task</ObjectType>
        <Category>9902</Category>
        <Procedure>
          <Target>9653</Target>
          <Function>Blind.Stop</Function>
          <Parameters>
            <Param>0</Param>
          </Parameters>
        </Procedure>
        <Query>
          <Target>10168</Target>
          <Function>LoadsOn</Function>
          <Parameters>
            <Param>1</Param>
          </Parameters>
        </Query>
        <Adjust>
          <Target>0</Target>
          <Function />
          <Parameters />
        </Adjust>
        <Level>
          <Target>0</Target>
          <Function />
          <Parameters />
        </Level>
        <ParamTable>
          <Param ID="0">
            <val>9653</val>
          </Param>
          <Param ID="1">
            <array>
              <val>105</val>
            </array>
          </Param>
        </ParamTable>
        <DependTable>
          <Param status="Load.GetLevel">1</Param>
        </DependTable>
      </Task>
      <Module>
        <Library Name="blind" Local="false" />
        <Library Name="vantage" Local="false" />
        <Scene>
          <Name>SceneProgram_9908</Name>
          <Type>procedure</Type>
          <Parameters />
          <ParameterValues />
          <FunctionBody>
            <FunctionCall disable="false">
              <Name>Blind_Stop</Name>
              <Parameters>
                <Param>
                  <Label>Blind</Label>
                  <Constant Type="int">9653</Constant>
                  <ParamName>object</ParamName>
                </Param>
              </Parameters>
            </FunctionCall>
            <QueryCall>
              <Name>LoadsOn</Name>
              <Parameters>
                <Param>
                  <Label>Load</Label>
                  <Initializer>
                    <Constant Type="int">105</Constant>
                  </Initializer>
                  <ParamName>loads</ParamName>
                </Param>
              </Parameters>
            </QueryCall>
          </FunctionBody>
        </Scene>
      </Module>
    </Object>
    <Object>
      <Task VID="9909" Master="9722" MTime="">
        <Name>Bed 2 Blinds Up</Name>
        <Model>Bed 2 Blinds Up</Model>
        <Note />
        <DName />
        <ObjectType>Task</ObjectType>
        <Category>9902</Category>
        <Procedure>
          <Target>9653</Target>
          <Function>Blind.Open</Function>
          <Parameters>
            <Param>0</Param>
          </Parameters>
        </Procedure>
        <Query>
          <Target>10168</Target>
          <Function>LoadsOn</Function>
          <Parameters>
            <Param>1</Param>
          </Parameters>
        </Query>
        <Adjust>
          <Target>0</Target>
          <Function />
          <Parameters />
        </Adjust>
        <Level>
          <Target>0</Target>
          <Function />
          <Parameters />
        </Level>
        <ParamTable>
          <Param ID="0">
            <val>9653</val>
          </Param>
          <Param ID="1">
            <array>
              <val>104</val>
              <val>105</val>
            </array>
          </Param>
        </ParamTable>
        <DependTable>
          <Param status="Load.GetLevel">1</Param>
        </DependTable>
      </Task>
      <Module>
        <Library Name="blind" Local="false" />
        <Library Name="vantage" Local="false" />
        <Scene>
          <Name>SceneProgram_9909</Name>
          <Type>procedure</Type>
          <Parameters />
          <ParameterValues />
          <FunctionBody>
            <FunctionCall disable="false">
              <Name>Blind_Open</Name>
              <Parameters>
                <Param>
                  <Label>Blind</Label>
                  <Constant Type="int">9653</Constant>
                  <ParamName>object</ParamName>
                </Param>
              </Parameters>
            </FunctionCall>
            <QueryCall>
              <Name>LoadsOn</Name>
              <Parameters>
                <Param>
                  <Label>Load</Label>
                  <Initializer>
                    <Constant Type="int">104</Constant>
                    <Constant Type="int">105</Constant>
                  </Initializer>
                  <ParamName>loads</ParamName>
                </Param>
              </Parameters>
            </QueryCall>
          </FunctionBody>
        </Scene>
      </Module>
    </Object>
    <Object>
      <Task VID="9910" Master="9722" MTime="">
        <Name>Bed 2 Blinds Up/Stop</Name>
        <Model>Bed 2 Blinds Up/Stop</Model>
        <Note />
        <DName />
        <ObjectType>Task</ObjectType>
        <Category>9902</Category>
        <Procedure>
          <Target>10176</Target>
          <Function>SceneProgram_9910</Function>
          <Parameters />
        </Procedure>
        <Query>
          <Target>10168</Target>
          <Function>LoadsOn</Function>
          <Parameters>
            <Param>0</Param>
          </Parameters>
        </Query>
        <Adjust>
          <Target>0</Target>
          <Function />
          <Parameters />
        </Adjust>
        <Level>
          <Target>0</Target>
          <Function />
          <Parameters />
        </Level>
        <ParamTable>
          <Param ID="0">
            <array>
              <val>104</val>
              <val>105</val>
            </array>
          </Param>
        </ParamTable>
        <DependTable>
          <Param status="Load.GetLevel">0</Param>
        </DependTable>
      </Task>
      <Module>
        <Library Name="blind" Local="false" />
        <Library Name="load" Local="false" />
        <Library Name="vantage" Local="false" />
        <Scene>
          <Name>SceneProgram_9910</Name>
          <Type>procedure</Type>
          <Parameters />
          <ParameterValues />
          <FunctionBody>
            <If disable="false">
              <LogicalExpression>
                <GivePrecedence>false</GivePrecedence>
                <Expanded>true</Expanded>
                <RelationalExpression>
                  <Operand>
                    <Label>Level</Label>
                    <FunctionCall>
                      <Name>Load_GetLevel</Name>
                      <Parameters>
                        <Param>
                          <Label>Load</Label>
                          <Constant Type="int">105</Constant>
                          <ParamName>object</ParamName>
                        </Param>
                      </Parameters>
                    </FunctionCall>
                  </Operand>
                  <Operator>eq</Operator>
                  <Operand>
                    <Label>Level</Label>
                    <Constant Type="float">100.0</Constant>
                  </Operand>
                </RelationalExpression>
              </LogicalExpression>
              <StatementList>
                <FunctionCall disable="false">
                  <Name>Blind_Stop</Name>
                  <Parameters>
                    <Param>
                      <Label>Blind</Label>
                      <Constant Type="int">9653</Constant>
                      <ParamName>object</ParamName>
                    </Param>
                  </Parameters>
                </FunctionCall>
              </StatementList>
              <Expanded>True</Expanded>
            </If>
            <Else disable="false">
              <StatementList>
                <FunctionCall disable="false">
                  <Name>Blind_Open</Name>
                  <Parameters>
                    <Param>
                      <Label>Blind</Label>
                      <Constant Type="int">9653</Constant>
                      <ParamName>object</ParamName>
                    </Param>
                  </Parameters>
                </FunctionCall>
              </StatementList>
              <Expanded>True</Expanded>
            </Else>
            <QueryCall>
              <Name>LoadsOn</Name>
              <Parameters>
                <Param>
                  <Label>Load</Label>
                  <Initializer>
                    <Constant Type="int">104</Constant>
                    <Constant Type="int">105</Constant>
                  </Initializer>
                  <ParamName>loads</ParamName>
                </Param>
              </Parameters>
            </QueryCall>
          </FunctionBody>
        </Scene>
      </Module>
    </Object>
    <Object>
      <Task VID="9915" Master="9722" MTime="">
        <Name>Living All Blinds down</Name>
        <Model>Living All Blinds down</Model>
        <Note />
        <DName />
        <ObjectType>Task</ObjectType>
        <Category>9905</Category>
        <Procedure>
          <Target>10398</Target>
          <Function>Blind.Close</Function>
          <Parameters>
            <Param>0</Param>
          </Parameters>
        </Procedure>
        <Query>
          <Target>10168</Target>
          <Function>LoadsAtLearnedLevels</Function>
          <Parameters>
            <Param>1</Param>
            <Param>2</Param>
            <Param>3</Param>
          </Parameters>
        </Query>
        <Adjust>
          <Target>0</Target>
          <Function />
          <Parameters />
        </Adjust>
        <Level>
          <Target>0</Target>
          <Function />
          <Parameters />
        </Level>
        <ParamTable>
          <Param ID="0">
            <val>10398</val>
          </Param>
          <Param ID="1">
            <array>
              <val>112</val>
              <val>113</val>
              <val>10389</val>
              <val>10387</val>
              <val>10388</val>
              <val>10386</val>
            </array>
          </Param>
          <Param ID="2" Fixed="true">
            <array>
              <val>0</val>
              <val>100</val>
              <val>0</val>
              <val>0</val>
              <val>100</val>
              <val>100</val>
            </array>
          </Param>
          <Param ID="3">
            <val>0</val>
          </Param>
        </ParamTable>
        <DependTable>
          <Param status="Load.GetLevel">1</Param>
        </DependTable>
      </Task>
      <Module>
        <Library Name="blind" Local="false" />
        <Library Name="vantage" Local="false" />
        <Scene>
          <Name>SceneProgram_9915</Name>
          <Type>procedure</Type>
          <Parameters />
          <ParameterValues />
          <FunctionBody>
            <FunctionCall disable="false">
              <Name>Blind_Close</Name>
              <Parameters>
                <Param>
                  <Label>Blind</Label>
                  <Constant Type="int">10398</Constant>
                  <ParamName>object</ParamName>
                </Param>
              </Parameters>
            </FunctionCall>
            <QueryCall>
              <Name>LoadsAtLearnedLevels</Name>
              <Parameters>
                <Param>
                  <Label>Load</Label>
                  <Initializer>
                    <Constant Type="int">112</Constant>
                    <Constant Type="int">113</Constant>
                    <Constant Type="int">10389</Constant>
                    <Constant Type="int">10387</Constant>
                    <Constant Type="int">10388</Constant>
                    <Constant Type="int">10386</Constant>
                  </Initializer>
                  <ParamName>loads</ParamName>
                </Param>
                <Param>
                  <Label>Level</Label>
                  <Initializer>
                    <Constant Type="float">0.0</Constant>
                    <Constant Type="float">100.0</Constant>
                    <Constant Type="float">0.0</Constant>
                    <Constant Type="float">0.0</Constant>
                    <Constant Type="float">100.0</Constant>
                    <Constant Type="float">100.0</Constant>
                  </Initializer>
                  <ParamName>levels</ParamName>
                </Param>
                <Param>
                  <Label>MemID</Label>
                  <Constant Type="int">0</Constant>
                  <ParamName>bufferid</ParamName>
                </Param>
              </Parameters>
            </QueryCall>
          </FunctionBody>
        </Scene>
      </Module>
    </Object>
    <Object>
      <Task VID="9916" Master="9722" MTime="">
        <Name>Living All Blinds Stop</Name>
        <Model>Living All Blinds Stop</Model>
        <Note />
        <DName />
        <ObjectType>Task</ObjectType>
        <Category>9905</Category>
        <Procedure>
          <Target>10398</Target>
          <Function>Blind.Stop</Function>
          <Parameters>
            <Param>0</Param>
          </Parameters>
        </Procedure>
        <Query>
          <Target>10168</Target>
          <Function>LoadsOn</Function>
          <Parameters>
            <Param>1</Param>
          </Parameters>
        </Query>
        <Adjust>
          <Target>0</Target>
          <Function />
          <Parameters />
        </Adjust>
        <Level>
          <Target>0</Target>
          <Function />
          <Parameters />
        </Level>
        <ParamTable>
          <Param ID="0">
            <val>10398</val>
          </Param>
          <Param ID="1">
            <array>
              <val>113</val>
              <val>10388</val>
              <val>10386</val>
            </array>
          </Param>
        </ParamTable>
        <DependTable>
          <Param status="Load.GetLevel">1</Param>
        </DependTable>
      </Task>
      <Module>
        <Library Name="blind" Local="false" />
        <Library Name="vantage" Local="false" />
        <Scene>
          <Name>SceneProgram_9916</Name>
          <Type>procedure</Type>
          <Parameters />
          <ParameterValues />
          <FunctionBody>
            <FunctionCall disable="false">
              <Name>Blind_Stop</Name>
              <Parameters>
                <Param>
                  <Label>Blind</Label>
                  <Constant Type="int">10398</Constant>
                  <ParamName>object</ParamName>
                </Param>
              </Parameters>
            </FunctionCall>
            <QueryCall>
              <Name>LoadsOn</Name>
              <Parameters>
                <Param>
                  <Label>Load</Label>
                  <Initializer>
                    <Constant Type="int">113</Constant>
                    <Constant Type="int">10388</Constant>
                    <Constant Type="int">10386</Constant>
                  </Initializer>
                  <ParamName>loads</ParamName>
                </Param>
              </Parameters>
            </QueryCall>
          </FunctionBody>
        </Scene>
      </Module>
    </Object>
    <Object>
      <Task VID="9917" Master="9722" MTime="">
        <Name>Living All Blinds Up</Name>
        <Model>Living All Blinds Up</Model>
        <Note />
        <DName />
        <ObjectType>Task</ObjectType>
        <Category>9905</Category>
        <Procedure>
          <Target>10398</Target>
          <Function>Blind.Open</Function>
          <Parameters>
            <Param>0</Param>
          </Parameters>
        </Procedure>
        <Query>
          <Target>10168</Target>
          <Function>LoadsOn</Function>
          <Parameters>
            <Param>1</Param>
          </Parameters>
        </Query>
        <Adjust>
          <Target>0</Target>
          <Function />
          <Parameters />
        </Adjust>
        <Level>
          <Target>0</Target>
          <Function />
          <Parameters />
        </Level>
        <ParamTable>
          <Param ID="0">
            <val>10398</val>
          </Param>
          <Param ID="1">
            <array>
              <val>112</val>
              <val>113</val>
              <val>10389</val>
              <val>10387</val>
              <val>10388</val>
              <val>10386</val>
            </array>
          </Param>
        </ParamTable>
        <DependTable>
          <Param status="Load.GetLevel">1</Param>
        </DependTable>
      </Task>
      <Module>
        <Library Name="blind" Local="false" />
        <Library Name="vantage" Local="false" />
        <Scene>
          <Name>SceneProgram_9917</Name>
          <Type>procedure</Type>
          <Parameters />
          <ParameterValues />
          <FunctionBody>
            <FunctionCall disable="false">
              <Name>Blind_Open</Name>
              <Parameters>
                <Param>
                  <Label>Blind</Label>
                  <Constant Type="int">10398</Constant>
                  <ParamName>object</ParamName>
                </Param>
              </Parameters>
            </FunctionCall>
            <QueryCall>
              <Name>LoadsOn</Name>
              <Parameters>
                <Param>
                  <Label>Load</Label>
                  <Initializer>
                    <Constant Type="int">112</Constant>
                    <Constant Type="int">113</Constant>
                    <Constant Type="int">10389</Constant>
                    <Constant Type="int">10387</Constant>
                    <Constant Type="int">10388</Constant>
                    <Constant Type="int">10386</Constant>
                  </Initializer>
                  <ParamName>loads</ParamName>
                </Param>
              </Parameters>
            </QueryCall>
          </FunctionBody>
        </Scene>
      </Module>
    </Object>
    <Object>
      <Task VID="9921" Master="9722" MTime="">
        <Name>Bed 2 Off</Name>
        <Model>Bed 2 Off</Model>
        <Note />
        <DName />
        <ObjectType>Task</ObjectType>
        <Category>9901</Category>
        <Procedure>
          <Target>10176</Target>
          <Function>SceneProgram_9921</Function>
          <Parameters>
            <Param>0</Param>
          </Parameters>
        </Procedure>
        <Query>
          <Target>10168</Target>
          <Function>LoadsOff</Function>
          <Parameters>
            <Param>1</Param>
          </Parameters>
        </Query>
        <Adjust>
          <Target>0</Target>
          <Function />
          <Parameters />
        </Adjust>
        <Level>
          <Target>0</Target>
          <Function />
          <Parameters />
        </Level>
        <ParamTable>
          <Param ID="0">
            <gmem Type="ref">10015</gmem>
          </Param>
          <Param ID="1">
            <array>
              <val>79</val>
              <val>57</val>
              <val>58</val>
              <val>56</val>
            </array>
          </Param>
        </ParamTable>
        <DependTable>
          <Param status="Load.GetLevel">1</Param>
        </DependTable>
      </Task>
      <Module>
        <Library Name="Lighting\Toggle" Local="true" />
        <Library Name="vantage" Local="false" />
        <Scene>
          <Name>SceneProgram_9921</Name>
          <Type>procedure</Type>
          <Parameters>
            <Param>
              <Reference>true</Reference>
              <Label>Number</Label>
              <Label>GMem</Label>
              <Name>param1</Name>
            </Param>
          </Parameters>
          <ParameterValues>
            <Param>
              <Label>GMem</Label>
              <Constant Type="int">10015</Constant>
              <ParamName>param1</ParamName>
            </Param>
          </ParameterValues>
          <FunctionBody>
            <FunctionCall disable="false">
              <Name>Off</Name>
              <Parameters>
                <Param>
                  <Label>Load</Label>
                  <Initializer>
                    <Constant Type="int">79</Constant>
                    <Constant Type="int">57</Constant>
                    <Constant Type="int">56</Constant>
                    <Constant Type="int">58</Constant>
                  </Initializer>
                  <ParamName>loads</ParamName>
                </Param>
                <Param>
                  <Label>Seconds</Label>
                  <Constant Type="float">2.0</Constant>
                  <ParamName>rampTime</ParamName>
                </Param>
              </Parameters>
            </FunctionCall>
            <Assignment disable="false">
              <Operand>
                <Identifier>param1</Identifier>
              </Operand>
              <Assign>equals</Assign>
              <Operand>
                <Label>Number</Label>
                <Constant Type="int">1</Constant>
              </Operand>
            </Assignment>
            <QueryCall>
              <Name>LoadsOff</Name>
              <Parameters>
                <Param>
                  <Label>Load</Label>
                  <Initializer>
                    <Constant Type="int">79</Constant>
                    <Constant Type="int">57</Constant>
                    <Constant Type="int">58</Constant>
                    <Constant Type="int">56</Constant>
                  </Initializer>
                  <ParamName>loads</ParamName>
                </Param>
              </Parameters>
            </QueryCall>
          </FunctionBody>
        </Scene>
      </Module>
    </Object>
    <Object>
      <Task VID="9922" Master="9722" MTime="">
        <Name>Bed 2 Scene 1</Name>
        <Model>Bed 2 Scene 1</Model>
        <Note />
        <DName />
        <ObjectType>Task</ObjectType>
        <Category>9901</Category>
        <Procedure>
          <Target>10165</Target>
          <Function>SceneProgram_9922</Function>
          <Parameters>
            <Param>0</Param>
          </Parameters>
        </Procedure>
        <Query>
          <Target>10172</Target>
          <Function>VariableAtSpecifiedValue</Function>
          <Parameters>
            <Param>1</Param>
            <Param>2</Param>
          </Parameters>
        </Query>
        <Adjust>
          <Target>10173</Target>
          <Function>AdjustLoads</Function>
          <Parameters>
            <Param>3</Param>
            <Param>4</Param>
            <Param>5</Param>
          </Parameters>
        </Adjust>
        <Level Max="100">
          <Target>10173</Target>
          <Function>AverageLoadLevel</Function>
          <Parameters>
            <Param>3</Param>
          </Parameters>
        </Level>
        <ParamTable>
          <Param ID="0">
            <gmem Type="ref">10015</gmem>
          </Param>
          <Param ID="1">
            <gmem>10015</gmem>
          </Param>
          <Param ID="2">
            <val>2</val>
          </Param>
          <Param ID="3">
            <array>
              <val>57</val>
              <val>56</val>
              <val>58</val>
            </array>
          </Param>
          <Param ID="4" Fixed="true">
            <val>5</val>
          </Param>
          <Param ID="5" Fixed="true">
            <val>10</val>
          </Param>
        </ParamTable>
        <DependTable>
          <Param>1</Param>
        </DependTable>
      </Task>
      <Module>
        <Library Name="Lighting\Toggle" Local="true" />
        <Library Name="vantage" Local="false" />
        <Scene>
          <Name>SceneProgram_9922</Name>
          <Type>procedure</Type>
          <Parameters>
            <Param>
              <Reference>true</Reference>
              <Label>Number</Label>
              <Label>GMem</Label>
              <Name>param1</Name>
            </Param>
          </Parameters>
          <ParameterValues>
            <Param>
              <Label>GMem</Label>
              <Constant Type="int">10015</Constant>
              <ParamName>param1</ParamName>
            </Param>
          </ParameterValues>
          <FunctionBody>
            <FunctionCall>
              <Name>On</Name>
              <Parameters>
                <Param>
                  <Label>Load</Label>
                  <Initializer>
                    <Constant Type="int">57</Constant>
                    <Constant Type="int">56</Constant>
                    <Constant Type="int">58</Constant>
                  </Initializer>
                  <ParamName>loads</ParamName>
                </Param>
                <Param>
                  <Label>Level</Label>
                  <Initializer>
                    <Constant Type="float">100.0</Constant>
                    <Constant Type="float">100.0</Constant>
                    <Constant Type="float">100.0</Constant>
                  </Initializer>
                  <ParamName>levels</ParamName>
                </Param>
                <Param>
                  <Label>Seconds</Label>
                  <Constant Type="float">2.0</Constant>
                  <ParamName>rampTime</ParamName>
                </Param>
                <Param>
                  <Label>bool</Label>
                  <Constant Type="bool">true</Constant>
                  <ParamName>learnable</ParamName>
                </Param>
                <Param>
                  <Label>MemID</Label>
                  <Constant Type="int">0</Constant>
                  <ParamName>bufferid</ParamName>
                </Param>
              </Parameters>
            </FunctionCall>
            <Assignment disable="false">
              <Operand>
                <Identifier>param1</Identifier>
              </Operand>
              <Assign>equals</Assign>
              <Operand>
                <Label>Number</Label>
                <Constant Type="int">2</Constant>
              </Operand>
            </Assignment>
            <QueryCall>
              <Name>VariableAtSpecifiedValue</Name>
              <Parameters>
                <Param>
                  <Label>GMem</Label>
                  <Constant Type="int">10015</Constant>
                  <ParamName>variable</ParamName>
                </Param>
                <Param>
                  <Label>Number</Label>
                  <Constant Type="int">2</Constant>
                  <ParamName>value</ParamName>
                </Param>
              </Parameters>
            </QueryCall>
          </FunctionBody>
        </Scene>
      </Module>
    </Object>
    <Object>
      <Task VID="9923" Master="9722" MTime="">
        <Name>Bed 2 Scene scroll</Name>
        <Model>Bed 2 Scene scroll</Model>
        <Note />
        <DName />
        <ObjectType>Task</ObjectType>
        <Category>9901</Category>
        <Procedure>
          <Target>10171</Target>
          <Function>CycleTasks</Function>
          <Parameters>
            <Param>0</Param>
            <Param>1</Param>
            <Param>2</Param>
          </Parameters>
        </Procedure>
        <Query>
          <Target>10172</Target>
          <Function>SetToVariable</Function>
          <Parameters>
            <Param>3</Param>
            <Param>4</Param>
          </Parameters>
        </Query>
        <Adjust>
          <Target>0</Target>
          <Function />
          <Parameters />
        </Adjust>
        <Level>
          <Target>0</Target>
          <Function />
          <Parameters />
        </Level>
        <ParamTable>
          <Param ID="0">
            <array>
              <val>9922</val>
              <val>10030</val>
              <val>10052</val>
            </array>
          </Param>
          <Param ID="1">
            <array>
              <val>1</val>
              <val>2</val>
              <val>3</val>
            </array>
          </Param>
          <Param ID="2">
            <val>0</val>
          </Param>
          <Param ID="3">
            <gmem>10015</gmem>
          </Param>
          <Param ID="4">
            <val>1</val>
          </Param>
        </ParamTable>
        <DependTable>
          <Param>3</Param>
        </DependTable>
      </Task>
      <Module>
        <Library Name="Programming\LaunchTasks" Local="true" />
        <Library Name="vantage" Local="false" />
        <Scene>
          <Name>SceneProgram_9923</Name>
          <Type>procedure</Type>
          <Parameters />
          <ParameterValues />
          <FunctionBody>
            <FunctionCall disable="false">
              <Name>CycleTasks</Name>
              <Parameters>
                <Param>
                  <Label>Task</Label>
                  <Initializer>
                    <Constant Type="int">9922</Constant>
                    <Constant Type="int">10030</Constant>
                    <Constant Type="int">10052</Constant>
                  </Initializer>
                  <ParamName>tasks</ParamName>
                </Param>
                <Param>
                  <Label>Number</Label>
                  <Initializer>
                    <Constant Type="int">1</Constant>
                    <Constant Type="int">2</Constant>
                    <Constant Type="int">3</Constant>
                  </Initializer>
                  <ParamName>orders</ParamName>
                </Param>
                <Param>
                  <Label>TriggerType</Label>
                  <Identifier>ButtonRelease</Identifier>
                  <ParamName>eventType</ParamName>
                </Param>
              </Parameters>
            </FunctionCall>
            <QueryCall>
              <Name>SetToVariable</Name>
              <Parameters>
                <Param>
                  <Label>GMem</Label>
                  <Constant Type="int">10015</Constant>
                  <ParamName>variable</ParamName>
                </Param>
                <Param>
                  <Label>QueryVariableType</Label>
                  <Identifier>Number</Identifier>
                  <ParamName>varType</ParamName>
                </Param>
              </Parameters>
            </QueryCall>
          </FunctionBody>
        </Scene>
      </Module>
    </Object>
    <Object>
      <Task VID="9924" Master="9722" MTime="">
        <Name>Bed 2 Reading</Name>
        <Model>Bed 2 Reading</Model>
        <Note />
        <DName />
        <ObjectType>Task</ObjectType>
        <Category>9901</Category>
        <Procedure>
          <Target>10175</Target>
          <Function>DimCycle</Function>
          <Parameters>
            <Param>0</Param>
            <Param>1</Param>
            <Param>2</Param>
            <Param>2</Param>
            <Param>3</Param>
            <Param>4</Param>
            <Param>5</Param>
            <Param>6</Param>
            <Param>7</Param>
          </Parameters>
        </Procedure>
        <Query>
          <Target>10168</Target>
          <Function>LoadsOn</Function>
          <Parameters>
            <Param>0</Param>
          </Parameters>
        </Query>
        <Adjust>
          <Target>10173</Target>
          <Function>AdjustLoads</Function>
          <Parameters>
            <Param>0</Param>
            <Param>3</Param>
            <Param>7</Param>
          </Parameters>
        </Adjust>
        <Level Max="100">
          <Target>10173</Target>
          <Function>AverageLoadLevel</Function>
          <Parameters>
            <Param>0</Param>
          </Parameters>
        </Level>
        <ParamTable>
          <Param ID="0">
            <array>
              <val>57</val>
            </array>
          </Param>
          <Param ID="1" Fixed="true">
            <array>
              <val>100</val>
            </array>
          </Param>
          <Param ID="2" Fixed="true">
            <val>2</val>
          </Param>
          <Param ID="3" Fixed="true">
            <val>5</val>
          </Param>
          <Param ID="4">
            <val>1</val>
          </Param>
          <Param ID="5">
            <val>0</val>
          </Param>
          <Param ID="6">
            <val>0</val>
          </Param>
          <Param ID="7" Fixed="true">
            <val>10</val>
          </Param>
        </ParamTable>
        <DependTable>
          <Param status="Load.GetLevel">0</Param>
        </DependTable>
      </Task>
      <Module>
        <Library Name="Lighting\Dim" Local="true" />
        <Library Name="vantage" Local="false" />
        <Scene>
          <Name>SceneProgram_9924</Name>
          <Type>procedure</Type>
          <Parameters />
          <ParameterValues />
          <FunctionBody>
            <FunctionCall disable="false">
              <Name>DimCycle</Name>
              <Parameters>
                <Param>
                  <Label>Load</Label>
                  <Initializer>
                    <Constant Type="int">57</Constant>
                  </Initializer>
                  <ParamName>loads</ParamName>
                </Param>
                <Param>
                  <Label>Level</Label>
                  <Initializer>
                    <Constant Type="float">100.0</Constant>
                  </Initializer>
                  <ParamName>levels</ParamName>
                </Param>
                <Param>
                  <Label>Seconds</Label>
                  <Constant Type="float">2.0</Constant>
                  <ParamName>rampTime</ParamName>
                </Param>
                <Param>
                  <Label>Seconds</Label>
                  <Constant Type="float">2.0</Constant>
                  <ParamName>fadeTime</ParamName>
                </Param>
                <Param>
                  <Label>Seconds</Label>
                  <Constant Type="float">5.0</Constant>
                  <ParamName>rampRate</ParamName>
                </Param>
                <Param>
                  <Label>bool</Label>
                  <Constant Type="bool">true</Constant>
                  <ParamName>trackLED</ParamName>
                </Param>
                <Param>
                  <Label>bool</Label>
                  <Constant Type="bool">false</Constant>
                  <ParamName>learnable</ParamName>
                </Param>
                <Param>
                  <Label>MemID</Label>
                  <Constant Type="int">0</Constant>
                  <ParamName>learnedLevels</ParamName>
                </Param>
                <Param>
                  <Label>Level</Label>
                  <Constant Type="float">10.0</Constant>
                  <ParamName>minLearnedLevel</ParamName>
                </Param>
              </Parameters>
            </FunctionCall>
            <QueryCall>
              <Name>LoadsOn</Name>
              <Parameters>
                <Param>
                  <Label>Load</Label>
                  <Initializer>
                    <Constant Type="int">57</Constant>
                  </Initializer>
                  <ParamName>loads</ParamName>
                </Param>
              </Parameters>
            </QueryCall>
          </FunctionBody>
        </Scene>
      </Module>
    </Object>
    <Object>
      <Task VID="9927" Master="9722" MTime="">
        <Name>Living Off</Name>
        <Model>Living Off</Model>
        <Note />
        <DName />
        <ObjectType>Task</ObjectType>
        <Category>9903</Category>
        <Procedure>
          <Target>10182</Target>
          <Function>SceneProgram_9927</Function>
          <Parameters>
            <Param>0</Param>
          </Parameters>
        </Procedure>
        <Query>
          <Target>10168</Target>
          <Function>LoadsOff</Function>
          <Parameters>
            <Param>1</Param>
          </Parameters>
        </Query>
        <Adjust>
          <Target>0</Target>
          <Function />
          <Parameters />
        </Adjust>
        <Level>
          <Target>0</Target>
          <Function />
          <Parameters />
        </Level>
        <ParamTable>
          <Param ID="0">
            <gmem Type="ref">10019</gmem>
          </Param>
          <Param ID="1">
            <array>
              <val>9307</val>
              <val>67</val>
              <val>66</val>
            </array>
          </Param>
        </ParamTable>
        <DependTable>
          <Param status="Load.GetLevel">1</Param>
        </DependTable>
      </Task>
      <Module>
        <Library Name="Lighting\Toggle" Local="true" />
        <Library Name="vantage" Local="false" />
        <Scene>
          <Name>SceneProgram_9927</Name>
          <Type>procedure</Type>
          <Parameters>
            <Param>
              <Reference>true</Reference>
              <Label>Number</Label>
              <Label>GMem</Label>
              <Name>param2</Name>
            </Param>
          </Parameters>
          <ParameterValues>
            <Param>
              <Label>GMem</Label>
              <Constant Type="int">10019</Constant>
              <ParamName>param2</ParamName>
            </Param>
          </ParameterValues>
          <FunctionBody>
            <FunctionCall disable="false">
              <Name>Off</Name>
              <Parameters>
                <Param>
                  <Label>Load</Label>
                  <Initializer>
                    <Constant Type="int">9307</Constant>
                    <Constant Type="int">67</Constant>
                    <Constant Type="int">66</Constant>
                  </Initializer>
                  <ParamName>loads</ParamName>
                </Param>
                <Param>
                  <Label>Seconds</Label>
                  <Constant Type="float">2.0</Constant>
                  <ParamName>rampTime</ParamName>
                </Param>
              </Parameters>
            </FunctionCall>
            <Assignment disable="false">
              <Operand>
                <Identifier>param2</Identifier>
              </Operand>
              <Assign>equals</Assign>
              <Operand>
                <Label>Number</Label>
                <Constant Type="int">1</Constant>
              </Operand>
            </Assignment>
            <QueryCall>
              <Name>LoadsOff</Name>
              <Parameters>
                <Param>
                  <Label>Load</Label>
                  <Initializer>
                    <Constant Type="int">9307</Constant>
                    <Constant Type="int">67</Constant>
                    <Constant Type="int">66</Constant>
                  </Initializer>
                  <ParamName>loads</ParamName>
                </Param>
              </Parameters>
            </QueryCall>
          </FunctionBody>
        </Scene>
      </Module>
    </Object>
    <Object>
      <Task VID="9929" Master="9722" MTime="">
        <Name>Living Scene 2</Name>
        <Model>Living Scene 2</Model>
        <Note />
        <DName />
        <ObjectType>Task</ObjectType>
        <Category>9903</Category>
        <Procedure>
          <Target>10182</Target>
          <Function>SceneProgram_9929</Function>
          <Parameters>
            <Param>0</Param>
          </Parameters>
        </Procedure>
        <Query>
          <Target>10172</Target>
          <Function>VariableAtSpecifiedValue</Function>
          <Parameters>
            <Param>1</Param>
            <Param>2</Param>
          </Parameters>
        </Query>
        <Adjust>
          <Target>10173</Target>
          <Function>AdjustLoads</Function>
          <Parameters>
            <Param>3</Param>
            <Param>4</Param>
            <Param>5</Param>
          </Parameters>
        </Adjust>
        <Level Max="100">
          <Target>10173</Target>
          <Function>AverageLoadLevel</Function>
          <Parameters>
            <Param>3</Param>
          </Parameters>
        </Level>
        <ParamTable>
          <Param ID="0">
            <gmem Type="ref">10019</gmem>
          </Param>
          <Param ID="1">
            <gmem>10019</gmem>
          </Param>
          <Param ID="2">
            <val>3</val>
          </Param>
          <Param ID="3">
            <array>
              <val>9307</val>
              <val>67</val>
              <val>66</val>
            </array>
          </Param>
          <Param ID="4" Fixed="true">
            <val>5</val>
          </Param>
          <Param ID="5" Fixed="true">
            <val>10</val>
          </Param>
        </ParamTable>
        <DependTable>
          <Param>1</Param>
        </DependTable>
      </Task>
      <Module>
        <Library Name="Lighting\Toggle" Local="true" />
        <Library Name="vantage" Local="false" />
        <Scene>
          <Name>SceneProgram_9929</Name>
          <Type>procedure</Type>
          <Parameters>
            <Param>
              <Reference>true</Reference>
              <Label>Number</Label>
              <Label>GMem</Label>
              <Name>param2</Name>
            </Param>
          </Parameters>
          <ParameterValues>
            <Param>
              <Label>GMem</Label>
              <Constant Type="int">10019</Constant>
              <ParamName>param2</ParamName>
            </Param>
          </ParameterValues>
          <FunctionBody>
            <FunctionCall>
              <Name>On</Name>
              <Parameters>
                <Param>
                  <Label>Load</Label>
                  <Initializer>
                    <Constant Type="int">9307</Constant>
                    <Constant Type="int">67</Constant>
                    <Constant Type="int">66</Constant>
                  </Initializer>
                  <ParamName>loads</ParamName>
                </Param>
                <Param>
                  <Label>Level</Label>
                  <Initializer>
                    <Constant Type="float">50.0</Constant>
                    <Constant Type="float">50.0</Constant>
                    <Constant Type="float">50.0</Constant>
                  </Initializer>
                  <ParamName>levels</ParamName>
                </Param>
                <Param>
                  <Label>Seconds</Label>
                  <Constant Type="float">2.0</Constant>
                  <ParamName>rampTime</ParamName>
                </Param>
                <Param>
                  <Label>bool</Label>
                  <Constant Type="bool">true</Constant>
                  <ParamName>learnable</ParamName>
                </Param>
                <Param>
                  <Label>MemID</Label>
                  <Constant Type="int">0</Constant>
                  <ParamName>bufferid</ParamName>
                </Param>
              </Parameters>
            </FunctionCall>
            <Assignment disable="false">
              <Operand>
                <Identifier>param2</Identifier>
              </Operand>
              <Assign>equals</Assign>
              <Operand>
                <Label>Number</Label>
                <Constant Type="int">3</Constant>
              </Operand>
            </Assignment>
            <QueryCall>
              <Name>VariableAtSpecifiedValue</Name>
              <Parameters>
                <Param>
                  <Label>GMem</Label>
                  <Constant Type="int">10019</Constant>
                  <ParamName>variable</ParamName>
                </Param>
                <Param>
                  <Label>Number</Label>
                  <Constant Type="int">3</Constant>
                  <ParamName>value</ParamName>
                </Param>
              </Parameters>
            </QueryCall>
          </FunctionBody>
        </Scene>
      </Module>
    </Object>
    <Object>
      <Task VID="9932" Master="9722" MTime="">
        <Name>Kitchen Off</Name>
        <Model>Kitchen Off</Model>
        <Note />
        <DName />
        <ObjectType>Task</ObjectType>
        <Category>9904</Category>
        <Procedure>
          <Target>10176</Target>
          <Function>SceneProgram_9932</Function>
          <Parameters>
            <Param>0</Param>
          </Parameters>
        </Procedure>
        <Query>
          <Target>10168</Target>
          <Function>LoadsOff</Function>
          <Parameters>
            <Param>1</Param>
          </Parameters>
        </Query>
        <Adjust>
          <Target>0</Target>
          <Function />
          <Parameters />
        </Adjust>
        <Level>
          <Target>0</Target>
          <Function />
          <Parameters />
        </Level>
        <ParamTable>
          <Param ID="0">
            <gmem Type="ref">10018</gmem>
          </Param>
          <Param ID="1">
            <array>
              <val>10384</val>
              <val>83</val>
              <val>10413</val>
              <val>70</val>
            </array>
          </Param>
        </ParamTable>
        <DependTable>
          <Param status="Load.GetLevel">1</Param>
        </DependTable>
      </Task>
      <Module>
        <Library Name="Lighting\Toggle" Local="true" />
        <Library Name="vantage" Local="false" />
        <Scene>
          <Name>SceneProgram_9932</Name>
          <Type>procedure</Type>
          <Parameters>
            <Param>
              <Reference>true</Reference>
              <Label>Number</Label>
              <Label>GMem</Label>
              <Name>param1</Name>
            </Param>
          </Parameters>
          <ParameterValues>
            <Param>
              <Label>GMem</Label>
              <Constant Type="int">10018</Constant>
              <ParamName>param1</ParamName>
            </Param>
          </ParameterValues>
          <FunctionBody>
            <FunctionCall disable="false">
              <Name>Off</Name>
              <Parameters>
                <Param>
                  <Label>Load</Label>
                  <Initializer>
                    <Constant Type="int">10384</Constant>
                    <Constant Type="int">83</Constant>
                    <Constant Type="int">10413</Constant>
                    <Constant Type="int">70</Constant>
                  </Initializer>
                  <ParamName>loads</ParamName>
                </Param>
                <Param>
                  <Label>Seconds</Label>
                  <Constant Type="float">2.0</Constant>
                  <ParamName>rampTime</ParamName>
                </Param>
              </Parameters>
            </FunctionCall>
            <Assignment disable="false">
              <Operand>
                <Identifier>param1</Identifier>
              </Operand>
              <Assign>equals</Assign>
              <Operand>
                <Label>Number</Label>
                <Constant Type="int">1</Constant>
              </Operand>
            </Assignment>
            <QueryCall>
              <Name>LoadsOff</Name>
              <Parameters>
                <Param>
                  <Label>Load</Label>
                  <Initializer>
                    <Constant Type="int">10384</Constant>
                    <Constant Type="int">83</Constant>
                    <Constant Type="int">10413</Constant>
                    <Constant Type="int">70</Constant>
                  </Initializer>
                  <ParamName>loads</ParamName>
                </Param>
              </Parameters>
            </QueryCall>
          </FunctionBody>
        </Scene>
      </Module>
    </Object>
    <Object>
      <Task VID="9933" Master="9722" MTime="">
        <Name>Kitchen Scene 1</Name>
        <Model>Kitchen Scene 1</Model>
        <Note />
        <DName />
        <ObjectType>Task</ObjectType>
        <Category>9904</Category>
        <Procedure>
          <Target>10176</Target>
          <Function>SceneProgram_9933</Function>
          <Parameters>
            <Param>0</Param>
          </Parameters>
        </Procedure>
        <Query>
          <Target>10172</Target>
          <Function>VariableAtSpecifiedValue</Function>
          <Parameters>
            <Param>1</Param>
            <Param>2</Param>
          </Parameters>
        </Query>
        <Adjust>
          <Target>0</Target>
          <Function />
          <Parameters />
        </Adjust>
        <Level>
          <Target>0</Target>
          <Function />
          <Parameters />
        </Level>
        <ParamTable>
          <Param ID="0">
            <gmem Type="ref">10018</gmem>
          </Param>
          <Param ID="1">
            <gmem>10018</gmem>
          </Param>
          <Param ID="2">
            <val>2</val>
          </Param>
        </ParamTable>
        <DependTable>
          <Param>1</Param>
        </DependTable>
      </Task>
      <Module>
        <Library Name="Lighting\Toggle" Local="true" />
        <Library Name="vantage" Local="false" />
        <Scene>
          <Name>SceneProgram_9933</Name>
          <Type>procedure</Type>
          <Parameters>
            <Param>
              <Reference>true</Reference>
              <Label>Number</Label>
              <Label>GMem</Label>
              <Name>param2</Name>
            </Param>
          </Parameters>
          <ParameterValues>
            <Param>
              <Label>GMem</Label>
              <Constant Type="int">10018</Constant>
              <ParamName>param2</ParamName>
            </Param>
          </ParameterValues>
          <FunctionBody>
            <FunctionCall disable="false">
              <Name>On</Name>
              <Parameters>
                <Param>
                  <Label>Load</Label>
                  <Initializer>
                    <Constant Type="int">10384</Constant>
                    <Constant Type="int">83</Constant>
                    <Constant Type="int">10413</Constant>
                    <Constant Type="int">70</Constant>
                  </Initializer>
                  <ParamName>loads</ParamName>
                </Param>
                <Param>
                  <Label>Level</Label>
                  <Initializer>
                    <Constant Type="float">100.0</Constant>
                    <Constant Type="float">100.0</Constant>
                    <Constant Type="float">100.0</Constant>
                    <Constant Type="float">100.0</Constant>
                  </Initializer>
                  <ParamName>levels</ParamName>
                </Param>
                <Param>
                  <Label>Seconds</Label>
                  <Constant Type="float">2.0</Constant>
                  <ParamName>rampTime</ParamName>
                </Param>
                <Param>
                  <Label>bool</Label>
                  <Constant Type="bool">true</Constant>
                  <ParamName>learnable</ParamName>
                </Param>
                <Param>
                  <Label>MemID</Label>
                  <Constant Type="int">0</Constant>
                  <ParamName>bufferid</ParamName>
                </Param>
              </Parameters>
            </FunctionCall>
            <Assignment disable="false">
              <Operand>
                <Identifier>param2</Identifier>
              </Operand>
              <Assign>equals</Assign>
              <Operand>
                <Label>Number</Label>
                <Constant Type="int">2</Constant>
              </Operand>
            </Assignment>
            <QueryCall>
              <Name>VariableAtSpecifiedValue</Name>
              <Parameters>
                <Param>
                  <Label>GMem</Label>
                  <Constant Type="int">10018</Constant>
                  <ParamName>variable</ParamName>
                </Param>
                <Param>
                  <Label>Number</Label>
                  <Constant Type="int">2</Constant>
                  <ParamName>value</ParamName>
                </Param>
              </Parameters>
            </QueryCall>
          </FunctionBody>
        </Scene>
      </Module>
    </Object>
    <Object>
      <Task VID="9936" Master="9722" MTime="">
        <Name>MVHR Control</Name>
        <Model>MVHR Control</Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Task</ObjectType>
        <Category>9741</Category>
        <Procedure>
          <Target>10177</Target>
          <Function>SceneProgram_9936</Function>
          <Parameters />
        </Procedure>
        <Query>
          <Target>0</Target>
          <Function />
          <Parameters />
        </Query>
        <Adjust>
          <Target>0</Target>
          <Function />
          <Parameters />
        </Adjust>
        <Level>
          <Target>0</Target>
          <Function />
          <Parameters />
        </Level>
        <ParamTable>
        </ParamTable>
        <DependTable>
        </DependTable>
      </Task>
      <Module>
        <Library Name="HVAC" Local="true" />
        <Library Name="load" Local="false" />
        <Library Name="vantage" Local="false" />
        <Scene>
          <Name>SceneProgram_9936</Name>
          <Type>procedure</Type>
          <Parameters />
          <ParameterValues />
          <FunctionBody>
            <If disable="false">
              <LogicalExpression>
                <GivePrecedence>false</GivePrecedence>
                <Expanded>true</Expanded>
                <LogicalExpression>
                  <GivePrecedence>false</GivePrecedence>
                  <Expanded>true</Expanded>
                  <RelationalExpression>
                    <Operand>
                      <Label>Level</Label>
                      <FunctionCall>
                        <Name>Load_GetLevel</Name>
                        <Parameters>
                          <Param>
                            <Label>Load</Label>
                            <Constant Type="int">70</Constant>
                            <ParamName>object</ParamName>
                          </Param>
                        </Parameters>
                      </FunctionCall>
                    </Operand>
                    <Operator>eq</Operator>
                    <Operand>
                      <Label>Level</Label>
                      <Constant Type="float">0.0</Constant>
                    </Operand>
                  </RelationalExpression>
                </LogicalExpression>
                <Operator>and</Operator>
                <LogicalExpression>
                  <GivePrecedence>false</GivePrecedence>
                  <Expanded>true</Expanded>
                  <LogicalExpression>
                    <GivePrecedence>false</GivePrecedence>
                    <Expanded>true</Expanded>
                    <RelationalExpression>
                      <Operand>
                        <Label>Level</Label>
                        <FunctionCall>
                          <Name>Load_GetLevel</Name>
                          <Parameters>
                            <Param>
                              <Label>Load</Label>
                              <Constant Type="int">83</Constant>
                              <ParamName>object</ParamName>
                            </Param>
                          </Parameters>
                        </FunctionCall>
                      </Operand>
                      <Operator>eq</Operator>
                      <Operand>
                        <Label>Level</Label>
                        <Constant Type="float">0.0</Constant>
                      </Operand>
                    </RelationalExpression>
                  </LogicalExpression>
                  <Operator>and</Operator>
                  <LogicalExpression>
                    <GivePrecedence>false</GivePrecedence>
                    <Expanded>true</Expanded>
                    <LogicalExpression>
                      <GivePrecedence>false</GivePrecedence>
                      <Expanded>true</Expanded>
                      <RelationalExpression>
                        <Operand>
                          <Label>Level</Label>
                          <FunctionCall>
                            <Name>Load_GetLevel</Name>
                            <Parameters>
                              <Param>
                                <Label>Load</Label>
                                <Constant Type="int">9306</Constant>
                                <ParamName>object</ParamName>
                              </Param>
                            </Parameters>
                          </FunctionCall>
                        </Operand>
                        <Operator>eq</Operator>
                        <Operand>
                          <Label>Level</Label>
                          <Constant Type="float">0.0</Constant>
                        </Operand>
                      </RelationalExpression>
                    </LogicalExpression>
                    <Operator>and</Operator>
                    <LogicalExpression>
                      <GivePrecedence>false</GivePrecedence>
                      <Expanded>true</Expanded>
                      <LogicalExpression>
                        <GivePrecedence>false</GivePrecedence>
                        <Expanded>true</Expanded>
                        <RelationalExpression>
                          <Operand>
                            <Label>Level</Label>
                            <FunctionCall>
                              <Name>Load_GetLevel</Name>
                              <Parameters>
                                <Param>
                                  <Label>Load</Label>
                                  <Constant Type="int">86</Constant>
                                  <ParamName>object</ParamName>
                                </Param>
                              </Parameters>
                            </FunctionCall>
                          </Operand>
                          <Operator>eq</Operator>
                          <Operand>
                            <Label>Level</Label>
                            <Constant Type="float">0.0</Constant>
                          </Operand>
                        </RelationalExpression>
                      </LogicalExpression>
                      <Operator>and</Operator>
                      <LogicalExpression>
                        <GivePrecedence>false</GivePrecedence>
                        <Expanded>true</Expanded>
                        <LogicalExpression>
                          <GivePrecedence>false</GivePrecedence>
                          <Expanded>true</Expanded>
                          <RelationalExpression>
                            <Operand>
                              <Label>Level</Label>
                              <FunctionCall>
                                <Name>Load_GetLevel</Name>
                                <Parameters>
                                  <Param>
                                    <Label>Load</Label>
                                    <Constant Type="int">84</Constant>
                                    <ParamName>object</ParamName>
                                  </Param>
                                </Parameters>
                              </FunctionCall>
                            </Operand>
                            <Operator>eq</Operator>
                            <Operand>
                              <Label>Level</Label>
                              <Constant Type="float">0.0</Constant>
                            </Operand>
                          </RelationalExpression>
                        </LogicalExpression>
                        <Operator>and</Operator>
                        <LogicalExpression>
                          <GivePrecedence>false</GivePrecedence>
                          <Expanded>true</Expanded>
                          <RelationalExpression>
                            <Operand>
                              <Label>Level</Label>
                              <FunctionCall>
                                <Name>Load_GetLevel</Name>
                                <Parameters>
                                  <Param>
                                    <Label>Load</Label>
                                    <Constant Type="int">71</Constant>
                                    <ParamName>object</ParamName>
                                  </Param>
                                </Parameters>
                              </FunctionCall>
                            </Operand>
                            <Operator>eq</Operator>
                            <Operand>
                              <Label>Level</Label>
                              <Constant Type="float">0.0</Constant>
                            </Operand>
                          </RelationalExpression>
                        </LogicalExpression>
                      </LogicalExpression>
                    </LogicalExpression>
                  </LogicalExpression>
                </LogicalExpression>
              </LogicalExpression>
              <StatementList>
                <FunctionCall disable="false">
                  <Name>WrapperSetOperationMode</Name>
                  <Parameters>
                    <Param>
                      <Label>Thermostat</Label>
                      <Initializer>
                        <Constant Type="int">7015</Constant>
                      </Initializer>
                      <ParamName>objects</ParamName>
                    </Param>
                    <Param>
                      <Label>Thermostat_OperationMode</Label>
                      <Identifier>Thermostat_OperationMode_Off</Identifier>
                      <ParamName>mode</ParamName>
                    </Param>
                  </Parameters>
                </FunctionCall>
              </StatementList>
              <Expanded>True</Expanded>
            </If>
            <Else disable="false">
              <StatementList>
                <FunctionCall disable="false">
                  <Name>WrapperSetOperationMode</Name>
                  <Parameters>
                    <Param>
                      <Label>Thermostat</Label>
                      <Initializer>
                        <Constant Type="int">7015</Constant>
                      </Initializer>
                      <ParamName>objects</ParamName>
                    </Param>
                    <Param>
                      <Label>Thermostat_OperationMode</Label>
                      <Identifier>Thermostat_OperationMode_Auto</Identifier>
                      <ParamName>mode</ParamName>
                    </Param>
                  </Parameters>
                </FunctionCall>
              </StatementList>
              <Expanded>True</Expanded>
            </Else>
          </FunctionBody>
        </Scene>
      </Module>
    </Object>
    <Object>
      <Timer VID="9937" Master="9722" MTime="">
        <Name>MVHR Timer</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Timer</ObjectType>
        <Category>9741</Category>
        <Time>9936</Time>
        <ConfigDisabled>false</ConfigDisabled>
        <Recurring>
          <Recurrence>
            <Minute>
              <Interval>5</Interval>
            </Minute>
          </Recurrence>
        </Recurring>
      </Timer>
    </Object>
    <Object>
      <Task VID="9938" Master="9722" MTime="">
        <Name>Holiday Toggle</Name>
        <Model>Holiday Toggle</Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Task</ObjectType>
        <Category>9876</Category>
        <Procedure>
          <Target>10176</Target>
          <Function>SceneProgram_9938</Function>
          <Parameters>
            <Param>0</Param>
          </Parameters>
        </Procedure>
        <Query>
          <Target>0</Target>
          <Function />
          <Parameters />
        </Query>
        <Adjust>
          <Target>0</Target>
          <Function />
          <Parameters />
        </Adjust>
        <Level>
          <Target>0</Target>
          <Function />
          <Parameters />
        </Level>
        <ParamTable>
          <Param ID="0">
            <gmem Type="ref">9939</gmem>
          </Param>
        </ParamTable>
        <DependTable>
        </DependTable>
      </Task>
      <Module>
        <Library Name="Security\Vacation" Local="true" />
        <Library Name="vantage" Local="false" />
        <Scene>
          <Name>SceneProgram_9938</Name>
          <Type>procedure</Type>
          <Parameters>
            <Param>
              <Reference>true</Reference>
              <Label>bool</Label>
              <Label>GMem</Label>
              <Name>param2</Name>
            </Param>
          </Parameters>
          <ParameterValues>
            <Param>
              <Label>GMem</Label>
              <Constant Type="int">9939</Constant>
              <ParamName>param2</ParamName>
            </Param>
          </ParameterValues>
          <FunctionBody>
            <Assignment disable="false">
              <Operand>
                <Identifier>param2</Identifier>
              </Operand>
              <Assign>equals</Assign>
              <Operand>
                <Label>bool</Label>
                <Constant Type="bool">true</Constant>
              </Operand>
            </Assignment>
            <FunctionCall>
              <Name>RandomVacation</Name>
              <Parameters>
                <Param>
                  <Label>Load</Label>
                  <Initializer>
                    <Constant Type="int">79</Constant>
                    <Constant Type="int">9307</Constant>
                    <Constant Type="int">83</Constant>
                    <Constant Type="int">70</Constant>
                    <Constant Type="int">67</Constant>
                    <Constant Type="int">66</Constant>
                    <Constant Type="int">55</Constant>
                    <Constant Type="int">10197</Constant>
                    <Constant Type="int">53</Constant>
                    <Constant Type="int">54</Constant>
                    <Constant Type="int">86</Constant>
                    <Constant Type="int">9306</Constant>
                    <Constant Type="int">57</Constant>
                    <Constant Type="int">56</Constant>
                    <Constant Type="int">58</Constant>
                    <Constant Type="int">84</Constant>
                    <Constant Type="int">71</Constant>
                  </Initializer>
                  <ParamName>loads</ParamName>
                </Param>
                <Param>
                  <Label>DayTime</Label>
                  <Constant Type="long">25200</Constant>
                  <ParamName>startMorning</ParamName>
                </Param>
                <Param>
                  <Label>TimeOffset</Label>
                  <Constant Type="int">10800</Constant>
                  <ParamName>stopMorning</ParamName>
                </Param>
                <Param>
                  <Label>TimeOffset</Label>
                  <Constant Type="int">-10800</Constant>
                  <ParamName>startEvening</ParamName>
                </Param>
                <Param>
                  <Label>DayTime</Label>
                  <Constant Type="long">79200</Constant>
                  <ParamName>stopEvening</ParamName>
                </Param>
                <Param>
                  <Label>Seconds</Label>
                  <Constant Type="float">1.0</Constant>
                  <ParamName>rampTime</ParamName>
                </Param>
                <Param>
                  <Label>Seconds</Label>
                  <Constant Type="float">3.0</Constant>
                  <ParamName>fadeTime</ParamName>
                </Param>
                <Param>
                  <Label>Level</Label>
                  <Constant Type="float">100.0</Constant>
                  <ParamName>level</ParamName>
                </Param>
                <Param>
                  <Label>Number</Label>
                  <Constant Type="int">15</Constant>
                  <ParamName>cRate</ParamName>
                </Param>
                <Param>
                  <Label>Number</Label>
                  <Constant Type="int">15</Constant>
                  <ParamName>prob</ParamName>
                </Param>
                <Param>
                  <Label>Number</Label>
                  <Constant Type="int">5</Constant>
                  <ParamName>tWind</ParamName>
                </Param>
              </Parameters>
            </FunctionCall>
            <Assignment disable="false">
              <Operand>
                <Identifier>param2</Identifier>
              </Operand>
              <Assign>equals</Assign>
              <Operand>
                <Label>bool</Label>
                <Constant Type="bool">false</Constant>
              </Operand>
            </Assignment>
          </FunctionBody>
        </Scene>
      </Module>
    </Object>
    <Object>
      <GMem VID="9939" Master="9722" MTime="">
        <Name>Holiday Mode Active</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>GMem</ObjectType>
        <Category>9876</Category>
        <data Fixed="false">
          <val>0</val>
        </data>
        <Persistent>true</Persistent>
        <Tag object="false">bool</Tag>
      </GMem>
    </Object>
    <Object>
      <Task VID="9940" Master="9722" MTime="">
        <Name>Stop Holiday Mode</Name>
        <Model>Stop Holiday Mode</Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Task</ObjectType>
        <Category>9876</Category>
        <Procedure>
          <Target>10177</Target>
          <Function>SceneProgram_9940</Function>
          <Parameters>
            <Param>0</Param>
          </Parameters>
        </Procedure>
        <Query>
          <Target>0</Target>
          <Function />
          <Parameters />
        </Query>
        <Adjust>
          <Target>0</Target>
          <Function />
          <Parameters />
        </Adjust>
        <Level>
          <Target>0</Target>
          <Function />
          <Parameters />
        </Level>
        <ParamTable>
          <Param ID="0">
            <gmem Type="ref">9939</gmem>
          </Param>
        </ParamTable>
        <DependTable>
        </DependTable>
      </Task>
      <Module>
        <Library Name="Programming\LaunchTasks" Local="true" />
        <Library Name="vantage" Local="false" />
        <Scene>
          <Name>SceneProgram_9940</Name>
          <Type>procedure</Type>
          <Parameters>
            <Param>
              <Reference>true</Reference>
              <Label>bool</Label>
              <Label>GMem</Label>
              <Name>param1</Name>
            </Param>
          </Parameters>
          <ParameterValues>
            <Param>
              <Label>GMem</Label>
              <Constant Type="int">9939</Constant>
              <ParamName>param1</ParamName>
            </Param>
          </ParameterValues>
          <FunctionBody>
            <If disable="false">
              <LogicalExpression>
                <GivePrecedence>false</GivePrecedence>
                <Expanded>true</Expanded>
                <RelationalExpression>
                  <Operand>
                    <Label>bool</Label>
                    <Identifier>param1</Identifier>
                  </Operand>
                  <Operator>eq</Operator>
                  <Operand>
                    <Label>bool</Label>
                    <Constant Type="bool">true</Constant>
                  </Operand>
                </RelationalExpression>
              </LogicalExpression>
              <StatementList>
                <FunctionCall disable="false">
                  <Name>LaunchTask</Name>
                  <Parameters>
                    <Param>
                      <Label>Task</Label>
                      <Initializer>
                        <Constant Type="int">9938</Constant>
                      </Initializer>
                      <ParamName>tasks</ParamName>
                    </Param>
                    <Param>
                      <Label>TriggerType</Label>
                      <Identifier>ButtonRelease</Identifier>
                      <ParamName>eventType</ParamName>
                    </Param>
                    <Param>
                      <Label>Number</Label>
                      <Constant Type="int">1</Constant>
                      <ParamName>param1</ParamName>
                    </Param>
                  </Parameters>
                </FunctionCall>
              </StatementList>
              <Expanded>True</Expanded>
            </If>
          </FunctionBody>
        </Scene>
      </Module>
    </Object>
    <Object>
      <Task VID="9942" Master="9722" MTime="">
        <Name>Smoke Alarm</Name>
        <Model>Smoke Alarm</Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Task</ObjectType>
        <Category>9741</Category>
        <Procedure>
          <Target>10181</Target>
          <Function>SceneProgram_9942</Function>
          <Parameters>
            <Param>0</Param>
          </Parameters>
        </Procedure>
        <Query>
          <Target>0</Target>
          <Function />
          <Parameters />
        </Query>
        <Adjust>
          <Target>0</Target>
          <Function />
          <Parameters />
        </Adjust>
        <Level>
          <Target>0</Target>
          <Function />
          <Parameters />
        </Level>
        <ParamTable>
          <Param ID="0">
            <gmem Type="ref">9943</gmem>
          </Param>
        </ParamTable>
        <DependTable>
        </DependTable>
      </Task>
      <Module>
        <Library Name="ledstyle" Local="false" />
        <Library Name="Audio Video\Theater" Local="true" />
        <Library Name="blind" Local="false" />
        <Library Name="Lighting\Toggle" Local="true" />
        <Library Name="vantage" Local="false" />
        <Scene>
          <Name>SceneProgram_9942</Name>
          <Type>procedure</Type>
          <Parameters>
            <Param>
              <Reference>true</Reference>
              <Label>bool</Label>
              <Label>GMem</Label>
              <Name>param2</Name>
            </Param>
          </Parameters>
          <ParameterValues>
            <Param>
              <Label>GMem</Label>
              <Constant Type="int">9943</Constant>
              <ParamName>param2</ParamName>
            </Param>
          </ParameterValues>
          <FunctionBody>
            <Assignment disable="false">
              <Operand>
                <Identifier>param2</Identifier>
              </Operand>
              <Assign>equals</Assign>
              <Operand>
                <Label>bool</Label>
                <Constant Type="bool">true</Constant>
              </Operand>
            </Assignment>
            <FunctionCall disable="false">
              <Name>On</Name>
              <Parameters>
                <Param>
                  <Label>Load</Label>
                  <Initializer>
                    <Constant Type="int">79</Constant>
                    <Constant Type="int">9307</Constant>
                    <Constant Type="int">67</Constant>
                    <Constant Type="int">66</Constant>
                    <Constant Type="int">10384</Constant>
                    <Constant Type="int">83</Constant>
                    <Constant Type="int">10413</Constant>
                    <Constant Type="int">70</Constant>
                    <Constant Type="int">55</Constant>
                    <Constant Type="int">10197</Constant>
                    <Constant Type="int">53</Constant>
                    <Constant Type="int">54</Constant>
                    <Constant Type="int">10383</Constant>
                    <Constant Type="int">86</Constant>
                    <Constant Type="int">9306</Constant>
                    <Constant Type="int">58</Constant>
                    <Constant Type="int">57</Constant>
                    <Constant Type="int">56</Constant>
                    <Constant Type="int">84</Constant>
                    <Constant Type="int">71</Constant>
                  </Initializer>
                  <ParamName>loads</ParamName>
                </Param>
                <Param>
                  <Label>Level</Label>
                  <Initializer>
                    <Constant Type="float">100.0</Constant>
                    <Constant Type="float">100.0</Constant>
                    <Constant Type="float">100.0</Constant>
                    <Constant Type="float">100.0</Constant>
                    <Constant Type="float">100.0</Constant>
                    <Constant Type="float">100.0</Constant>
                    <Constant Type="float">100.0</Constant>
                    <Constant Type="float">100.0</Constant>
                    <Constant Type="float">100.0</Constant>
                    <Constant Type="float">100.0</Constant>
                    <Constant Type="float">100.0</Constant>
                    <Constant Type="float">100.0</Constant>
                    <Constant Type="float">100.0</Constant>
                    <Constant Type="float">100.0</Constant>
                    <Constant Type="float">100.0</Constant>
                    <Constant Type="float">100.0</Constant>
                    <Constant Type="float">100.0</Constant>
                    <Constant Type="float">100.0</Constant>
                    <Constant Type="float">100.0</Constant>
                    <Constant Type="float">100.0</Constant>
                  </Initializer>
                  <ParamName>levels</ParamName>
                </Param>
                <Param>
                  <Label>Seconds</Label>
                  <Constant Type="float">1.0</Constant>
                  <ParamName>rampTime</ParamName>
                </Param>
                <Param>
                  <Label>bool</Label>
                  <Constant Type="bool">false</Constant>
                  <ParamName>learnable</ParamName>
                </Param>
                <Param>
                  <Label>MemID</Label>
                  <Constant Type="int">0</Constant>
                  <ParamName>bufferid</ParamName>
                </Param>
              </Parameters>
            </FunctionCall>
            <FunctionCall disable="false">
              <Name>On</Name>
              <Parameters>
                <Param>
                  <Label>Load</Label>
                  <Initializer>
                    <Constant Type="int">344</Constant>
                  </Initializer>
                  <ParamName>loads</ParamName>
                </Param>
                <Param>
                  <Label>Level</Label>
                  <Initializer>
                    <Constant Type="float">100.0</Constant>
                  </Initializer>
                  <ParamName>levels</ParamName>
                </Param>
                <Param>
                  <Label>Seconds</Label>
                  <Constant Type="float">0.0</Constant>
                  <ParamName>rampTime</ParamName>
                </Param>
                <Param>
                  <Label>bool</Label>
                  <Constant Type="bool">false</Constant>
                  <ParamName>learnable</ParamName>
                </Param>
                <Param>
                  <Label>MemID</Label>
                  <Constant Type="int">1</Constant>
                  <ParamName>bufferid</ParamName>
                </Param>
              </Parameters>
            </FunctionCall>
            <FunctionCall disable="false">
              <Name>Blind_Open</Name>
              <Parameters>
                <Param>
                  <Label>Blind</Label>
                  <Constant Type="int">10116</Constant>
                  <ParamName>object</ParamName>
                </Param>
              </Parameters>
            </FunctionCall>
            <FunctionCall disable="false">
              <Name>TurnPowerOff</Name>
              <Parameters>
                <Param>
                  <Label>Power</Label>
                  <Initializer>
                    <Constant Type="int">10461</Constant>
                    <Constant Type="int">10465</Constant>
                    <Constant Type="int">10467</Constant>
                    <Constant Type="int">10459</Constant>
                    <Constant Type="int">10471</Constant>
                    <Constant Type="int">10463</Constant>
                    <Constant Type="int">10469</Constant>
                  </Initializer>
                  <ParamName>objects</ParamName>
                </Param>
              </Parameters>
            </FunctionCall>
            <FunctionCall disable="false">
              <Name>LEDStyle_SetMode</Name>
              <Parameters>
                <Param>
                  <Label>LEDStyle</Label>
                  <Constant Type="int">120</Constant>
                  <ParamName>object</ParamName>
                </Param>
                <Param>
                  <Label>Number</Label>
                  <Constant Type="int">2</Constant>
                  <ParamName>mode</ParamName>
                </Param>
              </Parameters>
            </FunctionCall>
          </FunctionBody>
        </Scene>
      </Module>
    </Object>
    <Object>
      <GMem VID="9943" Master="9722" MTime="">
        <Name>Smoke Alarm On</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>GMem</ObjectType>
        <Category>9741</Category>
        <data Fixed="false">
          <val>0</val>
        </data>
        <Persistent>true</Persistent>
        <Tag object="false">bool</Tag>
      </GMem>
    </Object>
    <Object>
      <Task VID="9951" Master="9722" MTime="">
        <Name>Water Shut Off</Name>
        <Model>Water Shut Off</Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Task</ObjectType>
        <Category>9741</Category>
        <Procedure>
          <Target>10177</Target>
          <Function>SceneProgram_9951</Function>
          <Parameters />
        </Procedure>
        <Query>
          <Target>10168</Target>
          <Function>LoadsOn</Function>
          <Parameters>
            <Param>0</Param>
          </Parameters>
        </Query>
        <Adjust>
          <Target>0</Target>
          <Function />
          <Parameters />
        </Adjust>
        <Level>
          <Target>0</Target>
          <Function />
          <Parameters />
        </Level>
        <ParamTable>
          <Param ID="0">
            <array>
              <val>343</val>
            </array>
          </Param>
        </ParamTable>
        <DependTable>
          <Param status="Load.GetLevel">0</Param>
        </DependTable>
      </Task>
      <Module>
        <Library Name="Lighting\Toggle" Local="true" />
        <Library Name="load" Local="false" />
        <Library Name="vantage" Local="false" />
        <Scene>
          <Name>SceneProgram_9951</Name>
          <Type>procedure</Type>
          <Parameters />
          <ParameterValues />
          <FunctionBody>
            <If disable="false">
              <LogicalExpression>
                <GivePrecedence>false</GivePrecedence>
                <Expanded>true</Expanded>
                <RelationalExpression>
                  <Operand>
                    <Label>Level</Label>
                    <FunctionCall>
                      <Name>Load_GetLevel</Name>
                      <Parameters>
                        <Param>
                          <Label>Load</Label>
                          <Constant Type="int">343</Constant>
                          <ParamName>object</ParamName>
                        </Param>
                      </Parameters>
                    </FunctionCall>
                  </Operand>
                  <Operator>eq</Operator>
                  <Operand>
                    <Label>Level</Label>
                    <Constant Type="float">100.0</Constant>
                  </Operand>
                </RelationalExpression>
              </LogicalExpression>
              <StatementList>
                <FunctionCall disable="false">
                  <Name>Off</Name>
                  <Parameters>
                    <Param>
                      <Label>Load</Label>
                      <Initializer>
                        <Constant Type="int">343</Constant>
                      </Initializer>
                      <ParamName>loads</ParamName>
                    </Param>
                    <Param>
                      <Label>Seconds</Label>
                      <Constant Type="float">0.0</Constant>
                      <ParamName>rampTime</ParamName>
                    </Param>
                  </Parameters>
                </FunctionCall>
              </StatementList>
              <Expanded>True</Expanded>
            </If>
            <Else disable="false">
              <StatementList>
                <FunctionCall disable="false">
                  <Name>On</Name>
                  <Parameters>
                    <Param>
                      <Label>Load</Label>
                      <Initializer>
                        <Constant Type="int">343</Constant>
                      </Initializer>
                      <ParamName>loads</ParamName>
                    </Param>
                    <Param>
                      <Label>Level</Label>
                      <Initializer>
                        <Constant Type="float">100.0</Constant>
                      </Initializer>
                      <ParamName>levels</ParamName>
                    </Param>
                    <Param>
                      <Label>Seconds</Label>
                      <Constant Type="float">0.0</Constant>
                      <ParamName>rampTime</ParamName>
                    </Param>
                    <Param>
                      <Label>bool</Label>
                      <Constant Type="bool">false</Constant>
                      <ParamName>learnable</ParamName>
                    </Param>
                    <Param>
                      <Label>MemID</Label>
                      <Constant Type="int">0</Constant>
                      <ParamName>bufferid</ParamName>
                    </Param>
                  </Parameters>
                </FunctionCall>
              </StatementList>
              <Expanded>True</Expanded>
            </Else>
            <QueryCall>
              <Name>LoadsOn</Name>
              <Parameters>
                <Param>
                  <Label>Load</Label>
                  <Initializer>
                    <Constant Type="int">343</Constant>
                  </Initializer>
                  <ParamName>loads</ParamName>
                </Param>
              </Parameters>
            </QueryCall>
          </FunctionBody>
        </Scene>
      </Module>
    </Object>
    <Object>
      <Task VID="9954" Master="9722" MTime="">
        <Name>Master Home Off</Name>
        <Model>Master Home Off</Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Task</ObjectType>
        <Category>9885</Category>
        <Procedure>
          <Target>10183</Target>
          <Function>SceneProgram_9954</Function>
          <Parameters />
        </Procedure>
        <Query>
          <Target>10170</Target>
          <Function>TaskQueryState</Function>
          <Parameters>
            <Param>0</Param>
          </Parameters>
        </Query>
        <Adjust>
          <Target>0</Target>
          <Function />
          <Parameters />
        </Adjust>
        <Level>
          <Target>0</Target>
          <Function />
          <Parameters />
        </Level>
        <ParamTable>
          <Param ID="0">
            <array>
              <val>9927</val>
              <val>9915</val>
              <val>9932</val>
              <val>9887</val>
              <val>9897</val>
              <val>722</val>
              <val>9866</val>
            </array>
          </Param>
        </ParamTable>
        <DependTable>
          <Param status="Task.GetState">0</Param>
        </DependTable>
      </Task>
      <Module>
        <Library Name="Audio Video\Theater" Local="true" />
        <Library Name="Lighting\Toggle" Local="true" />
        <Library Name="Programming\LaunchTasks" Local="true" />
        <Library Name="vantage" Local="false" />
        <Scene>
          <Name>SceneProgram_9954</Name>
          <Type>procedure</Type>
          <Parameters />
          <ParameterValues />
          <FunctionBody>
            <FunctionCall disable="false">
              <Name>LaunchTask</Name>
              <Parameters>
                <Param>
                  <Label>Task</Label>
                  <Initializer>
                    <Constant Type="int">9927</Constant>
                    <Constant Type="int">9915</Constant>
                    <Constant Type="int">9932</Constant>
                    <Constant Type="int">9887</Constant>
                    <Constant Type="int">9898</Constant>
                    <Constant Type="int">9866</Constant>
                    <Constant Type="int">722</Constant>
                  </Initializer>
                  <ParamName>tasks</ParamName>
                </Param>
                <Param>
                  <Label>TriggerType</Label>
                  <Identifier>ButtonRelease</Identifier>
                  <ParamName>eventType</ParamName>
                </Param>
                <Param>
                  <Label>Number</Label>
                  <Constant Type="int">1</Constant>
                  <ParamName>param1</ParamName>
                </Param>
              </Parameters>
            </FunctionCall>
            <FunctionCall disable="false">
              <Name>Off</Name>
              <Parameters>
                <Param>
                  <Label>Load</Label>
                  <Initializer>
                    <Constant Type="int">79</Constant>
                  </Initializer>
                  <ParamName>loads</ParamName>
                </Param>
                <Param>
                  <Label>Seconds</Label>
                  <Constant Type="float">2.0</Constant>
                  <ParamName>rampTime</ParamName>
                </Param>
              </Parameters>
            </FunctionCall>
            <FunctionCall disable="false">
              <Name>TurnPowerOff</Name>
              <Parameters>
                <Param>
                  <Label>Power</Label>
                  <Initializer>
                    <Constant Type="int">10461</Constant>
                    <Constant Type="int">10465</Constant>
                    <Constant Type="int">10467</Constant>
                    <Constant Type="int">10459</Constant>
                    <Constant Type="int">10471</Constant>
                    <Constant Type="int">10469</Constant>
                  </Initializer>
                  <ParamName>objects</ParamName>
                </Param>
              </Parameters>
            </FunctionCall>
            <QueryCall>
              <Name>TaskQueryState</Name>
              <Parameters>
                <Param>
                  <Label>Task</Label>
                  <Initializer>
                    <Constant Type="int">9927</Constant>
                    <Constant Type="int">9915</Constant>
                    <Constant Type="int">9932</Constant>
                    <Constant Type="int">9887</Constant>
                    <Constant Type="int">9897</Constant>
                    <Constant Type="int">722</Constant>
                    <Constant Type="int">9866</Constant>
                  </Initializer>
                  <ParamName>objects</ParamName>
                </Param>
              </Parameters>
            </QueryCall>
          </FunctionBody>
        </Scene>
      </Module>
    </Object>
    <Object>
      <Task VID="9955" Master="9722" MTime="">
        <Name>Bed 2 All Off</Name>
        <Model>Bed 2 All Off</Model>
        <Note />
        <DName />
        <ObjectType>Task</ObjectType>
        <Category>9901</Category>
        <Procedure>
          <Target>10440</Target>
          <Function>SceneProgram_9955</Function>
          <Parameters />
        </Procedure>
        <Query>
          <Target>10170</Target>
          <Function>TaskQueryState</Function>
          <Parameters>
            <Param>0</Param>
          </Parameters>
        </Query>
        <Adjust>
          <Target>0</Target>
          <Function />
          <Parameters />
        </Adjust>
        <Level>
          <Target>0</Target>
          <Function />
          <Parameters />
        </Level>
        <ParamTable>
          <Param ID="0">
            <array>
              <val>9927</val>
              <val>9915</val>
              <val>9932</val>
              <val>9887</val>
              <val>9897</val>
              <val>722</val>
              <val>9866</val>
            </array>
          </Param>
        </ParamTable>
        <DependTable>
          <Param status="Task.GetState">0</Param>
        </DependTable>
      </Task>
      <Module>
        <Library Name="blind" Local="false" />
        <Library Name="Audio Video\Theater" Local="true" />
        <Library Name="Programming\LaunchTasks" Local="true" />
        <Library Name="vantage" Local="false" />
        <Scene>
          <Name>SceneProgram_9955</Name>
          <Type>procedure</Type>
          <Parameters />
          <ParameterValues />
          <FunctionBody>
            <FunctionCall disable="false">
              <Name>LaunchTaskWithCurrentEvent</Name>
              <Parameters>
                <Param>
                  <Label>Task</Label>
                  <Initializer>
                    <Constant Type="int">9921</Constant>
                  </Initializer>
                  <ParamName>tasks</ParamName>
                </Param>
              </Parameters>
            </FunctionCall>
            <FunctionCall disable="false">
              <Name>TurnPowerOff</Name>
              <Parameters>
                <Param>
                  <Label>Power</Label>
                  <Initializer>
                    <Constant Type="int">10463</Constant>
                  </Initializer>
                  <ParamName>objects</ParamName>
                </Param>
              </Parameters>
            </FunctionCall>
            <FunctionCall disable="false">
              <Name>Blind_Close</Name>
              <Parameters>
                <Param>
                  <Label>Blind</Label>
                  <Constant Type="int">9653</Constant>
                  <ParamName>object</ParamName>
                </Param>
              </Parameters>
            </FunctionCall>
            <QueryCall>
              <Name>TaskQueryState</Name>
              <Parameters>
                <Param>
                  <Label>Task</Label>
                  <Initializer>
                    <Constant Type="int">9927</Constant>
                    <Constant Type="int">9915</Constant>
                    <Constant Type="int">9932</Constant>
                    <Constant Type="int">9887</Constant>
                    <Constant Type="int">9897</Constant>
                    <Constant Type="int">722</Constant>
                    <Constant Type="int">9866</Constant>
                  </Initializer>
                  <ParamName>objects</ParamName>
                </Param>
              </Parameters>
            </QueryCall>
          </FunctionBody>
        </Scene>
      </Module>
    </Object>
    <Object>
      <Task VID="9956" Master="9722" MTime="">
        <Name>Learn All Custom Scenes</Name>
        <Model>Learn All Custom Scenes</Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Task</ObjectType>
        <Category>9741</Category>
        <Procedure>
          <Target>10171</Target>
          <Function>LaunchTask</Function>
          <Parameters>
            <Param>0</Param>
            <Param>1</Param>
            <Param>2</Param>
          </Parameters>
        </Procedure>
        <Query>
          <Target>10170</Target>
          <Function>TaskQueryState</Function>
          <Parameters>
            <Param>0</Param>
          </Parameters>
        </Query>
        <Adjust>
          <Target>0</Target>
          <Function />
          <Parameters />
        </Adjust>
        <Level>
          <Target>0</Target>
          <Function />
          <Parameters />
        </Level>
        <ParamTable>
          <Param ID="0">
            <array>
              <val>10146</val>
              <val>10139</val>
              <val>9958</val>
              <val>9959</val>
              <val>9972</val>
              <val>9969</val>
              <val>9971</val>
            </array>
          </Param>
          <Param ID="1">
            <val>0</val>
          </Param>
          <Param ID="2">
            <val>1</val>
          </Param>
        </ParamTable>
        <DependTable>
          <Param status="Task.GetState">0</Param>
        </DependTable>
      </Task>
      <Module>
        <Library Name="Programming\LaunchTasks" Local="true" />
        <Library Name="vantage" Local="false" />
        <Scene>
          <Name>SceneProgram_9956</Name>
          <Type>procedure</Type>
          <Parameters />
          <ParameterValues />
          <FunctionBody>
            <FunctionCall>
              <Name>LaunchTask</Name>
              <Parameters>
                <Param>
                  <Label>Task</Label>
                  <Initializer>
                    <Constant Type="int">10146</Constant>
                    <Constant Type="int">10139</Constant>
                    <Constant Type="int">9958</Constant>
                    <Constant Type="int">9959</Constant>
                    <Constant Type="int">9972</Constant>
                    <Constant Type="int">9969</Constant>
                    <Constant Type="int">9971</Constant>
                  </Initializer>
                  <ParamName>tasks</ParamName>
                </Param>
                <Param>
                  <Label>TriggerType</Label>
                  <Identifier>ButtonRelease</Identifier>
                  <ParamName>eventType</ParamName>
                </Param>
                <Param>
                  <Label>Number</Label>
                  <Constant Type="int">1</Constant>
                  <ParamName>param1</ParamName>
                </Param>
              </Parameters>
            </FunctionCall>
            <QueryCall>
              <Name>TaskQueryState</Name>
              <Parameters>
                <Param>
                  <Label>Task</Label>
                  <Initializer>
                    <Constant Type="int">10146</Constant>
                    <Constant Type="int">10139</Constant>
                    <Constant Type="int">9958</Constant>
                    <Constant Type="int">9959</Constant>
                    <Constant Type="int">9972</Constant>
                    <Constant Type="int">9969</Constant>
                    <Constant Type="int">9971</Constant>
                  </Initializer>
                  <ParamName>objects</ParamName>
                </Param>
              </Parameters>
            </QueryCall>
          </FunctionBody>
        </Scene>
      </Module>
    </Object>
    <Object>
      <Task VID="9958" Master="9722" MTime="">
        <Name>Learn Kitchen</Name>
        <Model>Learn Kitchen</Model>
        <Note />
        <DName />
        <ObjectType>Task</ObjectType>
        <Category>9904</Category>
        <Procedure>
          <Target>10183</Target>
          <Function>SceneProgram_9958</Function>
          <Parameters>
            <Param>0</Param>
          </Parameters>
        </Procedure>
        <Query>
          <Target>0</Target>
          <Function />
          <Parameters />
        </Query>
        <Adjust>
          <Target>0</Target>
          <Function />
          <Parameters />
        </Adjust>
        <Level>
          <Target>0</Target>
          <Function />
          <Parameters />
        </Level>
        <ParamTable>
          <Param ID="0">
            <gmem Type="ref">10018</gmem>
          </Param>
        </ParamTable>
        <DependTable />
      </Task>
      <Module>
        <Library Name="sounder" Local="false" />
        <Library Name="Lighting\Misc" Local="true" />
        <Library Name="vantage" Local="false" />
        <Scene>
          <Name>SceneProgram_9958</Name>
          <Type>procedure</Type>
          <Parameters>
            <Param>
              <Reference>true</Reference>
              <Label>Number</Label>
              <Label>GMem</Label>
              <Name>param1</Name>
            </Param>
          </Parameters>
          <ParameterValues>
            <Param>
              <Label>GMem</Label>
              <Constant Type="int">10018</Constant>
              <ParamName>param1</ParamName>
            </Param>
          </ParameterValues>
          <FunctionBody>
            <If disable="false">
              <LogicalExpression>
                <GivePrecedence>false</GivePrecedence>
                <Expanded>true</Expanded>
                <RelationalExpression>
                  <Operand>
                    <Label>Number</Label>
                    <Identifier>param1</Identifier>
                  </Operand>
                  <Operator>eq</Operator>
                  <Operand>
                    <Label>Number</Label>
                    <Constant Type="int">2</Constant>
                  </Operand>
                </RelationalExpression>
              </LogicalExpression>
              <StatementList>
                <FunctionCall disable="false">
                  <Name>Learn</Name>
                  <Parameters>
                    <Param>
                      <Label>Task</Label>
                      <Initializer>
                        <Constant Type="int">9933</Constant>
                      </Initializer>
                      <ParamName>tasks</ParamName>
                    </Param>
                  </Parameters>
                </FunctionCall>
              </StatementList>
              <Expanded>True</Expanded>
            </If>
            <ElseIf disable="false">
              <LogicalExpression>
                <GivePrecedence>false</GivePrecedence>
                <Expanded>true</Expanded>
                <RelationalExpression>
                  <Operand>
                    <Label>Number</Label>
                    <Identifier>param1</Identifier>
                  </Operand>
                  <Operator>eq</Operator>
                  <Operand>
                    <Label>Number</Label>
                    <Constant Type="int">3</Constant>
                  </Operand>
                </RelationalExpression>
              </LogicalExpression>
              <StatementList>
                <FunctionCall disable="false">
                  <Name>Learn</Name>
                  <Parameters>
                    <Param>
                      <Label>Task</Label>
                      <Initializer>
                        <Constant Type="int">10027</Constant>
                      </Initializer>
                      <ParamName>tasks</ParamName>
                    </Param>
                  </Parameters>
                </FunctionCall>
              </StatementList>
              <Expanded>True</Expanded>
            </ElseIf>
            <ElseIf disable="false">
              <LogicalExpression>
                <GivePrecedence>false</GivePrecedence>
                <Expanded>true</Expanded>
                <RelationalExpression>
                  <Operand>
                    <Label>Number</Label>
                    <Identifier>param1</Identifier>
                  </Operand>
                  <Operator>eq</Operator>
                  <Operand>
                    <Label>Number</Label>
                    <Constant Type="int">4</Constant>
                  </Operand>
                </RelationalExpression>
              </LogicalExpression>
              <StatementList>
                <FunctionCall disable="false">
                  <Name>Learn</Name>
                  <Parameters>
                    <Param>
                      <Label>Task</Label>
                      <Initializer>
                        <Constant Type="int">10049</Constant>
                      </Initializer>
                      <ParamName>tasks</ParamName>
                    </Param>
                  </Parameters>
                </FunctionCall>
              </StatementList>
              <Expanded>True</Expanded>
            </ElseIf>
            <FunctionCall disable="false">
              <Name>Sounder_PlayFX</Name>
              <Parameters>
                <Param>
                  <Label>Sounder</Label>
                  <Constant Type="int">9744</Constant>
                  <ParamName>object</ParamName>
                </Param>
                <Param>
                  <Constant Type="int">0</Constant>
                  <ParamName>id</ParamName>
                </Param>
                <Param>
                  <Label>Seconds</Label>
                  <Constant Type="float">1.0</Constant>
                  <ParamName>duration</ParamName>
                </Param>
                <Param>
                  <Label>Percentage</Label>
                  <Constant Type="int">50</Constant>
                  <ParamName>volume</ParamName>
                </Param>
              </Parameters>
            </FunctionCall>
          </FunctionBody>
        </Scene>
      </Module>
    </Object>
    <Object>
      <Task VID="9959" Master="9722" MTime="">
        <Name>Learn Master Bedroom</Name>
        <Model>Learn Master Bedroom</Model>
        <Note />
        <DName />
        <ObjectType>Task</ObjectType>
        <Category>9885</Category>
        <Procedure>
          <Target>10177</Target>
          <Function>SceneProgram_9959</Function>
          <Parameters>
            <Param>0</Param>
          </Parameters>
        </Procedure>
        <Query>
          <Target>0</Target>
          <Function />
          <Parameters />
        </Query>
        <Adjust>
          <Target>0</Target>
          <Function />
          <Parameters />
        </Adjust>
        <Level>
          <Target>0</Target>
          <Function />
          <Parameters />
        </Level>
        <ParamTable>
          <Param ID="0">
            <gmem Type="ref">10017</gmem>
          </Param>
        </ParamTable>
        <DependTable />
      </Task>
      <Module>
        <Library Name="sounder" Local="false" />
        <Library Name="Lighting\Misc" Local="true" />
        <Library Name="vantage" Local="false" />
        <Scene>
          <Name>SceneProgram_9959</Name>
          <Type>procedure</Type>
          <Parameters>
            <Param>
              <Reference>true</Reference>
              <Label>Number</Label>
              <Label>GMem</Label>
              <Name>param1</Name>
            </Param>
          </Parameters>
          <ParameterValues>
            <Param>
              <Label>GMem</Label>
              <Constant Type="int">10017</Constant>
              <ParamName>param1</ParamName>
            </Param>
          </ParameterValues>
          <FunctionBody>
            <If disable="false">
              <LogicalExpression>
                <GivePrecedence>false</GivePrecedence>
                <Expanded>true</Expanded>
                <RelationalExpression>
                  <Operand>
                    <Label>Number</Label>
                    <Identifier>param1</Identifier>
                  </Operand>
                  <Operator>eq</Operator>
                  <Operand>
                    <Label>Number</Label>
                    <Constant Type="int">2</Constant>
                  </Operand>
                </RelationalExpression>
              </LogicalExpression>
              <StatementList>
                <FunctionCall disable="false">
                  <Name>Learn</Name>
                  <Parameters>
                    <Param>
                      <Label>Task</Label>
                      <Initializer>
                        <Constant Type="int">9888</Constant>
                      </Initializer>
                      <ParamName>tasks</ParamName>
                    </Param>
                  </Parameters>
                </FunctionCall>
              </StatementList>
              <Expanded>True</Expanded>
            </If>
            <ElseIf disable="false">
              <LogicalExpression>
                <GivePrecedence>false</GivePrecedence>
                <Expanded>true</Expanded>
                <RelationalExpression>
                  <Operand>
                    <Label>Number</Label>
                    <Identifier>param1</Identifier>
                  </Operand>
                  <Operator>eq</Operator>
                  <Operand>
                    <Label>Number</Label>
                    <Constant Type="int">3</Constant>
                  </Operand>
                </RelationalExpression>
              </LogicalExpression>
              <StatementList>
                <FunctionCall disable="false">
                  <Name>Learn</Name>
                  <Parameters>
                    <Param>
                      <Label>Task</Label>
                      <Initializer>
                        <Constant Type="int">10028</Constant>
                      </Initializer>
                      <ParamName>tasks</ParamName>
                    </Param>
                  </Parameters>
                </FunctionCall>
              </StatementList>
              <Expanded>True</Expanded>
            </ElseIf>
            <ElseIf disable="false">
              <LogicalExpression>
                <GivePrecedence>false</GivePrecedence>
                <Expanded>true</Expanded>
                <RelationalExpression>
                  <Operand>
                    <Label>Number</Label>
                    <Identifier>param1</Identifier>
                  </Operand>
                  <Operator>eq</Operator>
                  <Operand>
                    <Label>Number</Label>
                    <Constant Type="int">4</Constant>
                  </Operand>
                </RelationalExpression>
              </LogicalExpression>
              <StatementList>
                <FunctionCall disable="false">
                  <Name>Learn</Name>
                  <Parameters>
                    <Param>
                      <Label>Task</Label>
                      <Initializer>
                        <Constant Type="int">10050</Constant>
                      </Initializer>
                      <ParamName>tasks</ParamName>
                    </Param>
                  </Parameters>
                </FunctionCall>
              </StatementList>
              <Expanded>True</Expanded>
            </ElseIf>
            <FunctionCall disable="false">
              <Name>Sounder_PlayFX</Name>
              <Parameters>
                <Param>
                  <Label>Sounder</Label>
                  <Constant Type="int">9784</Constant>
                  <ParamName>object</ParamName>
                </Param>
                <Param>
                  <Constant Type="int">0</Constant>
                  <ParamName>id</ParamName>
                </Param>
                <Param>
                  <Label>Seconds</Label>
                  <Constant Type="float">1.0</Constant>
                  <ParamName>duration</ParamName>
                </Param>
                <Param>
                  <Label>Percentage</Label>
                  <Constant Type="int">50</Constant>
                  <ParamName>volume</ParamName>
                </Param>
              </Parameters>
            </FunctionCall>
          </FunctionBody>
        </Scene>
      </Module>
    </Object>
    <Object>
      <Task VID="9969" Master="9722" MTime="">
        <Name>Learn Bed 2</Name>
        <Model>Learn Bed 2</Model>
        <Note />
        <DName />
        <ObjectType>Task</ObjectType>
        <Category>9901</Category>
        <Procedure>
          <Target>10177</Target>
          <Function>SceneProgram_9969</Function>
          <Parameters>
            <Param>0</Param>
          </Parameters>
        </Procedure>
        <Query>
          <Target>0</Target>
          <Function />
          <Parameters />
        </Query>
        <Adjust>
          <Target>0</Target>
          <Function />
          <Parameters />
        </Adjust>
        <Level>
          <Target>0</Target>
          <Function />
          <Parameters />
        </Level>
        <ParamTable>
          <Param ID="0">
            <gmem Type="ref">10015</gmem>
          </Param>
        </ParamTable>
        <DependTable />
      </Task>
      <Module>
        <Library Name="sounder" Local="false" />
        <Library Name="Lighting\Misc" Local="true" />
        <Library Name="vantage" Local="false" />
        <Scene>
          <Name>SceneProgram_9969</Name>
          <Type>procedure</Type>
          <Parameters>
            <Param>
              <Reference>true</Reference>
              <Label>Number</Label>
              <Label>GMem</Label>
              <Name>param1</Name>
            </Param>
          </Parameters>
          <ParameterValues>
            <Param>
              <Label>GMem</Label>
              <Constant Type="int">10015</Constant>
              <ParamName>param1</ParamName>
            </Param>
          </ParameterValues>
          <FunctionBody>
            <If disable="false">
              <LogicalExpression>
                <GivePrecedence>false</GivePrecedence>
                <Expanded>true</Expanded>
                <RelationalExpression>
                  <Operand>
                    <Label>Number</Label>
                    <Identifier>param1</Identifier>
                  </Operand>
                  <Operator>eq</Operator>
                  <Operand>
                    <Label>Number</Label>
                    <Constant Type="int">2</Constant>
                  </Operand>
                </RelationalExpression>
              </LogicalExpression>
              <StatementList>
                <FunctionCall disable="false">
                  <Name>Learn</Name>
                  <Parameters>
                    <Param>
                      <Label>Task</Label>
                      <Initializer>
                        <Constant Type="int">9922</Constant>
                      </Initializer>
                      <ParamName>tasks</ParamName>
                    </Param>
                  </Parameters>
                </FunctionCall>
              </StatementList>
              <Expanded>True</Expanded>
            </If>
            <ElseIf disable="false">
              <LogicalExpression>
                <GivePrecedence>false</GivePrecedence>
                <Expanded>true</Expanded>
                <RelationalExpression>
                  <Operand>
                    <Label>Number</Label>
                    <Identifier>param1</Identifier>
                  </Operand>
                  <Operator>eq</Operator>
                  <Operand>
                    <Label>Number</Label>
                    <Constant Type="int">3</Constant>
                  </Operand>
                </RelationalExpression>
              </LogicalExpression>
              <StatementList>
                <FunctionCall disable="false">
                  <Name>Learn</Name>
                  <Parameters>
                    <Param>
                      <Label>Task</Label>
                      <Initializer>
                        <Constant Type="int">10030</Constant>
                      </Initializer>
                      <ParamName>tasks</ParamName>
                    </Param>
                  </Parameters>
                </FunctionCall>
              </StatementList>
              <Expanded>True</Expanded>
            </ElseIf>
            <ElseIf disable="false">
              <LogicalExpression>
                <GivePrecedence>false</GivePrecedence>
                <Expanded>true</Expanded>
                <RelationalExpression>
                  <Operand>
                    <Label>Number</Label>
                    <Identifier>param1</Identifier>
                  </Operand>
                  <Operator>eq</Operator>
                  <Operand>
                    <Label>Number</Label>
                    <Constant Type="int">4</Constant>
                  </Operand>
                </RelationalExpression>
              </LogicalExpression>
              <StatementList>
                <FunctionCall disable="false">
                  <Name>Learn</Name>
                  <Parameters>
                    <Param>
                      <Label>Task</Label>
                      <Initializer>
                        <Constant Type="int">10052</Constant>
                      </Initializer>
                      <ParamName>tasks</ParamName>
                    </Param>
                  </Parameters>
                </FunctionCall>
              </StatementList>
              <Expanded>True</Expanded>
            </ElseIf>
            <FunctionCall disable="false">
              <Name>Sounder_PlayFX</Name>
              <Parameters>
                <Param>
                  <Label>Sounder</Label>
                  <Constant Type="int">9824</Constant>
                  <ParamName>object</ParamName>
                </Param>
                <Param>
                  <Constant Type="int">0</Constant>
                  <ParamName>id</ParamName>
                </Param>
                <Param>
                  <Label>Seconds</Label>
                  <Constant Type="float">1.0</Constant>
                  <ParamName>duration</ParamName>
                </Param>
                <Param>
                  <Label>Percentage</Label>
                  <Constant Type="int">50</Constant>
                  <ParamName>volume</ParamName>
                </Param>
              </Parameters>
            </FunctionCall>
          </FunctionBody>
        </Scene>
      </Module>
    </Object>
    <Object>
      <Task VID="9971" Master="9722" MTime="">
        <Name>Learn Bathroom</Name>
        <Model>Learn Bathroom</Model>
        <Note />
        <DName />
        <ObjectType>Task</ObjectType>
        <Category>9740</Category>
        <Procedure>
          <Target>0</Target>
          <Function>SceneProgram_9971</Function>
          <Parameters>
            <Param>0</Param>
          </Parameters>
        </Procedure>
        <Query>
          <Target>0</Target>
          <Function />
          <Parameters />
        </Query>
        <Adjust>
          <Target>0</Target>
          <Function />
          <Parameters />
        </Adjust>
        <Level>
          <Target>0</Target>
          <Function />
          <Parameters />
        </Level>
        <ParamTable>
          <Param ID="0">
            <gmem Type="ref">10014</gmem>
          </Param>
        </ParamTable>
        <DependTable />
      </Task>
      <Module>
        <Library Name="sounder" Local="false" />
        <Library Name="Lighting\Misc" Local="true" />
        <Library Name="vantage" Local="false" />
        <Scene>
          <Name>SceneProgram_9971</Name>
          <Type>procedure</Type>
          <Parameters>
            <Param>
              <Reference>true</Reference>
              <Label>Number</Label>
              <Label>GMem</Label>
              <Name>param1</Name>
            </Param>
          </Parameters>
          <ParameterValues>
            <Param>
              <Label>GMem</Label>
              <Constant Type="int">10014</Constant>
              <ParamName>param1</ParamName>
            </Param>
          </ParameterValues>
          <FunctionBody>
            <If disable="false">
              <LogicalExpression>
                <GivePrecedence>false</GivePrecedence>
                <Expanded>true</Expanded>
                <RelationalExpression>
                  <Operand>
                    <Label>Number</Label>
                    <Identifier>param1</Identifier>
                  </Operand>
                  <Operator>eq</Operator>
                  <Operand>
                    <Label>Number</Label>
                    <Constant Type="int">2</Constant>
                  </Operand>
                </RelationalExpression>
              </LogicalExpression>
              <StatementList>
                <FunctionCall>
                  <Name>Learn</Name>
                  <Parameters>
                    <Param>
                      <Label>Task</Label>
                      <Initializer>
                        <Constant Type="int">10140</Constant>
                        <Constant Type="int">9735</Constant>
                      </Initializer>
                      <ParamName>tasks</ParamName>
                    </Param>
                  </Parameters>
                </FunctionCall>
              </StatementList>
              <Expanded>True</Expanded>
            </If>
            <ElseIf disable="false">
              <LogicalExpression>
                <GivePrecedence>false</GivePrecedence>
                <Expanded>true</Expanded>
                <RelationalExpression>
                  <Operand>
                    <Label>Number</Label>
                    <Identifier>param1</Identifier>
                  </Operand>
                  <Operator>eq</Operator>
                  <Operand>
                    <Label>Number</Label>
                    <Constant Type="int">3</Constant>
                  </Operand>
                </RelationalExpression>
              </LogicalExpression>
              <StatementList>
                <FunctionCall>
                  <Name>Learn</Name>
                  <Parameters>
                    <Param>
                      <Label>Task</Label>
                      <Initializer>
                        <Constant Type="int">10044</Constant>
                      </Initializer>
                      <ParamName>tasks</ParamName>
                    </Param>
                  </Parameters>
                </FunctionCall>
              </StatementList>
              <Expanded>True</Expanded>
            </ElseIf>
            <ElseIf disable="false">
              <LogicalExpression>
                <GivePrecedence>false</GivePrecedence>
                <Expanded>true</Expanded>
                <RelationalExpression>
                  <Operand>
                    <Label>Number</Label>
                    <Identifier>param1</Identifier>
                  </Operand>
                  <Operator>eq</Operator>
                  <Operand>
                    <Label>Number</Label>
                    <Constant Type="int">4</Constant>
                  </Operand>
                </RelationalExpression>
              </LogicalExpression>
              <StatementList>
                <FunctionCall>
                  <Name>Learn</Name>
                  <Parameters>
                    <Param>
                      <Label>Task</Label>
                      <Initializer>
                        <Constant Type="int">10141</Constant>
                        <Constant Type="int">10053</Constant>
                      </Initializer>
                      <ParamName>tasks</ParamName>
                    </Param>
                  </Parameters>
                </FunctionCall>
              </StatementList>
              <Expanded>True</Expanded>
            </ElseIf>
            <FunctionCall>
              <Name>Sounder_PlayFX</Name>
              <Parameters>
                <Param>
                  <Label>Sounder</Label>
                  <Constant Type="int">0</Constant>
                  <ParamName>object</ParamName>
                </Param>
                <Param>
                  <Constant Type="int">0</Constant>
                  <ParamName>id</ParamName>
                </Param>
                <Param>
                  <Label>Seconds</Label>
                  <Constant Type="float">1.0</Constant>
                  <ParamName>duration</ParamName>
                </Param>
                <Param>
                  <Label>Percentage</Label>
                  <Constant Type="int">50</Constant>
                  <ParamName>volume</ParamName>
                </Param>
              </Parameters>
            </FunctionCall>
          </FunctionBody>
        </Scene>
      </Module>
    </Object>
    <Object>
      <Task VID="9972" Master="9722" MTime="">
        <Name>Learn En-Suite</Name>
        <Model>Learn En-Suite</Model>
        <Note />
        <DName />
        <ObjectType>Task</ObjectType>
        <Category>9864</Category>
        <Procedure>
          <Target>10440</Target>
          <Function>SceneProgram_9972</Function>
          <Parameters>
            <Param>0</Param>
          </Parameters>
        </Procedure>
        <Query>
          <Target>0</Target>
          <Function />
          <Parameters />
        </Query>
        <Adjust>
          <Target>0</Target>
          <Function />
          <Parameters />
        </Adjust>
        <Level>
          <Target>0</Target>
          <Function />
          <Parameters />
        </Level>
        <ParamTable>
          <Param ID="0">
            <gmem Type="ref">10016</gmem>
          </Param>
        </ParamTable>
        <DependTable />
      </Task>
      <Module>
        <Library Name="sounder" Local="false" />
        <Library Name="Lighting\Misc" Local="true" />
        <Library Name="vantage" Local="false" />
        <Scene>
          <Name>SceneProgram_9972</Name>
          <Type>procedure</Type>
          <Parameters>
            <Param>
              <Reference>true</Reference>
              <Label>Number</Label>
              <Label>GMem</Label>
              <Name>param1</Name>
            </Param>
          </Parameters>
          <ParameterValues>
            <Param>
              <Label>GMem</Label>
              <Constant Type="int">10016</Constant>
              <ParamName>param1</ParamName>
            </Param>
          </ParameterValues>
          <FunctionBody>
            <If disable="false">
              <LogicalExpression>
                <GivePrecedence>false</GivePrecedence>
                <Expanded>true</Expanded>
                <RelationalExpression>
                  <Operand>
                    <Label>Number</Label>
                    <Identifier>param1</Identifier>
                  </Operand>
                  <Operator>eq</Operator>
                  <Operand>
                    <Label>Number</Label>
                    <Constant Type="int">2</Constant>
                  </Operand>
                </RelationalExpression>
              </LogicalExpression>
              <StatementList>
                <FunctionCall disable="false">
                  <Name>Learn</Name>
                  <Parameters>
                    <Param>
                      <Label>Task</Label>
                      <Initializer>
                        <Constant Type="int">10142</Constant>
                        <Constant Type="int">9868</Constant>
                      </Initializer>
                      <ParamName>tasks</ParamName>
                    </Param>
                  </Parameters>
                </FunctionCall>
              </StatementList>
              <Expanded>True</Expanded>
            </If>
            <ElseIf disable="false">
              <LogicalExpression>
                <GivePrecedence>false</GivePrecedence>
                <Expanded>true</Expanded>
                <RelationalExpression>
                  <Operand>
                    <Label>Number</Label>
                    <Identifier>param1</Identifier>
                  </Operand>
                  <Operator>eq</Operator>
                  <Operand>
                    <Label>Number</Label>
                    <Constant Type="int">3</Constant>
                  </Operand>
                </RelationalExpression>
              </LogicalExpression>
              <StatementList>
                <FunctionCall disable="false">
                  <Name>Learn</Name>
                  <Parameters>
                    <Param>
                      <Label>Task</Label>
                      <Initializer>
                        <Constant Type="int">10029</Constant>
                      </Initializer>
                      <ParamName>tasks</ParamName>
                    </Param>
                  </Parameters>
                </FunctionCall>
              </StatementList>
              <Expanded>True</Expanded>
            </ElseIf>
            <ElseIf disable="false">
              <LogicalExpression>
                <GivePrecedence>false</GivePrecedence>
                <Expanded>true</Expanded>
                <RelationalExpression>
                  <Operand>
                    <Label>Number</Label>
                    <Identifier>param1</Identifier>
                  </Operand>
                  <Operator>eq</Operator>
                  <Operand>
                    <Label>Number</Label>
                    <Constant Type="int">4</Constant>
                  </Operand>
                </RelationalExpression>
              </LogicalExpression>
              <StatementList>
                <FunctionCall disable="false">
                  <Name>Learn</Name>
                  <Parameters>
                    <Param>
                      <Label>Task</Label>
                      <Initializer>
                        <Constant Type="int">10143</Constant>
                        <Constant Type="int">10051</Constant>
                      </Initializer>
                      <ParamName>tasks</ParamName>
                    </Param>
                  </Parameters>
                </FunctionCall>
              </StatementList>
              <Expanded>True</Expanded>
            </ElseIf>
            <FunctionCall disable="false">
              <Name>Sounder_PlayFX</Name>
              <Parameters>
                <Param>
                  <Label>Sounder</Label>
                  <Constant Type="int">9804</Constant>
                  <ParamName>object</ParamName>
                </Param>
                <Param>
                  <Constant Type="int">0</Constant>
                  <ParamName>id</ParamName>
                </Param>
                <Param>
                  <Label>Seconds</Label>
                  <Constant Type="float">1.0</Constant>
                  <ParamName>duration</ParamName>
                </Param>
                <Param>
                  <Label>Percentage</Label>
                  <Constant Type="int">50</Constant>
                  <ParamName>volume</ParamName>
                </Param>
              </Parameters>
            </FunctionCall>
          </FunctionBody>
        </Scene>
      </Module>
    </Object>
    <Object>
      <Task VID="9974" Master="9722" MTime="">
        <Name>Living Toggle Scene 1</Name>
        <Model>Living Toggle Scene 1</Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Task</ObjectType>
        <Category>9903</Category>
        <Procedure>
          <Target>10176</Target>
          <Function>SceneProgram_9974</Function>
          <Parameters />
        </Procedure>
        <Query>
          <Target>10168</Target>
          <Function>AnyLoadsOn</Function>
          <Parameters>
            <Param>0</Param>
          </Parameters>
        </Query>
        <Adjust>
          <Target>0</Target>
          <Function />
          <Parameters />
        </Adjust>
        <Level>
          <Target>0</Target>
          <Function />
          <Parameters />
        </Level>
        <ParamTable>
          <Param ID="0">
            <array>
              <val>9307</val>
              <val>67</val>
              <val>66</val>
            </array>
          </Param>
        </ParamTable>
        <DependTable>
          <Param status="Load.GetLevel">0</Param>
        </DependTable>
      </Task>
      <Module>
        <Library Name="Programming\LaunchTasks" Local="true" />
        <Library Name="load" Local="false" />
        <Library Name="vantage" Local="false" />
        <Scene>
          <Name>SceneProgram_9974</Name>
          <Type>procedure</Type>
          <Parameters />
          <ParameterValues />
          <FunctionBody>
            <If disable="false">
              <LogicalExpression>
                <GivePrecedence>false</GivePrecedence>
                <Expanded>true</Expanded>
                <LogicalExpression>
                  <GivePrecedence>false</GivePrecedence>
                  <Expanded>true</Expanded>
                  <RelationalExpression>
                    <Operand>
                      <Label>Level</Label>
                      <FunctionCall>
                        <Name>Load_GetLevel</Name>
                        <Parameters>
                          <Param>
                            <Label>Load</Label>
                            <Constant Type="int">9307</Constant>
                            <ParamName>object</ParamName>
                          </Param>
                        </Parameters>
                      </FunctionCall>
                    </Operand>
                    <Operator>eq</Operator>
                    <Operand>
                      <Label>Level</Label>
                      <Constant Type="float">0.0</Constant>
                    </Operand>
                  </RelationalExpression>
                </LogicalExpression>
                <Operator>and</Operator>
                <LogicalExpression>
                  <GivePrecedence>false</GivePrecedence>
                  <Expanded>true</Expanded>
                  <LogicalExpression>
                    <GivePrecedence>false</GivePrecedence>
                    <Expanded>true</Expanded>
                    <RelationalExpression>
                      <Operand>
                        <Label>Level</Label>
                        <FunctionCall>
                          <Name>Load_GetLevel</Name>
                          <Parameters>
                            <Param>
                              <Label>Load</Label>
                              <Constant Type="int">67</Constant>
                              <ParamName>object</ParamName>
                            </Param>
                          </Parameters>
                        </FunctionCall>
                      </Operand>
                      <Operator>eq</Operator>
                      <Operand>
                        <Label>Level</Label>
                        <Constant Type="float">0.0</Constant>
                      </Operand>
                    </RelationalExpression>
                  </LogicalExpression>
                  <Operator>and</Operator>
                  <LogicalExpression>
                    <GivePrecedence>false</GivePrecedence>
                    <Expanded>true</Expanded>
                    <RelationalExpression>
                      <Operand>
                        <Label>Level</Label>
                        <FunctionCall>
                          <Name>Load_GetLevel</Name>
                          <Parameters>
                            <Param>
                              <Label>Load</Label>
                              <Constant Type="int">66</Constant>
                              <ParamName>object</ParamName>
                            </Param>
                          </Parameters>
                        </FunctionCall>
                      </Operand>
                      <Operator>eq</Operator>
                      <Operand>
                        <Label>Level</Label>
                        <Constant Type="float">0.0</Constant>
                      </Operand>
                    </RelationalExpression>
                  </LogicalExpression>
                </LogicalExpression>
              </LogicalExpression>
              <StatementList>
                <FunctionCall>
                  <Name>LaunchTask</Name>
                  <Parameters>
                    <Param>
                      <Label>Task</Label>
                      <Initializer>
                        <Constant Type="int">10020</Constant>
                      </Initializer>
                      <ParamName>tasks</ParamName>
                    </Param>
                    <Param>
                      <Label>TriggerType</Label>
                      <Identifier>ButtonRelease</Identifier>
                      <ParamName>eventType</ParamName>
                    </Param>
                    <Param>
                      <Label>Number</Label>
                      <Constant Type="int">1</Constant>
                      <ParamName>param1</ParamName>
                    </Param>
                  </Parameters>
                </FunctionCall>
              </StatementList>
              <Expanded>True</Expanded>
            </If>
            <Else disable="false">
              <StatementList>
                <FunctionCall>
                  <Name>LaunchTask</Name>
                  <Parameters>
                    <Param>
                      <Label>Task</Label>
                      <Initializer>
                        <Constant Type="int">9927</Constant>
                      </Initializer>
                      <ParamName>tasks</ParamName>
                    </Param>
                    <Param>
                      <Label>TriggerType</Label>
                      <Identifier>ButtonRelease</Identifier>
                      <ParamName>eventType</ParamName>
                    </Param>
                    <Param>
                      <Label>Number</Label>
                      <Constant Type="int">1</Constant>
                      <ParamName>param1</ParamName>
                    </Param>
                  </Parameters>
                </FunctionCall>
                <FunctionCall>
                  <Name>LaunchTask</Name>
                  <Parameters>
                    <Param>
                      <Label>Task</Label>
                      <Initializer>
                        <Constant Type="int">9932</Constant>
                      </Initializer>
                      <ParamName>tasks</ParamName>
                    </Param>
                    <Param>
                      <Label>TriggerType</Label>
                      <Identifier>ButtonRelease</Identifier>
                      <ParamName>eventType</ParamName>
                    </Param>
                    <Param>
                      <Label>Number</Label>
                      <Constant Type="int">1</Constant>
                      <ParamName>param1</ParamName>
                    </Param>
                  </Parameters>
                </FunctionCall>
              </StatementList>
              <Expanded>True</Expanded>
            </Else>
            <QueryCall>
              <Name>AnyLoadsOn</Name>
              <Parameters>
                <Param>
                  <Label>Load</Label>
                  <Initializer>
                    <Constant Type="int">9307</Constant>
                    <Constant Type="int">67</Constant>
                    <Constant Type="int">66</Constant>
                  </Initializer>
                  <ParamName>loads</ParamName>
                </Param>
              </Parameters>
            </QueryCall>
          </FunctionBody>
        </Scene>
      </Module>
    </Object>
    <Object>
      <Task VID="9975" Master="9722" MTime="">
        <Name>Kitchen Toggle Scene 1</Name>
        <Model>Kitchen Toggle Scene 1</Model>
        <Note />
        <DName />
        <ObjectType>Task</ObjectType>
        <Category>9904</Category>
        <Procedure>
          <Target>10440</Target>
          <Function>SceneProgram_9975</Function>
          <Parameters />
        </Procedure>
        <Query>
          <Target>10168</Target>
          <Function>AnyLoadsOn</Function>
          <Parameters>
            <Param>0</Param>
          </Parameters>
        </Query>
        <Adjust>
          <Target>0</Target>
          <Function />
          <Parameters />
        </Adjust>
        <Level>
          <Target>0</Target>
          <Function />
          <Parameters />
        </Level>
        <ParamTable>
          <Param ID="0">
            <array>
              <val>10384</val>
              <val>83</val>
              <val>10413</val>
              <val>70</val>
            </array>
          </Param>
        </ParamTable>
        <DependTable>
          <Param status="Load.GetLevel">0</Param>
        </DependTable>
      </Task>
      <Module>
        <Library Name="Programming\LaunchTasks" Local="true" />
        <Library Name="load" Local="false" />
        <Library Name="vantage" Local="false" />
        <Scene>
          <Name>SceneProgram_9975</Name>
          <Type>procedure</Type>
          <Parameters />
          <ParameterValues />
          <FunctionBody>
            <If disable="false">
              <LogicalExpression>
                <GivePrecedence>false</GivePrecedence>
                <Expanded>true</Expanded>
                <LogicalExpression>
                  <GivePrecedence>false</GivePrecedence>
                  <Expanded>true</Expanded>
                  <RelationalExpression>
                    <Operand>
                      <Label>Level</Label>
                      <FunctionCall>
                        <Name>Load_GetLevel</Name>
                        <Parameters>
                          <Param>
                            <Label>Load</Label>
                            <Constant Type="int">10384</Constant>
                            <ParamName>object</ParamName>
                          </Param>
                        </Parameters>
                      </FunctionCall>
                    </Operand>
                    <Operator>eq</Operator>
                    <Operand>
                      <Label>Level</Label>
                      <Constant Type="float">0.0</Constant>
                    </Operand>
                  </RelationalExpression>
                </LogicalExpression>
                <Operator>and</Operator>
                <LogicalExpression>
                  <GivePrecedence>false</GivePrecedence>
                  <Expanded>true</Expanded>
                  <LogicalExpression>
                    <GivePrecedence>false</GivePrecedence>
                    <Expanded>true</Expanded>
                    <RelationalExpression>
                      <Operand>
                        <Label>Level</Label>
                        <FunctionCall>
                          <Name>Load_GetLevel</Name>
                          <Parameters>
                            <Param>
                              <Label>Load</Label>
                              <Constant Type="int">70</Constant>
                              <ParamName>object</ParamName>
                            </Param>
                          </Parameters>
                        </FunctionCall>
                      </Operand>
                      <Operator>eq</Operator>
                      <Operand>
                        <Label>Level</Label>
                        <Constant Type="float">0.0</Constant>
                      </Operand>
                    </RelationalExpression>
                  </LogicalExpression>
                  <Operator>and</Operator>
                  <LogicalExpression>
                    <GivePrecedence>false</GivePrecedence>
                    <Expanded>true</Expanded>
                    <LogicalExpression>
                      <GivePrecedence>false</GivePrecedence>
                      <Expanded>true</Expanded>
                      <RelationalExpression>
                        <Operand>
                          <Label>Level</Label>
                          <FunctionCall>
                            <Name>Load_GetLevel</Name>
                            <Parameters>
                              <Param>
                                <Label>Load</Label>
                                <Constant Type="int">83</Constant>
                                <ParamName>object</ParamName>
                              </Param>
                            </Parameters>
                          </FunctionCall>
                        </Operand>
                        <Operator>eq</Operator>
                        <Operand>
                          <Label>Level</Label>
                          <Constant Type="float">0.0</Constant>
                        </Operand>
                      </RelationalExpression>
                    </LogicalExpression>
                    <Operator>and</Operator>
                    <LogicalExpression>
                      <GivePrecedence>false</GivePrecedence>
                      <Expanded>true</Expanded>
                      <RelationalExpression>
                        <Operand>
                          <Label>Level</Label>
                          <FunctionCall>
                            <Name>Load_GetLevel</Name>
                            <Parameters>
                              <Param>
                                <Label>Load</Label>
                                <Constant Type="int">10413</Constant>
                                <ParamName>object</ParamName>
                              </Param>
                            </Parameters>
                          </FunctionCall>
                        </Operand>
                        <Operator>eq</Operator>
                        <Operand>
                          <Label>Level</Label>
                          <Constant Type="float">0.0</Constant>
                        </Operand>
                      </RelationalExpression>
                    </LogicalExpression>
                  </LogicalExpression>
                </LogicalExpression>
              </LogicalExpression>
              <StatementList>
                <FunctionCall disable="false">
                  <Name>LaunchTask</Name>
                  <Parameters>
                    <Param>
                      <Label>Task</Label>
                      <Initializer>
                        <Constant Type="int">9933</Constant>
                      </Initializer>
                      <ParamName>tasks</ParamName>
                    </Param>
                    <Param>
                      <Label>TriggerType</Label>
                      <Identifier>ButtonRelease</Identifier>
                      <ParamName>eventType</ParamName>
                    </Param>
                    <Param>
                      <Label>Number</Label>
                      <Constant Type="int">1</Constant>
                      <ParamName>param1</ParamName>
                    </Param>
                  </Parameters>
                </FunctionCall>
              </StatementList>
              <Expanded>True</Expanded>
            </If>
            <Else disable="false">
              <StatementList>
                <FunctionCall disable="false">
                  <Name>LaunchTask</Name>
                  <Parameters>
                    <Param>
                      <Label>Task</Label>
                      <Initializer>
                        <Constant Type="int">9932</Constant>
                      </Initializer>
                      <ParamName>tasks</ParamName>
                    </Param>
                    <Param>
                      <Label>TriggerType</Label>
                      <Identifier>ButtonRelease</Identifier>
                      <ParamName>eventType</ParamName>
                    </Param>
                    <Param>
                      <Label>Number</Label>
                      <Constant Type="int">1</Constant>
                      <ParamName>param1</ParamName>
                    </Param>
                  </Parameters>
                </FunctionCall>
              </StatementList>
              <Expanded>True</Expanded>
            </Else>
            <QueryCall>
              <Name>AnyLoadsOn</Name>
              <Parameters>
                <Param>
                  <Label>Load</Label>
                  <Initializer>
                    <Constant Type="int">10384</Constant>
                    <Constant Type="int">83</Constant>
                    <Constant Type="int">10413</Constant>
                    <Constant Type="int">70</Constant>
                  </Initializer>
                  <ParamName>loads</ParamName>
                </Param>
              </Parameters>
            </QueryCall>
          </FunctionBody>
        </Scene>
      </Module>
    </Object>
    <Object>
      <Task VID="9976" Master="9722" MTime="">
        <Name>Master Bedroom Toggle Scene 1</Name>
        <Model>Master Bedroom Toggle Scene 1</Model>
        <Note />
        <DName />
        <ObjectType>Task</ObjectType>
        <Category>9885</Category>
        <Procedure>
          <Target>10177</Target>
          <Function>SceneProgram_9976</Function>
          <Parameters />
        </Procedure>
        <Query>
          <Target>10168</Target>
          <Function>AnyLoadsOn</Function>
          <Parameters>
            <Param>0</Param>
          </Parameters>
        </Query>
        <Adjust>
          <Target>0</Target>
          <Function />
          <Parameters />
        </Adjust>
        <Level>
          <Target>0</Target>
          <Function />
          <Parameters />
        </Level>
        <ParamTable>
          <Param ID="0">
            <array>
              <val>55</val>
              <val>53</val>
              <val>54</val>
              <val>10197</val>
            </array>
          </Param>
        </ParamTable>
        <DependTable>
          <Param status="Load.GetLevel">0</Param>
        </DependTable>
      </Task>
      <Module>
        <Library Name="Programming\LaunchTasks" Local="true" />
        <Library Name="load" Local="false" />
        <Library Name="vantage" Local="false" />
        <Scene>
          <Name>SceneProgram_9976</Name>
          <Type>procedure</Type>
          <Parameters />
          <ParameterValues />
          <FunctionBody>
            <If disable="false">
              <LogicalExpression>
                <GivePrecedence>false</GivePrecedence>
                <Expanded>true</Expanded>
                <LogicalExpression>
                  <GivePrecedence>false</GivePrecedence>
                  <Expanded>true</Expanded>
                  <RelationalExpression>
                    <Operand>
                      <Label>Level</Label>
                      <FunctionCall>
                        <Name>Load_GetLevel</Name>
                        <Parameters>
                          <Param>
                            <Label>Load</Label>
                            <Constant Type="int">53</Constant>
                            <ParamName>object</ParamName>
                          </Param>
                        </Parameters>
                      </FunctionCall>
                    </Operand>
                    <Operator>eq</Operator>
                    <Operand>
                      <Label>Level</Label>
                      <Constant Type="float">0.0</Constant>
                    </Operand>
                  </RelationalExpression>
                </LogicalExpression>
                <Operator>and</Operator>
                <LogicalExpression>
                  <GivePrecedence>false</GivePrecedence>
                  <Expanded>true</Expanded>
                  <LogicalExpression>
                    <GivePrecedence>false</GivePrecedence>
                    <Expanded>true</Expanded>
                    <RelationalExpression>
                      <Operand>
                        <Label>Level</Label>
                        <FunctionCall>
                          <Name>Load_GetLevel</Name>
                          <Parameters>
                            <Param>
                              <Label>Load</Label>
                              <Constant Type="int">54</Constant>
                              <ParamName>object</ParamName>
                            </Param>
                          </Parameters>
                        </FunctionCall>
                      </Operand>
                      <Operator>eq</Operator>
                      <Operand>
                        <Label>Level</Label>
                        <Constant Type="float">0.0</Constant>
                      </Operand>
                    </RelationalExpression>
                  </LogicalExpression>
                  <Operator>and</Operator>
                  <LogicalExpression>
                    <GivePrecedence>false</GivePrecedence>
                    <Expanded>true</Expanded>
                    <LogicalExpression>
                      <GivePrecedence>false</GivePrecedence>
                      <Expanded>true</Expanded>
                      <RelationalExpression>
                        <Operand>
                          <Label>Level</Label>
                          <FunctionCall>
                            <Name>Load_GetLevel</Name>
                            <Parameters>
                              <Param>
                                <Label>Load</Label>
                                <Constant Type="int">55</Constant>
                                <ParamName>object</ParamName>
                              </Param>
                            </Parameters>
                          </FunctionCall>
                        </Operand>
                        <Operator>eq</Operator>
                        <Operand>
                          <Label>Level</Label>
                          <Constant Type="float">0.0</Constant>
                        </Operand>
                      </RelationalExpression>
                    </LogicalExpression>
                    <Operator>and</Operator>
                    <LogicalExpression>
                      <GivePrecedence>false</GivePrecedence>
                      <Expanded>true</Expanded>
                      <RelationalExpression>
                        <Operand>
                          <Label>Level</Label>
                          <FunctionCall>
                            <Name>Load_GetLevel</Name>
                            <Parameters>
                              <Param>
                                <Label>Load</Label>
                                <Constant Type="int">10197</Constant>
                                <ParamName>object</ParamName>
                              </Param>
                            </Parameters>
                          </FunctionCall>
                        </Operand>
                        <Operator>eq</Operator>
                        <Operand>
                          <Label>Level</Label>
                          <Constant Type="float">0.0</Constant>
                        </Operand>
                      </RelationalExpression>
                    </LogicalExpression>
                  </LogicalExpression>
                </LogicalExpression>
              </LogicalExpression>
              <StatementList>
                <FunctionCall>
                  <Name>LaunchTask</Name>
                  <Parameters>
                    <Param>
                      <Label>Task</Label>
                      <Initializer>
                        <Constant Type="int">9888</Constant>
                      </Initializer>
                      <ParamName>tasks</ParamName>
                    </Param>
                    <Param>
                      <Label>TriggerType</Label>
                      <Identifier>ButtonRelease</Identifier>
                      <ParamName>eventType</ParamName>
                    </Param>
                    <Param>
                      <Label>Number</Label>
                      <Constant Type="int">1</Constant>
                      <ParamName>param1</ParamName>
                    </Param>
                  </Parameters>
                </FunctionCall>
              </StatementList>
              <Expanded>True</Expanded>
            </If>
            <Else disable="false">
              <StatementList>
                <FunctionCall>
                  <Name>LaunchTask</Name>
                  <Parameters>
                    <Param>
                      <Label>Task</Label>
                      <Initializer>
                        <Constant Type="int">9887</Constant>
                      </Initializer>
                      <ParamName>tasks</ParamName>
                    </Param>
                    <Param>
                      <Label>TriggerType</Label>
                      <Identifier>ButtonRelease</Identifier>
                      <ParamName>eventType</ParamName>
                    </Param>
                    <Param>
                      <Label>Number</Label>
                      <Constant Type="int">1</Constant>
                      <ParamName>param1</ParamName>
                    </Param>
                  </Parameters>
                </FunctionCall>
              </StatementList>
              <Expanded>True</Expanded>
            </Else>
            <QueryCall>
              <Name>AnyLoadsOn</Name>
              <Parameters>
                <Param>
                  <Label>Load</Label>
                  <Initializer>
                    <Constant Type="int">55</Constant>
                    <Constant Type="int">53</Constant>
                    <Constant Type="int">54</Constant>
                    <Constant Type="int">10197</Constant>
                  </Initializer>
                  <ParamName>loads</ParamName>
                </Param>
              </Parameters>
            </QueryCall>
          </FunctionBody>
        </Scene>
      </Module>
    </Object>
    <Object>
      <Task VID="9977" Master="9722" MTime="">
        <Name>En-Suite Toggle Scene 1</Name>
        <Model>En-Suite Toggle Scene 1</Model>
        <Note />
        <DName />
        <ObjectType>Task</ObjectType>
        <Category>9864</Category>
        <Procedure>
          <Target>10440</Target>
          <Function>SceneProgram_9977</Function>
          <Parameters />
        </Procedure>
        <Query>
          <Target>10168</Target>
          <Function>AnyLoadsOn</Function>
          <Parameters>
            <Param>0</Param>
          </Parameters>
        </Query>
        <Adjust>
          <Target>0</Target>
          <Function />
          <Parameters />
        </Adjust>
        <Level>
          <Target>0</Target>
          <Function />
          <Parameters />
        </Level>
        <ParamTable>
          <Param ID="0">
            <array>
              <val>10383</val>
              <val>86</val>
              <val>9306</val>
            </array>
          </Param>
        </ParamTable>
        <DependTable>
          <Param status="Load.GetLevel">0</Param>
        </DependTable>
      </Task>
      <Module>
        <Library Name="Programming\LaunchTasks" Local="true" />
        <Library Name="load" Local="false" />
        <Library Name="vantage" Local="false" />
        <Scene>
          <Name>SceneProgram_9977</Name>
          <Type>procedure</Type>
          <Parameters />
          <ParameterValues />
          <FunctionBody>
            <If disable="false">
              <LogicalExpression>
                <GivePrecedence>false</GivePrecedence>
                <Expanded>true</Expanded>
                <LogicalExpression>
                  <GivePrecedence>false</GivePrecedence>
                  <Expanded>true</Expanded>
                  <RelationalExpression>
                    <Operand>
                      <Label>Level</Label>
                      <FunctionCall>
                        <Name>Load_GetLevel</Name>
                        <Parameters>
                          <Param>
                            <Label>Load</Label>
                            <Constant Type="int">9306</Constant>
                            <ParamName>object</ParamName>
                          </Param>
                        </Parameters>
                      </FunctionCall>
                    </Operand>
                    <Operator>eq</Operator>
                    <Operand>
                      <Label>Level</Label>
                      <Constant Type="float">0.0</Constant>
                    </Operand>
                  </RelationalExpression>
                </LogicalExpression>
                <Operator>and</Operator>
                <LogicalExpression>
                  <GivePrecedence>false</GivePrecedence>
                  <Expanded>true</Expanded>
                  <LogicalExpression>
                    <GivePrecedence>false</GivePrecedence>
                    <Expanded>true</Expanded>
                    <RelationalExpression>
                      <Operand>
                        <Label>Level</Label>
                        <FunctionCall>
                          <Name>Load_GetLevel</Name>
                          <Parameters>
                            <Param>
                              <Label>Load</Label>
                              <Constant Type="int">86</Constant>
                              <ParamName>object</ParamName>
                            </Param>
                          </Parameters>
                        </FunctionCall>
                      </Operand>
                      <Operator>eq</Operator>
                      <Operand>
                        <Label>Level</Label>
                        <Constant Type="float">0.0</Constant>
                      </Operand>
                    </RelationalExpression>
                  </LogicalExpression>
                  <Operator>and</Operator>
                  <LogicalExpression>
                    <GivePrecedence>false</GivePrecedence>
                    <Expanded>true</Expanded>
                    <RelationalExpression>
                      <Operand>
                        <Label>Level</Label>
                        <FunctionCall>
                          <Name>Load_GetLevel</Name>
                          <Parameters>
                            <Param>
                              <Label>Load</Label>
                              <Constant Type="int">10383</Constant>
                              <ParamName>object</ParamName>
                            </Param>
                          </Parameters>
                        </FunctionCall>
                      </Operand>
                      <Operator>eq</Operator>
                      <Operand>
                        <Label>Level</Label>
                        <Constant Type="float">0.0</Constant>
                      </Operand>
                    </RelationalExpression>
                  </LogicalExpression>
                </LogicalExpression>
              </LogicalExpression>
              <StatementList>
                <FunctionCall disable="false">
                  <Name>LaunchTask</Name>
                  <Parameters>
                    <Param>
                      <Label>Task</Label>
                      <Initializer>
                        <Constant Type="int">9868</Constant>
                      </Initializer>
                      <ParamName>tasks</ParamName>
                    </Param>
                    <Param>
                      <Label>TriggerType</Label>
                      <Identifier>ButtonRelease</Identifier>
                      <ParamName>eventType</ParamName>
                    </Param>
                    <Param>
                      <Label>Number</Label>
                      <Constant Type="int">1</Constant>
                      <ParamName>param1</ParamName>
                    </Param>
                  </Parameters>
                </FunctionCall>
              </StatementList>
              <Expanded>True</Expanded>
            </If>
            <Else disable="false">
              <StatementList>
                <FunctionCall disable="false">
                  <Name>LaunchTask</Name>
                  <Parameters>
                    <Param>
                      <Label>Task</Label>
                      <Initializer>
                        <Constant Type="int">9866</Constant>
                      </Initializer>
                      <ParamName>tasks</ParamName>
                    </Param>
                    <Param>
                      <Label>TriggerType</Label>
                      <Identifier>ButtonRelease</Identifier>
                      <ParamName>eventType</ParamName>
                    </Param>
                    <Param>
                      <Label>Number</Label>
                      <Constant Type="int">1</Constant>
                      <ParamName>param1</ParamName>
                    </Param>
                  </Parameters>
                </FunctionCall>
              </StatementList>
              <Expanded>True</Expanded>
            </Else>
            <QueryCall>
              <Name>AnyLoadsOn</Name>
              <Parameters>
                <Param>
                  <Label>Load</Label>
                  <Initializer>
                    <Constant Type="int">10383</Constant>
                    <Constant Type="int">86</Constant>
                    <Constant Type="int">9306</Constant>
                  </Initializer>
                  <ParamName>loads</ParamName>
                </Param>
              </Parameters>
            </QueryCall>
          </FunctionBody>
        </Scene>
      </Module>
    </Object>
    <Object>
      <Task VID="9978" Master="9722" MTime="">
        <Name>Bed 2 Toggle Scene 1</Name>
        <Model>Bed 2 Toggle Scene 1</Model>
        <Note />
        <DName />
        <ObjectType>Task</ObjectType>
        <Category>9901</Category>
        <Procedure>
          <Target>10177</Target>
          <Function>SceneProgram_9978</Function>
          <Parameters />
        </Procedure>
        <Query>
          <Target>10168</Target>
          <Function>AnyLoadsOn</Function>
          <Parameters>
            <Param>0</Param>
          </Parameters>
        </Query>
        <Adjust>
          <Target>0</Target>
          <Function />
          <Parameters />
        </Adjust>
        <Level>
          <Target>0</Target>
          <Function />
          <Parameters />
        </Level>
        <ParamTable>
          <Param ID="0">
            <array>
              <val>58</val>
              <val>57</val>
              <val>56</val>
            </array>
          </Param>
        </ParamTable>
        <DependTable>
          <Param status="Load.GetLevel">0</Param>
        </DependTable>
      </Task>
      <Module>
        <Library Name="Programming\LaunchTasks" Local="true" />
        <Library Name="load" Local="false" />
        <Library Name="vantage" Local="false" />
        <Scene>
          <Name>SceneProgram_9978</Name>
          <Type>procedure</Type>
          <Parameters />
          <ParameterValues />
          <FunctionBody>
            <If disable="false">
              <LogicalExpression>
                <GivePrecedence>false</GivePrecedence>
                <Expanded>true</Expanded>
                <LogicalExpression>
                  <GivePrecedence>false</GivePrecedence>
                  <Expanded>true</Expanded>
                  <RelationalExpression>
                    <Operand>
                      <Label>Level</Label>
                      <FunctionCall>
                        <Name>Load_GetLevel</Name>
                        <Parameters>
                          <Param>
                            <Label>Load</Label>
                            <Constant Type="int">58</Constant>
                            <ParamName>object</ParamName>
                          </Param>
                        </Parameters>
                      </FunctionCall>
                    </Operand>
                    <Operator>eq</Operator>
                    <Operand>
                      <Label>Level</Label>
                      <Constant Type="float">0.0</Constant>
                    </Operand>
                  </RelationalExpression>
                </LogicalExpression>
                <Operator>and</Operator>
                <LogicalExpression>
                  <GivePrecedence>false</GivePrecedence>
                  <Expanded>true</Expanded>
                  <LogicalExpression>
                    <GivePrecedence>false</GivePrecedence>
                    <Expanded>true</Expanded>
                    <RelationalExpression>
                      <Operand>
                        <Label>Level</Label>
                        <FunctionCall>
                          <Name>Load_GetLevel</Name>
                          <Parameters>
                            <Param>
                              <Label>Load</Label>
                              <Constant Type="int">57</Constant>
                              <ParamName>object</ParamName>
                            </Param>
                          </Parameters>
                        </FunctionCall>
                      </Operand>
                      <Operator>eq</Operator>
                      <Operand>
                        <Label>Level</Label>
                        <Constant Type="float">0.0</Constant>
                      </Operand>
                    </RelationalExpression>
                  </LogicalExpression>
                  <Operator>and</Operator>
                  <LogicalExpression>
                    <GivePrecedence>false</GivePrecedence>
                    <Expanded>true</Expanded>
                    <RelationalExpression>
                      <Operand>
                        <Label>Level</Label>
                        <FunctionCall>
                          <Name>Load_GetLevel</Name>
                          <Parameters>
                            <Param>
                              <Label>Load</Label>
                              <Constant Type="int">56</Constant>
                              <ParamName>object</ParamName>
                            </Param>
                          </Parameters>
                        </FunctionCall>
                      </Operand>
                      <Operator>eq</Operator>
                      <Operand>
                        <Label>Level</Label>
                        <Constant Type="float">0.0</Constant>
                      </Operand>
                    </RelationalExpression>
                  </LogicalExpression>
                </LogicalExpression>
              </LogicalExpression>
              <StatementList>
                <FunctionCall disable="false">
                  <Name>LaunchTask</Name>
                  <Parameters>
                    <Param>
                      <Label>Task</Label>
                      <Initializer>
                        <Constant Type="int">9922</Constant>
                      </Initializer>
                      <ParamName>tasks</ParamName>
                    </Param>
                    <Param>
                      <Label>TriggerType</Label>
                      <Identifier>ButtonRelease</Identifier>
                      <ParamName>eventType</ParamName>
                    </Param>
                    <Param>
                      <Label>Number</Label>
                      <Constant Type="int">1</Constant>
                      <ParamName>param1</ParamName>
                    </Param>
                  </Parameters>
                </FunctionCall>
              </StatementList>
              <Expanded>True</Expanded>
            </If>
            <Else disable="false">
              <StatementList>
                <FunctionCall disable="false">
                  <Name>LaunchTask</Name>
                  <Parameters>
                    <Param>
                      <Label>Task</Label>
                      <Initializer>
                        <Constant Type="int">9921</Constant>
                      </Initializer>
                      <ParamName>tasks</ParamName>
                    </Param>
                    <Param>
                      <Label>TriggerType</Label>
                      <Identifier>ButtonRelease</Identifier>
                      <ParamName>eventType</ParamName>
                    </Param>
                    <Param>
                      <Label>Number</Label>
                      <Constant Type="int">1</Constant>
                      <ParamName>param1</ParamName>
                    </Param>
                  </Parameters>
                </FunctionCall>
              </StatementList>
              <Expanded>True</Expanded>
            </Else>
            <QueryCall>
              <Name>AnyLoadsOn</Name>
              <Parameters>
                <Param>
                  <Label>Load</Label>
                  <Initializer>
                    <Constant Type="int">58</Constant>
                    <Constant Type="int">57</Constant>
                    <Constant Type="int">56</Constant>
                  </Initializer>
                  <ParamName>loads</ParamName>
                </Param>
              </Parameters>
            </QueryCall>
          </FunctionBody>
        </Scene>
      </Module>
    </Object>
    <Object>
      <Task VID="9979" Master="9722" MTime="">
        <Name>Master Bed Off/All Off</Name>
        <Model>Master Bed Off/All Off</Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Task</ObjectType>
        <Category>9885</Category>
        <Procedure>
          <Target>10171</Target>
          <Function>PressAndHold</Function>
          <Parameters>
            <Param>0</Param>
            <Param>1</Param>
            <Param>2</Param>
            <Param>3</Param>
          </Parameters>
        </Procedure>
        <Query>
          <Target>10168</Target>
          <Function>AnyLoadsOn</Function>
          <Parameters>
            <Param>4</Param>
          </Parameters>
        </Query>
        <Adjust>
          <Target>0</Target>
          <Function />
          <Parameters />
        </Adjust>
        <Level>
          <Target>0</Target>
          <Function />
          <Parameters />
        </Level>
        <ParamTable>
          <Param ID="0">
            <array>
              <val>9887</val>
            </array>
          </Param>
          <Param ID="1">
            <array>
              <val>9954</val>
            </array>
          </Param>
          <Param ID="2">
            <val>0</val>
          </Param>
          <Param ID="3">
            <val>2</val>
          </Param>
          <Param ID="4">
            <array>
              <val>55</val>
              <val>53</val>
              <val>54</val>
              <val>10197</val>
            </array>
          </Param>
        </ParamTable>
        <DependTable>
          <Param status="Load.GetLevel">4</Param>
        </DependTable>
      </Task>
      <Module>
        <Library Name="Programming\LaunchTasks" Local="true" />
        <Library Name="vantage" Local="false" />
        <Scene>
          <Name>SceneProgram_9979</Name>
          <Type>procedure</Type>
          <Parameters />
          <ParameterValues />
          <FunctionBody>
            <FunctionCall disable="false">
              <Name>PressAndHold</Name>
              <Parameters>
                <Param>
                  <Label>Task</Label>
                  <Initializer>
                    <Constant Type="int">9887</Constant>
                  </Initializer>
                  <ParamName>pressTasks</ParamName>
                </Param>
                <Param>
                  <Label>Task</Label>
                  <Initializer>
                    <Constant Type="int">9954</Constant>
                  </Initializer>
                  <ParamName>holdTasks</ParamName>
                </Param>
                <Param>
                  <Label>TriggerType</Label>
                  <Identifier>ButtonRelease</Identifier>
                  <ParamName>pressEventType</ParamName>
                </Param>
                <Param>
                  <Label>TriggerType</Label>
                  <Identifier>ButtonHold</Identifier>
                  <ParamName>holdEventType</ParamName>
                </Param>
              </Parameters>
            </FunctionCall>
            <QueryCall>
              <Name>AnyLoadsOn</Name>
              <Parameters>
                <Param>
                  <Label>Load</Label>
                  <Initializer>
                    <Constant Type="int">55</Constant>
                    <Constant Type="int">53</Constant>
                    <Constant Type="int">54</Constant>
                    <Constant Type="int">10197</Constant>
                  </Initializer>
                  <ParamName>loads</ParamName>
                </Param>
              </Parameters>
            </QueryCall>
          </FunctionBody>
        </Scene>
      </Module>
    </Object>
    <Object>
      <Task VID="9980" Master="9722" MTime="">
        <Name>Bed 2 Off/All Off</Name>
        <Model>Bed 2 Off/All Off</Model>
        <Note />
        <DName />
        <ObjectType>Task</ObjectType>
        <Category>9901</Category>
        <Procedure>
          <Target>10171</Target>
          <Function>PressAndHold</Function>
          <Parameters>
            <Param>0</Param>
            <Param>1</Param>
            <Param>2</Param>
            <Param>3</Param>
          </Parameters>
        </Procedure>
        <Query>
          <Target>10168</Target>
          <Function>AnyLoadsOn</Function>
          <Parameters>
            <Param>4</Param>
          </Parameters>
        </Query>
        <Adjust>
          <Target>0</Target>
          <Function />
          <Parameters />
        </Adjust>
        <Level>
          <Target>0</Target>
          <Function />
          <Parameters />
        </Level>
        <ParamTable>
          <Param ID="0">
            <array>
              <val>9921</val>
            </array>
          </Param>
          <Param ID="1">
            <array>
              <val>9955</val>
            </array>
          </Param>
          <Param ID="2">
            <val>0</val>
          </Param>
          <Param ID="3">
            <val>2</val>
          </Param>
          <Param ID="4">
            <array>
              <val>57</val>
              <val>56</val>
              <val>58</val>
            </array>
          </Param>
        </ParamTable>
        <DependTable>
          <Param status="Load.GetLevel">4</Param>
        </DependTable>
      </Task>
      <Module>
        <Library Name="Programming\LaunchTasks" Local="true" />
        <Library Name="vantage" Local="false" />
        <Scene>
          <Name>SceneProgram_9980</Name>
          <Type>procedure</Type>
          <Parameters />
          <ParameterValues />
          <FunctionBody>
            <FunctionCall>
              <Name>PressAndHold</Name>
              <Parameters>
                <Param>
                  <Label>Task</Label>
                  <Initializer>
                    <Constant Type="int">9921</Constant>
                  </Initializer>
                  <ParamName>pressTasks</ParamName>
                </Param>
                <Param>
                  <Label>Task</Label>
                  <Initializer>
                    <Constant Type="int">9955</Constant>
                  </Initializer>
                  <ParamName>holdTasks</ParamName>
                </Param>
                <Param>
                  <Label>TriggerType</Label>
                  <Identifier>ButtonRelease</Identifier>
                  <ParamName>pressEventType</ParamName>
                </Param>
                <Param>
                  <Label>TriggerType</Label>
                  <Identifier>ButtonHold</Identifier>
                  <ParamName>holdEventType</ParamName>
                </Param>
              </Parameters>
            </FunctionCall>
            <QueryCall>
              <Name>AnyLoadsOn</Name>
              <Parameters>
                <Param>
                  <Label>Load</Label>
                  <Initializer>
                    <Constant Type="int">57</Constant>
                    <Constant Type="int">56</Constant>
                    <Constant Type="int">58</Constant>
                  </Initializer>
                  <ParamName>loads</ParamName>
                </Param>
              </Parameters>
            </QueryCall>
          </FunctionBody>
        </Scene>
      </Module>
    </Object>
    <Object>
      <Task VID="9981" Master="9722" MTime="">
        <Name>Living Toggle/Learn All</Name>
        <Model>Living Toggle/Learn All</Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Task</ObjectType>
        <Category>9903</Category>
        <Procedure>
          <Target>10171</Target>
          <Function>PressAndHold</Function>
          <Parameters>
            <Param>0</Param>
            <Param>1</Param>
            <Param>2</Param>
            <Param>3</Param>
          </Parameters>
        </Procedure>
        <Query>
          <Target>10170</Target>
          <Function>TaskQueryState</Function>
          <Parameters>
            <Param>0</Param>
          </Parameters>
        </Query>
        <Adjust>
          <Target>0</Target>
          <Function />
          <Parameters />
        </Adjust>
        <Level>
          <Target>0</Target>
          <Function />
          <Parameters />
        </Level>
        <ParamTable>
          <Param ID="0">
            <array>
              <val>9974</val>
            </array>
          </Param>
          <Param ID="1">
            <array>
              <val>9956</val>
            </array>
          </Param>
          <Param ID="2">
            <val>0</val>
          </Param>
          <Param ID="3">
            <val>2</val>
          </Param>
        </ParamTable>
        <DependTable>
          <Param status="Task.GetState">0</Param>
        </DependTable>
      </Task>
      <Module>
        <Library Name="Programming\LaunchTasks" Local="true" />
        <Library Name="vantage" Local="false" />
        <Scene>
          <Name>SceneProgram_9981</Name>
          <Type>procedure</Type>
          <Parameters />
          <ParameterValues />
          <FunctionBody>
            <FunctionCall disable="false">
              <Name>PressAndHold</Name>
              <Parameters>
                <Param>
                  <Label>Task</Label>
                  <Initializer>
                    <Constant Type="int">9974</Constant>
                  </Initializer>
                  <ParamName>pressTasks</ParamName>
                </Param>
                <Param>
                  <Label>Task</Label>
                  <Initializer>
                    <Constant Type="int">9956</Constant>
                  </Initializer>
                  <ParamName>holdTasks</ParamName>
                </Param>
                <Param>
                  <Label>TriggerType</Label>
                  <Identifier>ButtonRelease</Identifier>
                  <ParamName>pressEventType</ParamName>
                </Param>
                <Param>
                  <Label>TriggerType</Label>
                  <Identifier>ButtonHold</Identifier>
                  <ParamName>holdEventType</ParamName>
                </Param>
              </Parameters>
            </FunctionCall>
            <QueryCall>
              <Name>TaskQueryState</Name>
              <Parameters>
                <Param>
                  <Label>Task</Label>
                  <Initializer>
                    <Constant Type="int">9974</Constant>
                  </Initializer>
                  <ParamName>objects</ParamName>
                </Param>
              </Parameters>
            </QueryCall>
          </FunctionBody>
        </Scene>
      </Module>
    </Object>
    <Object>
      <Task VID="9982" Master="9722" MTime="">
        <Name>Living Spots</Name>
        <Model>Living Spots</Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Task</ObjectType>
        <Category>9903</Category>
        <Procedure>
          <Target>10175</Target>
          <Function>DimCycle</Function>
          <Parameters>
            <Param>0</Param>
            <Param>1</Param>
            <Param>2</Param>
            <Param>2</Param>
            <Param>3</Param>
            <Param>4</Param>
            <Param>5</Param>
            <Param>6</Param>
            <Param>7</Param>
          </Parameters>
        </Procedure>
        <Query>
          <Target>10168</Target>
          <Function>LoadsOn</Function>
          <Parameters>
            <Param>0</Param>
          </Parameters>
        </Query>
        <Adjust>
          <Target>10173</Target>
          <Function>AdjustLoads</Function>
          <Parameters>
            <Param>0</Param>
            <Param>3</Param>
            <Param>7</Param>
          </Parameters>
        </Adjust>
        <Level Max="100">
          <Target>10173</Target>
          <Function>AverageLoadLevel</Function>
          <Parameters>
            <Param>0</Param>
          </Parameters>
        </Level>
        <ParamTable>
          <Param ID="0">
            <array>
              <val>9307</val>
              <val>66</val>
            </array>
          </Param>
          <Param ID="1" Fixed="true">
            <array>
              <val>100</val>
              <val>100</val>
            </array>
          </Param>
          <Param ID="2" Fixed="true">
            <val>2</val>
          </Param>
          <Param ID="3" Fixed="true">
            <val>5</val>
          </Param>
          <Param ID="4">
            <val>1</val>
          </Param>
          <Param ID="5">
            <val>0</val>
          </Param>
          <Param ID="6">
            <val>0</val>
          </Param>
          <Param ID="7" Fixed="true">
            <val>10</val>
          </Param>
        </ParamTable>
        <DependTable>
          <Param status="Load.GetLevel">0</Param>
        </DependTable>
      </Task>
      <Module>
        <Library Name="Lighting\Dim" Local="true" />
        <Library Name="vantage" Local="false" />
        <Scene>
          <Name>SceneProgram_9982</Name>
          <Type>procedure</Type>
          <Parameters />
          <ParameterValues />
          <FunctionBody>
            <FunctionCall disable="false">
              <Name>DimCycle</Name>
              <Parameters>
                <Param>
                  <Label>Load</Label>
                  <Initializer>
                    <Constant Type="int">9307</Constant>
                    <Constant Type="int">66</Constant>
                  </Initializer>
                  <ParamName>loads</ParamName>
                </Param>
                <Param>
                  <Label>Level</Label>
                  <Initializer>
                    <Constant Type="float">100.0</Constant>
                    <Constant Type="float">100.0</Constant>
                  </Initializer>
                  <ParamName>levels</ParamName>
                </Param>
                <Param>
                  <Label>Seconds</Label>
                  <Constant Type="float">2.0</Constant>
                  <ParamName>rampTime</ParamName>
                </Param>
                <Param>
                  <Label>Seconds</Label>
                  <Constant Type="float">2.0</Constant>
                  <ParamName>fadeTime</ParamName>
                </Param>
                <Param>
                  <Label>Seconds</Label>
                  <Constant Type="float">5.0</Constant>
                  <ParamName>rampRate</ParamName>
                </Param>
                <Param>
                  <Label>bool</Label>
                  <Constant Type="bool">true</Constant>
                  <ParamName>trackLED</ParamName>
                </Param>
                <Param>
                  <Label>bool</Label>
                  <Constant Type="bool">false</Constant>
                  <ParamName>learnable</ParamName>
                </Param>
                <Param>
                  <Label>MemID</Label>
                  <Constant Type="int">0</Constant>
                  <ParamName>learnedLevels</ParamName>
                </Param>
                <Param>
                  <Label>Level</Label>
                  <Constant Type="float">10.0</Constant>
                  <ParamName>minLearnedLevel</ParamName>
                </Param>
              </Parameters>
            </FunctionCall>
            <QueryCall>
              <Name>LoadsOn</Name>
              <Parameters>
                <Param>
                  <Label>Load</Label>
                  <Initializer>
                    <Constant Type="int">9307</Constant>
                    <Constant Type="int">66</Constant>
                  </Initializer>
                  <ParamName>loads</ParamName>
                </Param>
              </Parameters>
            </QueryCall>
          </FunctionBody>
        </Scene>
      </Module>
    </Object>
    <Object>
      <Task VID="9983" Master="9722" MTime="">
        <Name>Living LED's</Name>
        <Model>Living LED's</Model>
        <Note />
        <DName />
        <ObjectType>Task</ObjectType>
        <Category>9903</Category>
        <Procedure>
          <Target>10175</Target>
          <Function>DimCycle</Function>
          <Parameters>
            <Param>0</Param>
            <Param>1</Param>
            <Param>2</Param>
            <Param>2</Param>
            <Param>3</Param>
            <Param>4</Param>
            <Param>5</Param>
            <Param>6</Param>
            <Param>7</Param>
          </Parameters>
        </Procedure>
        <Query>
          <Target>10168</Target>
          <Function>LoadsOn</Function>
          <Parameters>
            <Param>0</Param>
          </Parameters>
        </Query>
        <Adjust>
          <Target>10173</Target>
          <Function>AdjustLoads</Function>
          <Parameters>
            <Param>0</Param>
            <Param>3</Param>
            <Param>7</Param>
          </Parameters>
        </Adjust>
        <Level Max="100">
          <Target>10173</Target>
          <Function>AverageLoadLevel</Function>
          <Parameters>
            <Param>0</Param>
          </Parameters>
        </Level>
        <ParamTable>
          <Param ID="0">
            <array>
              <val>67</val>
            </array>
          </Param>
          <Param ID="1" Fixed="true">
            <array>
              <val>100</val>
            </array>
          </Param>
          <Param ID="2" Fixed="true">
            <val>2</val>
          </Param>
          <Param ID="3" Fixed="true">
            <val>5</val>
          </Param>
          <Param ID="4">
            <val>1</val>
          </Param>
          <Param ID="5">
            <val>0</val>
          </Param>
          <Param ID="6">
            <val>0</val>
          </Param>
          <Param ID="7" Fixed="true">
            <val>10</val>
          </Param>
        </ParamTable>
        <DependTable>
          <Param status="Load.GetLevel">0</Param>
        </DependTable>
      </Task>
      <Module>
        <Library Name="Lighting\Dim" Local="true" />
        <Library Name="vantage" Local="false" />
        <Scene>
          <Name>SceneProgram_9983</Name>
          <Type>procedure</Type>
          <Parameters />
          <ParameterValues />
          <FunctionBody>
            <FunctionCall>
              <Name>DimCycle</Name>
              <Parameters>
                <Param>
                  <Label>Load</Label>
                  <Initializer>
                    <Constant Type="int">67</Constant>
                  </Initializer>
                  <ParamName>loads</ParamName>
                </Param>
                <Param>
                  <Label>Level</Label>
                  <Initializer>
                    <Constant Type="float">100.0</Constant>
                  </Initializer>
                  <ParamName>levels</ParamName>
                </Param>
                <Param>
                  <Label>Seconds</Label>
                  <Constant Type="float">2.0</Constant>
                  <ParamName>rampTime</ParamName>
                </Param>
                <Param>
                  <Label>Seconds</Label>
                  <Constant Type="float">2.0</Constant>
                  <ParamName>fadeTime</ParamName>
                </Param>
                <Param>
                  <Label>Seconds</Label>
                  <Constant Type="float">5.0</Constant>
                  <ParamName>rampRate</ParamName>
                </Param>
                <Param>
                  <Label>bool</Label>
                  <Constant Type="bool">true</Constant>
                  <ParamName>trackLED</ParamName>
                </Param>
                <Param>
                  <Label>bool</Label>
                  <Constant Type="bool">false</Constant>
                  <ParamName>learnable</ParamName>
                </Param>
                <Param>
                  <Label>MemID</Label>
                  <Constant Type="int">0</Constant>
                  <ParamName>learnedLevels</ParamName>
                </Param>
                <Param>
                  <Label>Level</Label>
                  <Constant Type="float">10.0</Constant>
                  <ParamName>minLearnedLevel</ParamName>
                </Param>
              </Parameters>
            </FunctionCall>
            <QueryCall>
              <Name>LoadsOn</Name>
              <Parameters>
                <Param>
                  <Label>Load</Label>
                  <Initializer>
                    <Constant Type="int">67</Constant>
                  </Initializer>
                  <ParamName>loads</ParamName>
                </Param>
              </Parameters>
            </QueryCall>
          </FunctionBody>
        </Scene>
      </Module>
    </Object>
    <Object>
      <Task VID="9984" Master="9722" MTime="">
        <Name>Kitchen LED</Name>
        <Model>Kitchen LED</Model>
        <Note />
        <DName />
        <ObjectType>Task</ObjectType>
        <Category>9904</Category>
        <Procedure>
          <Target>10175</Target>
          <Function>DimCycle</Function>
          <Parameters>
            <Param>0</Param>
            <Param>1</Param>
            <Param>2</Param>
            <Param>3</Param>
            <Param>4</Param>
            <Param>5</Param>
            <Param>6</Param>
            <Param>7</Param>
            <Param>8</Param>
          </Parameters>
        </Procedure>
        <Query>
          <Target>10168</Target>
          <Function>LoadsOn</Function>
          <Parameters>
            <Param>0</Param>
          </Parameters>
        </Query>
        <Adjust>
          <Target>10173</Target>
          <Function>AdjustLoads</Function>
          <Parameters>
            <Param>0</Param>
            <Param>4</Param>
            <Param>8</Param>
          </Parameters>
        </Adjust>
        <Level Max="100">
          <Target>10173</Target>
          <Function>AverageLoadLevel</Function>
          <Parameters>
            <Param>0</Param>
          </Parameters>
        </Level>
        <ParamTable>
          <Param ID="0">
            <array>
              <val>83</val>
            </array>
          </Param>
          <Param ID="1" Fixed="true">
            <array>
              <val>100</val>
            </array>
          </Param>
          <Param ID="2" Fixed="true">
            <val>1</val>
          </Param>
          <Param ID="3" Fixed="true">
            <val>3</val>
          </Param>
          <Param ID="4" Fixed="true">
            <val>5</val>
          </Param>
          <Param ID="5">
            <val>1</val>
          </Param>
          <Param ID="6">
            <val>0</val>
          </Param>
          <Param ID="7">
            <val>0</val>
          </Param>
          <Param ID="8" Fixed="true">
            <val>10</val>
          </Param>
        </ParamTable>
        <DependTable>
          <Param status="Load.GetLevel">0</Param>
        </DependTable>
      </Task>
      <Module>
        <Library Name="Lighting\Dim" Local="true" />
        <Library Name="vantage" Local="false" />
        <Scene>
          <Name>SceneProgram_9984</Name>
          <Type>procedure</Type>
          <Parameters />
          <ParameterValues />
          <FunctionBody>
            <FunctionCall disable="false">
              <Name>DimCycle</Name>
              <Parameters>
                <Param>
                  <Label>Load</Label>
                  <Initializer>
                    <Constant Type="int">83</Constant>
                  </Initializer>
                  <ParamName>loads</ParamName>
                </Param>
                <Param>
                  <Label>Level</Label>
                  <Initializer>
                    <Constant Type="float">100.0</Constant>
                  </Initializer>
                  <ParamName>levels</ParamName>
                </Param>
                <Param>
                  <Label>Seconds</Label>
                  <Constant Type="float">1.0</Constant>
                  <ParamName>rampTime</ParamName>
                </Param>
                <Param>
                  <Label>Seconds</Label>
                  <Constant Type="float">3.0</Constant>
                  <ParamName>fadeTime</ParamName>
                </Param>
                <Param>
                  <Label>Seconds</Label>
                  <Constant Type="float">5.0</Constant>
                  <ParamName>rampRate</ParamName>
                </Param>
                <Param>
                  <Label>bool</Label>
                  <Constant Type="bool">true</Constant>
                  <ParamName>trackLED</ParamName>
                </Param>
                <Param>
                  <Label>bool</Label>
                  <Constant Type="bool">false</Constant>
                  <ParamName>learnable</ParamName>
                </Param>
                <Param>
                  <Label>MemID</Label>
                  <Constant Type="int">0</Constant>
                  <ParamName>learnedLevels</ParamName>
                </Param>
                <Param>
                  <Label>Level</Label>
                  <Constant Type="float">10.0</Constant>
                  <ParamName>minLearnedLevel</ParamName>
                </Param>
              </Parameters>
            </FunctionCall>
            <QueryCall>
              <Name>LoadsOn</Name>
              <Parameters>
                <Param>
                  <Label>Load</Label>
                  <Initializer>
                    <Constant Type="int">83</Constant>
                  </Initializer>
                  <ParamName>loads</ParamName>
                </Param>
              </Parameters>
            </QueryCall>
          </FunctionBody>
        </Scene>
      </Module>
    </Object>
    <Object>
      <Task VID="9985" Master="9722" MTime="">
        <Name>Kitchen Spots</Name>
        <Model>Kitchen Spots</Model>
        <Note />
        <DName />
        <ObjectType>Task</ObjectType>
        <Category>9904</Category>
        <Procedure>
          <Target>10175</Target>
          <Function>DimCycle</Function>
          <Parameters>
            <Param>0</Param>
            <Param>1</Param>
            <Param>2</Param>
            <Param>2</Param>
            <Param>3</Param>
            <Param>4</Param>
            <Param>5</Param>
            <Param>6</Param>
            <Param>7</Param>
          </Parameters>
        </Procedure>
        <Query>
          <Target>10168</Target>
          <Function>LoadsOn</Function>
          <Parameters>
            <Param>0</Param>
          </Parameters>
        </Query>
        <Adjust>
          <Target>10173</Target>
          <Function>AdjustLoads</Function>
          <Parameters>
            <Param>0</Param>
            <Param>3</Param>
            <Param>7</Param>
          </Parameters>
        </Adjust>
        <Level Max="100">
          <Target>10173</Target>
          <Function>AverageLoadLevel</Function>
          <Parameters>
            <Param>0</Param>
          </Parameters>
        </Level>
        <ParamTable>
          <Param ID="0">
            <array>
              <val>10384</val>
              <val>70</val>
            </array>
          </Param>
          <Param ID="1" Fixed="true">
            <array>
              <val>100</val>
              <val>100</val>
            </array>
          </Param>
          <Param ID="2" Fixed="true">
            <val>2</val>
          </Param>
          <Param ID="3" Fixed="true">
            <val>5</val>
          </Param>
          <Param ID="4">
            <val>1</val>
          </Param>
          <Param ID="5">
            <val>0</val>
          </Param>
          <Param ID="6">
            <val>0</val>
          </Param>
          <Param ID="7" Fixed="true">
            <val>10</val>
          </Param>
        </ParamTable>
        <DependTable>
          <Param status="Load.GetLevel">0</Param>
        </DependTable>
      </Task>
      <Module>
        <Library Name="Lighting\Dim" Local="true" />
        <Library Name="vantage" Local="false" />
        <Scene>
          <Name>SceneProgram_9985</Name>
          <Type>procedure</Type>
          <Parameters />
          <ParameterValues />
          <FunctionBody>
            <FunctionCall disable="false">
              <Name>DimCycle</Name>
              <Parameters>
                <Param>
                  <Label>Load</Label>
                  <Initializer>
                    <Constant Type="int">10384</Constant>
                    <Constant Type="int">70</Constant>
                  </Initializer>
                  <ParamName>loads</ParamName>
                </Param>
                <Param>
                  <Label>Level</Label>
                  <Initializer>
                    <Constant Type="float">100.0</Constant>
                    <Constant Type="float">100.0</Constant>
                  </Initializer>
                  <ParamName>levels</ParamName>
                </Param>
                <Param>
                  <Label>Seconds</Label>
                  <Constant Type="float">2.0</Constant>
                  <ParamName>rampTime</ParamName>
                </Param>
                <Param>
                  <Label>Seconds</Label>
                  <Constant Type="float">2.0</Constant>
                  <ParamName>fadeTime</ParamName>
                </Param>
                <Param>
                  <Label>Seconds</Label>
                  <Constant Type="float">5.0</Constant>
                  <ParamName>rampRate</ParamName>
                </Param>
                <Param>
                  <Label>bool</Label>
                  <Constant Type="bool">true</Constant>
                  <ParamName>trackLED</ParamName>
                </Param>
                <Param>
                  <Label>bool</Label>
                  <Constant Type="bool">false</Constant>
                  <ParamName>learnable</ParamName>
                </Param>
                <Param>
                  <Label>MemID</Label>
                  <Constant Type="int">0</Constant>
                  <ParamName>learnedLevels</ParamName>
                </Param>
                <Param>
                  <Label>Level</Label>
                  <Constant Type="float">10.0</Constant>
                  <ParamName>minLearnedLevel</ParamName>
                </Param>
              </Parameters>
            </FunctionCall>
            <QueryCall>
              <Name>LoadsOn</Name>
              <Parameters>
                <Param>
                  <Label>Load</Label>
                  <Initializer>
                    <Constant Type="int">10384</Constant>
                    <Constant Type="int">70</Constant>
                  </Initializer>
                  <ParamName>loads</ParamName>
                </Param>
              </Parameters>
            </QueryCall>
          </FunctionBody>
        </Scene>
      </Module>
    </Object>
    <Object>
      <Task VID="9986" Master="9722" MTime="">
        <Name>Master Bedroom LED</Name>
        <Model>Master Bedroom LED</Model>
        <Note />
        <DName />
        <ObjectType>Task</ObjectType>
        <Category>9885</Category>
        <Procedure>
          <Target>10175</Target>
          <Function>DimCycle</Function>
          <Parameters>
            <Param>0</Param>
            <Param>1</Param>
            <Param>2</Param>
            <Param>2</Param>
            <Param>3</Param>
            <Param>4</Param>
            <Param>5</Param>
            <Param>6</Param>
            <Param>7</Param>
          </Parameters>
        </Procedure>
        <Query>
          <Target>10168</Target>
          <Function>LoadsOn</Function>
          <Parameters>
            <Param>0</Param>
          </Parameters>
        </Query>
        <Adjust>
          <Target>10173</Target>
          <Function>AdjustLoads</Function>
          <Parameters>
            <Param>0</Param>
            <Param>3</Param>
            <Param>7</Param>
          </Parameters>
        </Adjust>
        <Level Max="100">
          <Target>10173</Target>
          <Function>AverageLoadLevel</Function>
          <Parameters>
            <Param>0</Param>
          </Parameters>
        </Level>
        <ParamTable>
          <Param ID="0">
            <array>
              <val>54</val>
            </array>
          </Param>
          <Param ID="1" Fixed="true">
            <array>
              <val>100</val>
            </array>
          </Param>
          <Param ID="2" Fixed="true">
            <val>2</val>
          </Param>
          <Param ID="3" Fixed="true">
            <val>5</val>
          </Param>
          <Param ID="4">
            <val>1</val>
          </Param>
          <Param ID="5">
            <val>0</val>
          </Param>
          <Param ID="6">
            <val>0</val>
          </Param>
          <Param ID="7" Fixed="true">
            <val>10</val>
          </Param>
        </ParamTable>
        <DependTable>
          <Param status="Load.GetLevel">0</Param>
        </DependTable>
      </Task>
      <Module>
        <Library Name="Lighting\Dim" Local="true" />
        <Library Name="vantage" Local="false" />
        <Scene>
          <Name>SceneProgram_9986</Name>
          <Type>procedure</Type>
          <Parameters />
          <ParameterValues />
          <FunctionBody>
            <FunctionCall disable="false">
              <Name>DimCycle</Name>
              <Parameters>
                <Param>
                  <Label>Load</Label>
                  <Initializer>
                    <Constant Type="int">54</Constant>
                  </Initializer>
                  <ParamName>loads</ParamName>
                </Param>
                <Param>
                  <Label>Level</Label>
                  <Initializer>
                    <Constant Type="float">100.0</Constant>
                  </Initializer>
                  <ParamName>levels</ParamName>
                </Param>
                <Param>
                  <Label>Seconds</Label>
                  <Constant Type="float">2.0</Constant>
                  <ParamName>rampTime</ParamName>
                </Param>
                <Param>
                  <Label>Seconds</Label>
                  <Constant Type="float">2.0</Constant>
                  <ParamName>fadeTime</ParamName>
                </Param>
                <Param>
                  <Label>Seconds</Label>
                  <Constant Type="float">5.0</Constant>
                  <ParamName>rampRate</ParamName>
                </Param>
                <Param>
                  <Label>bool</Label>
                  <Constant Type="bool">true</Constant>
                  <ParamName>trackLED</ParamName>
                </Param>
                <Param>
                  <Label>bool</Label>
                  <Constant Type="bool">false</Constant>
                  <ParamName>learnable</ParamName>
                </Param>
                <Param>
                  <Label>MemID</Label>
                  <Constant Type="int">0</Constant>
                  <ParamName>learnedLevels</ParamName>
                </Param>
                <Param>
                  <Label>Level</Label>
                  <Constant Type="float">10.0</Constant>
                  <ParamName>minLearnedLevel</ParamName>
                </Param>
              </Parameters>
            </FunctionCall>
            <QueryCall>
              <Name>LoadsOn</Name>
              <Parameters>
                <Param>
                  <Label>Load</Label>
                  <Initializer>
                    <Constant Type="int">54</Constant>
                  </Initializer>
                  <ParamName>loads</ParamName>
                </Param>
              </Parameters>
            </QueryCall>
          </FunctionBody>
        </Scene>
      </Module>
    </Object>
    <Object>
      <Task VID="9987" Master="9722" MTime="">
        <Name>Master Bedroom Spots</Name>
        <Model>Master Bedroom Spots</Model>
        <Note />
        <DName />
        <ObjectType>Task</ObjectType>
        <Category>9885</Category>
        <Procedure>
          <Target>10175</Target>
          <Function>DimCycle</Function>
          <Parameters>
            <Param>0</Param>
            <Param>1</Param>
            <Param>2</Param>
            <Param>3</Param>
            <Param>4</Param>
            <Param>5</Param>
            <Param>6</Param>
            <Param>7</Param>
            <Param>8</Param>
          </Parameters>
        </Procedure>
        <Query>
          <Target>10168</Target>
          <Function>LoadsOn</Function>
          <Parameters>
            <Param>0</Param>
          </Parameters>
        </Query>
        <Adjust>
          <Target>10173</Target>
          <Function>AdjustLoads</Function>
          <Parameters>
            <Param>0</Param>
            <Param>4</Param>
            <Param>8</Param>
          </Parameters>
        </Adjust>
        <Level Max="100">
          <Target>10173</Target>
          <Function>AverageLoadLevel</Function>
          <Parameters>
            <Param>0</Param>
          </Parameters>
        </Level>
        <ParamTable>
          <Param ID="0">
            <array>
              <val>55</val>
              <val>53</val>
            </array>
          </Param>
          <Param ID="1" Fixed="true">
            <array>
              <val>100</val>
              <val>100</val>
            </array>
          </Param>
          <Param ID="2" Fixed="true">
            <val>1</val>
          </Param>
          <Param ID="3" Fixed="true">
            <val>2</val>
          </Param>
          <Param ID="4" Fixed="true">
            <val>5</val>
          </Param>
          <Param ID="5">
            <val>1</val>
          </Param>
          <Param ID="6">
            <val>0</val>
          </Param>
          <Param ID="7">
            <val>0</val>
          </Param>
          <Param ID="8" Fixed="true">
            <val>10</val>
          </Param>
        </ParamTable>
        <DependTable>
          <Param status="Load.GetLevel">0</Param>
        </DependTable>
      </Task>
      <Module>
        <Library Name="Lighting\Dim" Local="true" />
        <Library Name="vantage" Local="false" />
        <Scene>
          <Name>SceneProgram_9987</Name>
          <Type>procedure</Type>
          <Parameters />
          <ParameterValues />
          <FunctionBody>
            <FunctionCall disable="false">
              <Name>DimCycle</Name>
              <Parameters>
                <Param>
                  <Label>Load</Label>
                  <Initializer>
                    <Constant Type="int">55</Constant>
                    <Constant Type="int">53</Constant>
                  </Initializer>
                  <ParamName>loads</ParamName>
                </Param>
                <Param>
                  <Label>Level</Label>
                  <Initializer>
                    <Constant Type="float">100.0</Constant>
                    <Constant Type="float">100.0</Constant>
                  </Initializer>
                  <ParamName>levels</ParamName>
                </Param>
                <Param>
                  <Label>Seconds</Label>
                  <Constant Type="float">1.0</Constant>
                  <ParamName>rampTime</ParamName>
                </Param>
                <Param>
                  <Label>Seconds</Label>
                  <Constant Type="float">2.0</Constant>
                  <ParamName>fadeTime</ParamName>
                </Param>
                <Param>
                  <Label>Seconds</Label>
                  <Constant Type="float">5.0</Constant>
                  <ParamName>rampRate</ParamName>
                </Param>
                <Param>
                  <Label>bool</Label>
                  <Constant Type="bool">true</Constant>
                  <ParamName>trackLED</ParamName>
                </Param>
                <Param>
                  <Label>bool</Label>
                  <Constant Type="bool">false</Constant>
                  <ParamName>learnable</ParamName>
                </Param>
                <Param>
                  <Label>MemID</Label>
                  <Constant Type="int">0</Constant>
                  <ParamName>learnedLevels</ParamName>
                </Param>
                <Param>
                  <Label>Level</Label>
                  <Constant Type="float">10.0</Constant>
                  <ParamName>minLearnedLevel</ParamName>
                </Param>
              </Parameters>
            </FunctionCall>
            <QueryCall>
              <Name>LoadsOn</Name>
              <Parameters>
                <Param>
                  <Label>Load</Label>
                  <Initializer>
                    <Constant Type="int">55</Constant>
                    <Constant Type="int">53</Constant>
                  </Initializer>
                  <ParamName>loads</ParamName>
                </Param>
              </Parameters>
            </QueryCall>
          </FunctionBody>
        </Scene>
      </Module>
    </Object>
    <Object>
      <Button VID="9988" Master="9722" MTime="" Position="" Adjust="Full" MaxLevel="100">
        <Name>Spots</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Button</ObjectType>
        <Parent Position="2">9804</Parent>
        <Down>9992</Down>
        <Up>9992</Up>
        <Hold>9992</Hold>
        <Text1>Spots</Text1>
        <Text2>
        </Text2>
        <PlacementTable>
        </PlacementTable>
        <ButtonStyle>119</ButtonStyle>
        <LEDStyle>120</LEDStyle>
      </Button>
    </Object>
    <Object>
      <Button VID="9989" Master="9722" MTime="" Position="" Adjust="Full" MaxLevel="100">
        <Name>Mirror</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Button</ObjectType>
        <Parent Position="5">9804</Parent>
        <Down>9993</Down>
        <Up>9993</Up>
        <Hold>9993</Hold>
        <Text1>Mirror</Text1>
        <Text2>
        </Text2>
        <PlacementTable>
        </PlacementTable>
        <ButtonStyle>119</ButtonStyle>
        <LEDStyle>120</LEDStyle>
      </Button>
    </Object>
    <Object>
      <Button VID="9990" Master="9722" MTime="" Position="" Adjust="None" MaxLevel="100">
        <Name>
        </Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Button</ObjectType>
        <Parent Position="8">9804</Parent>
        <Down>0</Down>
        <Up>0</Up>
        <Hold>0</Hold>
        <Text1>
        </Text1>
        <Text2>
        </Text2>
        <PlacementTable>
        </PlacementTable>
        <ButtonStyle>119</ButtonStyle>
        <LEDStyle>120</LEDStyle>
      </Button>
    </Object>
    <Object>
      <Task VID="9992" Master="9722" MTime="">
        <Name>En-Suite Spots</Name>
        <Model>En-Suite Spots</Model>
        <Note />
        <DName />
        <ObjectType>Task</ObjectType>
        <Category>9864</Category>
        <Procedure>
          <Target>10175</Target>
          <Function>DimCycle</Function>
          <Parameters>
            <Param>0</Param>
            <Param>1</Param>
            <Param>2</Param>
            <Param>2</Param>
            <Param>3</Param>
            <Param>4</Param>
            <Param>5</Param>
            <Param>6</Param>
            <Param>7</Param>
          </Parameters>
        </Procedure>
        <Query>
          <Target>10168</Target>
          <Function>LoadsOn</Function>
          <Parameters>
            <Param>0</Param>
          </Parameters>
        </Query>
        <Adjust>
          <Target>10173</Target>
          <Function>AdjustLoads</Function>
          <Parameters>
            <Param>0</Param>
            <Param>3</Param>
            <Param>7</Param>
          </Parameters>
        </Adjust>
        <Level Max="100">
          <Target>10173</Target>
          <Function>AverageLoadLevel</Function>
          <Parameters>
            <Param>0</Param>
          </Parameters>
        </Level>
        <ParamTable>
          <Param ID="0">
            <array>
              <val>10383</val>
              <val>9306</val>
            </array>
          </Param>
          <Param ID="1" Fixed="true">
            <array>
              <val>100</val>
              <val>100</val>
            </array>
          </Param>
          <Param ID="2" Fixed="true">
            <val>2</val>
          </Param>
          <Param ID="3" Fixed="true">
            <val>5</val>
          </Param>
          <Param ID="4">
            <val>1</val>
          </Param>
          <Param ID="5">
            <val>0</val>
          </Param>
          <Param ID="6">
            <val>0</val>
          </Param>
          <Param ID="7" Fixed="true">
            <val>10</val>
          </Param>
        </ParamTable>
        <DependTable>
          <Param status="Load.GetLevel">0</Param>
        </DependTable>
      </Task>
      <Module>
        <Library Name="Lighting\Dim" Local="true" />
        <Library Name="vantage" Local="false" />
        <Scene>
          <Name>SceneProgram_9992</Name>
          <Type>procedure</Type>
          <Parameters />
          <ParameterValues />
          <FunctionBody>
            <FunctionCall disable="false">
              <Name>DimCycle</Name>
              <Parameters>
                <Param>
                  <Label>Load</Label>
                  <Initializer>
                    <Constant Type="int">10383</Constant>
                    <Constant Type="int">9306</Constant>
                  </Initializer>
                  <ParamName>loads</ParamName>
                </Param>
                <Param>
                  <Label>Level</Label>
                  <Initializer>
                    <Constant Type="float">100.0</Constant>
                    <Constant Type="float">100.0</Constant>
                  </Initializer>
                  <ParamName>levels</ParamName>
                </Param>
                <Param>
                  <Label>Seconds</Label>
                  <Constant Type="float">2.0</Constant>
                  <ParamName>rampTime</ParamName>
                </Param>
                <Param>
                  <Label>Seconds</Label>
                  <Constant Type="float">2.0</Constant>
                  <ParamName>fadeTime</ParamName>
                </Param>
                <Param>
                  <Label>Seconds</Label>
                  <Constant Type="float">5.0</Constant>
                  <ParamName>rampRate</ParamName>
                </Param>
                <Param>
                  <Label>bool</Label>
                  <Constant Type="bool">true</Constant>
                  <ParamName>trackLED</ParamName>
                </Param>
                <Param>
                  <Label>bool</Label>
                  <Constant Type="bool">false</Constant>
                  <ParamName>learnable</ParamName>
                </Param>
                <Param>
                  <Label>MemID</Label>
                  <Constant Type="int">0</Constant>
                  <ParamName>learnedLevels</ParamName>
                </Param>
                <Param>
                  <Label>Level</Label>
                  <Constant Type="float">10.0</Constant>
                  <ParamName>minLearnedLevel</ParamName>
                </Param>
              </Parameters>
            </FunctionCall>
            <QueryCall>
              <Name>LoadsOn</Name>
              <Parameters>
                <Param>
                  <Label>Load</Label>
                  <Initializer>
                    <Constant Type="int">10383</Constant>
                    <Constant Type="int">9306</Constant>
                  </Initializer>
                  <ParamName>loads</ParamName>
                </Param>
              </Parameters>
            </QueryCall>
          </FunctionBody>
        </Scene>
      </Module>
    </Object>
    <Object>
      <Task VID="9993" Master="9722" MTime="">
        <Name>En-Suite Mirror</Name>
        <Model>En-Suite Mirror</Model>
        <Note />
        <DName />
        <ObjectType>Task</ObjectType>
        <Category>9864</Category>
        <Procedure>
          <Target>10175</Target>
          <Function>DimCycle</Function>
          <Parameters>
            <Param>0</Param>
            <Param>1</Param>
            <Param>2</Param>
            <Param>2</Param>
            <Param>3</Param>
            <Param>4</Param>
            <Param>5</Param>
            <Param>6</Param>
            <Param>7</Param>
          </Parameters>
        </Procedure>
        <Query>
          <Target>10168</Target>
          <Function>LoadsOn</Function>
          <Parameters>
            <Param>0</Param>
          </Parameters>
        </Query>
        <Adjust>
          <Target>10173</Target>
          <Function>AdjustLoads</Function>
          <Parameters>
            <Param>0</Param>
            <Param>3</Param>
            <Param>7</Param>
          </Parameters>
        </Adjust>
        <Level Max="100">
          <Target>10173</Target>
          <Function>AverageLoadLevel</Function>
          <Parameters>
            <Param>0</Param>
          </Parameters>
        </Level>
        <ParamTable>
          <Param ID="0">
            <array>
              <val>86</val>
            </array>
          </Param>
          <Param ID="1" Fixed="true">
            <array>
              <val>100</val>
            </array>
          </Param>
          <Param ID="2" Fixed="true">
            <val>2</val>
          </Param>
          <Param ID="3" Fixed="true">
            <val>5</val>
          </Param>
          <Param ID="4">
            <val>1</val>
          </Param>
          <Param ID="5">
            <val>0</val>
          </Param>
          <Param ID="6">
            <val>0</val>
          </Param>
          <Param ID="7" Fixed="true">
            <val>10</val>
          </Param>
        </ParamTable>
        <DependTable>
          <Param status="Load.GetLevel">0</Param>
        </DependTable>
      </Task>
      <Module>
        <Library Name="Lighting\Dim" Local="true" />
        <Library Name="vantage" Local="false" />
        <Scene>
          <Name>SceneProgram_9993</Name>
          <Type>procedure</Type>
          <Parameters />
          <ParameterValues />
          <FunctionBody>
            <FunctionCall disable="false">
              <Name>DimCycle</Name>
              <Parameters>
                <Param>
                  <Label>Load</Label>
                  <Initializer>
                    <Constant Type="int">86</Constant>
                  </Initializer>
                  <ParamName>loads</ParamName>
                </Param>
                <Param>
                  <Label>Level</Label>
                  <Initializer>
                    <Constant Type="float">100.0</Constant>
                  </Initializer>
                  <ParamName>levels</ParamName>
                </Param>
                <Param>
                  <Label>Seconds</Label>
                  <Constant Type="float">2.0</Constant>
                  <ParamName>rampTime</ParamName>
                </Param>
                <Param>
                  <Label>Seconds</Label>
                  <Constant Type="float">2.0</Constant>
                  <ParamName>fadeTime</ParamName>
                </Param>
                <Param>
                  <Label>Seconds</Label>
                  <Constant Type="float">5.0</Constant>
                  <ParamName>rampRate</ParamName>
                </Param>
                <Param>
                  <Label>bool</Label>
                  <Constant Type="bool">true</Constant>
                  <ParamName>trackLED</ParamName>
                </Param>
                <Param>
                  <Label>bool</Label>
                  <Constant Type="bool">false</Constant>
                  <ParamName>learnable</ParamName>
                </Param>
                <Param>
                  <Label>MemID</Label>
                  <Constant Type="int">0</Constant>
                  <ParamName>learnedLevels</ParamName>
                </Param>
                <Param>
                  <Label>Level</Label>
                  <Constant Type="float">10.0</Constant>
                  <ParamName>minLearnedLevel</ParamName>
                </Param>
              </Parameters>
            </FunctionCall>
            <QueryCall>
              <Name>LoadsOn</Name>
              <Parameters>
                <Param>
                  <Label>Load</Label>
                  <Initializer>
                    <Constant Type="int">86</Constant>
                  </Initializer>
                  <ParamName>loads</ParamName>
                </Param>
              </Parameters>
            </QueryCall>
          </FunctionBody>
        </Scene>
      </Module>
    </Object>
    <Object>
      <Task VID="9994" Master="9722" MTime="">
        <Name>Bed 2 LED</Name>
        <Model>Bed 2 LED</Model>
        <Note />
        <DName />
        <ObjectType>Task</ObjectType>
        <Category>9901</Category>
        <Procedure>
          <Target>10175</Target>
          <Function>DimCycle</Function>
          <Parameters>
            <Param>0</Param>
            <Param>1</Param>
            <Param>2</Param>
            <Param>2</Param>
            <Param>3</Param>
            <Param>4</Param>
            <Param>5</Param>
            <Param>6</Param>
            <Param>7</Param>
          </Parameters>
        </Procedure>
        <Query>
          <Target>10168</Target>
          <Function>LoadsOn</Function>
          <Parameters>
            <Param>0</Param>
          </Parameters>
        </Query>
        <Adjust>
          <Target>10173</Target>
          <Function>AdjustLoads</Function>
          <Parameters>
            <Param>0</Param>
            <Param>3</Param>
            <Param>7</Param>
          </Parameters>
        </Adjust>
        <Level Max="100">
          <Target>10173</Target>
          <Function>AverageLoadLevel</Function>
          <Parameters>
            <Param>0</Param>
          </Parameters>
        </Level>
        <ParamTable>
          <Param ID="0">
            <array>
              <val>58</val>
            </array>
          </Param>
          <Param ID="1" Fixed="true">
            <array>
              <val>100</val>
            </array>
          </Param>
          <Param ID="2" Fixed="true">
            <val>2</val>
          </Param>
          <Param ID="3" Fixed="true">
            <val>5</val>
          </Param>
          <Param ID="4">
            <val>1</val>
          </Param>
          <Param ID="5">
            <val>0</val>
          </Param>
          <Param ID="6">
            <val>0</val>
          </Param>
          <Param ID="7" Fixed="true">
            <val>10</val>
          </Param>
        </ParamTable>
        <DependTable>
          <Param status="Load.GetLevel">0</Param>
        </DependTable>
      </Task>
      <Module>
        <Library Name="Lighting\Dim" Local="true" />
        <Library Name="vantage" Local="false" />
        <Scene>
          <Name>SceneProgram_9994</Name>
          <Type>procedure</Type>
          <Parameters />
          <ParameterValues />
          <FunctionBody>
            <FunctionCall disable="false">
              <Name>DimCycle</Name>
              <Parameters>
                <Param>
                  <Label>Load</Label>
                  <Initializer>
                    <Constant Type="int">58</Constant>
                  </Initializer>
                  <ParamName>loads</ParamName>
                </Param>
                <Param>
                  <Label>Level</Label>
                  <Initializer>
                    <Constant Type="float">100.0</Constant>
                  </Initializer>
                  <ParamName>levels</ParamName>
                </Param>
                <Param>
                  <Label>Seconds</Label>
                  <Constant Type="float">2.0</Constant>
                  <ParamName>rampTime</ParamName>
                </Param>
                <Param>
                  <Label>Seconds</Label>
                  <Constant Type="float">2.0</Constant>
                  <ParamName>fadeTime</ParamName>
                </Param>
                <Param>
                  <Label>Seconds</Label>
                  <Constant Type="float">5.0</Constant>
                  <ParamName>rampRate</ParamName>
                </Param>
                <Param>
                  <Label>bool</Label>
                  <Constant Type="bool">true</Constant>
                  <ParamName>trackLED</ParamName>
                </Param>
                <Param>
                  <Label>bool</Label>
                  <Constant Type="bool">false</Constant>
                  <ParamName>learnable</ParamName>
                </Param>
                <Param>
                  <Label>MemID</Label>
                  <Constant Type="int">0</Constant>
                  <ParamName>learnedLevels</ParamName>
                </Param>
                <Param>
                  <Label>Level</Label>
                  <Constant Type="float">10.0</Constant>
                  <ParamName>minLearnedLevel</ParamName>
                </Param>
              </Parameters>
            </FunctionCall>
            <QueryCall>
              <Name>LoadsOn</Name>
              <Parameters>
                <Param>
                  <Label>Load</Label>
                  <Initializer>
                    <Constant Type="int">58</Constant>
                  </Initializer>
                  <ParamName>loads</ParamName>
                </Param>
              </Parameters>
            </QueryCall>
          </FunctionBody>
        </Scene>
      </Module>
    </Object>
    <Object>
      <Task VID="9995" Master="9722" MTime="">
        <Name>Bed 2 Spots</Name>
        <Model>Bed 2 Spots</Model>
        <Note />
        <DName />
        <ObjectType>Task</ObjectType>
        <Category>9901</Category>
        <Procedure>
          <Target>10175</Target>
          <Function>DimCycle</Function>
          <Parameters>
            <Param>0</Param>
            <Param>1</Param>
            <Param>2</Param>
            <Param>2</Param>
            <Param>3</Param>
            <Param>4</Param>
            <Param>5</Param>
            <Param>6</Param>
            <Param>7</Param>
          </Parameters>
        </Procedure>
        <Query>
          <Target>10168</Target>
          <Function>LoadsOn</Function>
          <Parameters>
            <Param>0</Param>
          </Parameters>
        </Query>
        <Adjust>
          <Target>10173</Target>
          <Function>AdjustLoads</Function>
          <Parameters>
            <Param>0</Param>
            <Param>3</Param>
            <Param>7</Param>
          </Parameters>
        </Adjust>
        <Level Max="100">
          <Target>10173</Target>
          <Function>AverageLoadLevel</Function>
          <Parameters>
            <Param>0</Param>
          </Parameters>
        </Level>
        <ParamTable>
          <Param ID="0">
            <array>
              <val>57</val>
              <val>56</val>
            </array>
          </Param>
          <Param ID="1" Fixed="true">
            <array>
              <val>100</val>
              <val>100</val>
            </array>
          </Param>
          <Param ID="2" Fixed="true">
            <val>2</val>
          </Param>
          <Param ID="3" Fixed="true">
            <val>5</val>
          </Param>
          <Param ID="4">
            <val>1</val>
          </Param>
          <Param ID="5">
            <val>0</val>
          </Param>
          <Param ID="6">
            <val>0</val>
          </Param>
          <Param ID="7" Fixed="true">
            <val>10</val>
          </Param>
        </ParamTable>
        <DependTable>
          <Param status="Load.GetLevel">0</Param>
        </DependTable>
      </Task>
      <Module>
        <Library Name="Lighting\Dim" Local="true" />
        <Library Name="vantage" Local="false" />
        <Scene>
          <Name>SceneProgram_9995</Name>
          <Type>procedure</Type>
          <Parameters />
          <ParameterValues />
          <FunctionBody>
            <FunctionCall>
              <Name>DimCycle</Name>
              <Parameters>
                <Param>
                  <Label>Load</Label>
                  <Initializer>
                    <Constant Type="int">57</Constant>
                    <Constant Type="int">56</Constant>
                  </Initializer>
                  <ParamName>loads</ParamName>
                </Param>
                <Param>
                  <Label>Level</Label>
                  <Initializer>
                    <Constant Type="float">100.0</Constant>
                    <Constant Type="float">100.0</Constant>
                  </Initializer>
                  <ParamName>levels</ParamName>
                </Param>
                <Param>
                  <Label>Seconds</Label>
                  <Constant Type="float">2.0</Constant>
                  <ParamName>rampTime</ParamName>
                </Param>
                <Param>
                  <Label>Seconds</Label>
                  <Constant Type="float">2.0</Constant>
                  <ParamName>fadeTime</ParamName>
                </Param>
                <Param>
                  <Label>Seconds</Label>
                  <Constant Type="float">5.0</Constant>
                  <ParamName>rampRate</ParamName>
                </Param>
                <Param>
                  <Label>bool</Label>
                  <Constant Type="bool">true</Constant>
                  <ParamName>trackLED</ParamName>
                </Param>
                <Param>
                  <Label>bool</Label>
                  <Constant Type="bool">false</Constant>
                  <ParamName>learnable</ParamName>
                </Param>
                <Param>
                  <Label>MemID</Label>
                  <Constant Type="int">0</Constant>
                  <ParamName>learnedLevels</ParamName>
                </Param>
                <Param>
                  <Label>Level</Label>
                  <Constant Type="float">10.0</Constant>
                  <ParamName>minLearnedLevel</ParamName>
                </Param>
              </Parameters>
            </FunctionCall>
            <QueryCall>
              <Name>LoadsOn</Name>
              <Parameters>
                <Param>
                  <Label>Load</Label>
                  <Initializer>
                    <Constant Type="int">57</Constant>
                    <Constant Type="int">56</Constant>
                  </Initializer>
                  <ParamName>loads</ParamName>
                </Param>
              </Parameters>
            </QueryCall>
          </FunctionBody>
        </Scene>
      </Module>
    </Object>
    <Object>
      <Task VID="9997" Master="9722" MTime="">
        <Name>Bathroom Mirror</Name>
        <Model>Bathroom Mirror</Model>
        <Note />
        <DName />
        <ObjectType>Task</ObjectType>
        <Category>9740</Category>
        <Procedure>
          <Target>10175</Target>
          <Function>DimCycle</Function>
          <Parameters>
            <Param>0</Param>
            <Param>1</Param>
            <Param>2</Param>
            <Param>2</Param>
            <Param>3</Param>
            <Param>4</Param>
            <Param>5</Param>
            <Param>6</Param>
            <Param>7</Param>
          </Parameters>
        </Procedure>
        <Query>
          <Target>10168</Target>
          <Function>AnyLoadsOn</Function>
          <Parameters>
            <Param>0</Param>
          </Parameters>
        </Query>
        <Adjust>
          <Target>10173</Target>
          <Function>AdjustLoads</Function>
          <Parameters>
            <Param>0</Param>
            <Param>3</Param>
            <Param>7</Param>
          </Parameters>
        </Adjust>
        <Level Max="100">
          <Target>10173</Target>
          <Function>AverageLoadLevel</Function>
          <Parameters>
            <Param>0</Param>
          </Parameters>
        </Level>
        <ParamTable>
          <Param ID="0">
            <array>
              <val>84</val>
            </array>
          </Param>
          <Param ID="1" Fixed="true">
            <array>
              <val>100</val>
            </array>
          </Param>
          <Param ID="2" Fixed="true">
            <val>2</val>
          </Param>
          <Param ID="3" Fixed="true">
            <val>5</val>
          </Param>
          <Param ID="4">
            <val>1</val>
          </Param>
          <Param ID="5">
            <val>0</val>
          </Param>
          <Param ID="6">
            <val>0</val>
          </Param>
          <Param ID="7" Fixed="true">
            <val>10</val>
          </Param>
        </ParamTable>
        <DependTable>
          <Param status="Load.GetLevel">0</Param>
        </DependTable>
      </Task>
      <Module>
        <Library Name="Lighting\Dim" Local="true" />
        <Library Name="vantage" Local="false" />
        <Scene>
          <Name>SceneProgram_9997</Name>
          <Type>procedure</Type>
          <Parameters />
          <ParameterValues />
          <FunctionBody>
            <FunctionCall disable="false">
              <Name>DimCycle</Name>
              <Parameters>
                <Param>
                  <Label>Load</Label>
                  <Initializer>
                    <Constant Type="int">84</Constant>
                  </Initializer>
                  <ParamName>loads</ParamName>
                </Param>
                <Param>
                  <Label>Level</Label>
                  <Initializer>
                    <Constant Type="float">100.0</Constant>
                  </Initializer>
                  <ParamName>levels</ParamName>
                </Param>
                <Param>
                  <Label>Seconds</Label>
                  <Constant Type="float">2.0</Constant>
                  <ParamName>rampTime</ParamName>
                </Param>
                <Param>
                  <Label>Seconds</Label>
                  <Constant Type="float">2.0</Constant>
                  <ParamName>fadeTime</ParamName>
                </Param>
                <Param>
                  <Label>Seconds</Label>
                  <Constant Type="float">5.0</Constant>
                  <ParamName>rampRate</ParamName>
                </Param>
                <Param>
                  <Label>bool</Label>
                  <Constant Type="bool">true</Constant>
                  <ParamName>trackLED</ParamName>
                </Param>
                <Param>
                  <Label>bool</Label>
                  <Constant Type="bool">false</Constant>
                  <ParamName>learnable</ParamName>
                </Param>
                <Param>
                  <Label>MemID</Label>
                  <Constant Type="int">0</Constant>
                  <ParamName>learnedLevels</ParamName>
                </Param>
                <Param>
                  <Label>Level</Label>
                  <Constant Type="float">10.0</Constant>
                  <ParamName>minLearnedLevel</ParamName>
                </Param>
              </Parameters>
            </FunctionCall>
            <QueryCall>
              <Name>AnyLoadsOn</Name>
              <Parameters>
                <Param>
                  <Label>Load</Label>
                  <Initializer>
                    <Constant Type="int">84</Constant>
                  </Initializer>
                  <ParamName>loads</ParamName>
                </Param>
              </Parameters>
            </QueryCall>
          </FunctionBody>
        </Scene>
      </Module>
    </Object>
    <Object>
      <Task VID="9998" Master="9722" MTime="">
        <Name>Bathroom Spots</Name>
        <Model>Bathroom Spots</Model>
        <Note />
        <DName />
        <ObjectType>Task</ObjectType>
        <Category>9740</Category>
        <Procedure>
          <Target>10175</Target>
          <Function>DimCycle</Function>
          <Parameters>
            <Param>0</Param>
            <Param>1</Param>
            <Param>2</Param>
            <Param>2</Param>
            <Param>3</Param>
            <Param>4</Param>
            <Param>5</Param>
            <Param>6</Param>
            <Param>7</Param>
          </Parameters>
        </Procedure>
        <Query>
          <Target>10168</Target>
          <Function>LoadsOn</Function>
          <Parameters>
            <Param>0</Param>
          </Parameters>
        </Query>
        <Adjust>
          <Target>10173</Target>
          <Function>AdjustLoads</Function>
          <Parameters>
            <Param>0</Param>
            <Param>3</Param>
            <Param>7</Param>
          </Parameters>
        </Adjust>
        <Level Max="100">
          <Target>10173</Target>
          <Function>AverageLoadLevel</Function>
          <Parameters>
            <Param>0</Param>
          </Parameters>
        </Level>
        <ParamTable>
          <Param ID="0">
            <array>
              <val>71</val>
            </array>
          </Param>
          <Param ID="1" Fixed="true">
            <array>
              <val>100</val>
            </array>
          </Param>
          <Param ID="2" Fixed="true">
            <val>2</val>
          </Param>
          <Param ID="3" Fixed="true">
            <val>5</val>
          </Param>
          <Param ID="4">
            <val>1</val>
          </Param>
          <Param ID="5">
            <val>0</val>
          </Param>
          <Param ID="6">
            <val>0</val>
          </Param>
          <Param ID="7" Fixed="true">
            <val>10</val>
          </Param>
        </ParamTable>
        <DependTable>
          <Param status="Load.GetLevel">0</Param>
        </DependTable>
      </Task>
      <Module>
        <Library Name="Lighting\Dim" Local="true" />
        <Library Name="vantage" Local="false" />
        <Scene>
          <Name>SceneProgram_9998</Name>
          <Type>procedure</Type>
          <Parameters />
          <ParameterValues />
          <FunctionBody>
            <FunctionCall disable="false">
              <Name>DimCycle</Name>
              <Parameters>
                <Param>
                  <Label>Load</Label>
                  <Initializer>
                    <Constant Type="int">71</Constant>
                  </Initializer>
                  <ParamName>loads</ParamName>
                </Param>
                <Param>
                  <Label>Level</Label>
                  <Initializer>
                    <Constant Type="float">100.0</Constant>
                  </Initializer>
                  <ParamName>levels</ParamName>
                </Param>
                <Param>
                  <Label>Seconds</Label>
                  <Constant Type="float">2.0</Constant>
                  <ParamName>rampTime</ParamName>
                </Param>
                <Param>
                  <Label>Seconds</Label>
                  <Constant Type="float">2.0</Constant>
                  <ParamName>fadeTime</ParamName>
                </Param>
                <Param>
                  <Label>Seconds</Label>
                  <Constant Type="float">5.0</Constant>
                  <ParamName>rampRate</ParamName>
                </Param>
                <Param>
                  <Label>bool</Label>
                  <Constant Type="bool">true</Constant>
                  <ParamName>trackLED</ParamName>
                </Param>
                <Param>
                  <Label>bool</Label>
                  <Constant Type="bool">false</Constant>
                  <ParamName>learnable</ParamName>
                </Param>
                <Param>
                  <Label>MemID</Label>
                  <Constant Type="int">0</Constant>
                  <ParamName>learnedLevels</ParamName>
                </Param>
                <Param>
                  <Label>Level</Label>
                  <Constant Type="float">10.0</Constant>
                  <ParamName>minLearnedLevel</ParamName>
                </Param>
              </Parameters>
            </FunctionCall>
            <QueryCall>
              <Name>LoadsOn</Name>
              <Parameters>
                <Param>
                  <Label>Load</Label>
                  <Initializer>
                    <Constant Type="int">71</Constant>
                  </Initializer>
                  <ParamName>loads</ParamName>
                </Param>
              </Parameters>
            </QueryCall>
          </FunctionBody>
        </Scene>
      </Module>
    </Object>
    <Object>
      <User VID="10002" Master="9722" MTime="" PinUserObject="true">
        <Name>AdminPasscodePinUserObject</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>User</ObjectType>
        <Password>
        </Password>
        <Permission>
          <ReadState>false</ReadState>
          <WriteState>false</WriteState>
          <ReadConfig>false</ReadConfig>
          <WriteConfig>false</WriteConfig>
        </Permission>
      </User>
    </Object>
    <Object>
      <Task VID="10006" Master="9722" MTime="">
        <Name>Living Function Button</Name>
        <Model>Living Function Button</Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Task</ObjectType>
        <Category>9903</Category>
        <Procedure>
          <Target>10171</Target>
          <Function>PressAndHold</Function>
          <Parameters>
            <Param>0</Param>
            <Param>1</Param>
            <Param>2</Param>
            <Param>3</Param>
          </Parameters>
        </Procedure>
        <Query>
          <Target>10170</Target>
          <Function>TaskQueryState</Function>
          <Parameters>
            <Param>0</Param>
          </Parameters>
        </Query>
        <Adjust>
          <Target>0</Target>
          <Function />
          <Parameters />
        </Adjust>
        <Level>
          <Target>0</Target>
          <Function />
          <Parameters />
        </Level>
        <ParamTable>
          <Param ID="0">
            <array>
              <val>9974</val>
            </array>
          </Param>
          <Param ID="1">
            <array>
              <val>10139</val>
            </array>
          </Param>
          <Param ID="2">
            <val>0</val>
          </Param>
          <Param ID="3">
            <val>2</val>
          </Param>
        </ParamTable>
        <DependTable>
          <Param status="Task.GetState">0</Param>
        </DependTable>
      </Task>
      <Module>
        <Library Name="Programming\LaunchTasks" Local="true" />
        <Library Name="vantage" Local="false" />
        <Scene>
          <Name>SceneProgram_10006</Name>
          <Type>procedure</Type>
          <Parameters />
          <ParameterValues />
          <FunctionBody>
            <FunctionCall disable="false">
              <Name>PressAndHold</Name>
              <Parameters>
                <Param>
                  <Label>Task</Label>
                  <Initializer>
                    <Constant Type="int">9974</Constant>
                  </Initializer>
                  <ParamName>pressTasks</ParamName>
                </Param>
                <Param>
                  <Label>Task</Label>
                  <Initializer>
                    <Constant Type="int">10139</Constant>
                  </Initializer>
                  <ParamName>holdTasks</ParamName>
                </Param>
                <Param>
                  <Label>TriggerType</Label>
                  <Identifier>ButtonRelease</Identifier>
                  <ParamName>pressEventType</ParamName>
                </Param>
                <Param>
                  <Label>TriggerType</Label>
                  <Identifier>ButtonHold</Identifier>
                  <ParamName>holdEventType</ParamName>
                </Param>
              </Parameters>
            </FunctionCall>
            <QueryCall>
              <Name>TaskQueryState</Name>
              <Parameters>
                <Param>
                  <Label>Task</Label>
                  <Initializer>
                    <Constant Type="int">9974</Constant>
                  </Initializer>
                  <ParamName>objects</ParamName>
                </Param>
              </Parameters>
            </QueryCall>
          </FunctionBody>
        </Scene>
      </Module>
    </Object>
    <Object>
      <Task VID="10007" Master="9722" MTime="">
        <Name>Kitchen Function Button</Name>
        <Model>Kitchen Function Button</Model>
        <Note />
        <DName />
        <ObjectType>Task</ObjectType>
        <Category>9904</Category>
        <Procedure>
          <Target>10171</Target>
          <Function>PressAndHold</Function>
          <Parameters>
            <Param>0</Param>
            <Param>1</Param>
            <Param>2</Param>
            <Param>3</Param>
          </Parameters>
        </Procedure>
        <Query>
          <Target>10170</Target>
          <Function>TaskQueryState</Function>
          <Parameters>
            <Param>0</Param>
          </Parameters>
        </Query>
        <Adjust>
          <Target>0</Target>
          <Function />
          <Parameters />
        </Adjust>
        <Level>
          <Target>0</Target>
          <Function />
          <Parameters />
        </Level>
        <ParamTable>
          <Param ID="0">
            <array>
              <val>9975</val>
            </array>
          </Param>
          <Param ID="1">
            <array>
              <val>9958</val>
            </array>
          </Param>
          <Param ID="2">
            <val>0</val>
          </Param>
          <Param ID="3">
            <val>2</val>
          </Param>
        </ParamTable>
        <DependTable>
          <Param status="Task.GetState">0</Param>
        </DependTable>
      </Task>
      <Module>
        <Library Name="Programming\LaunchTasks" Local="true" />
        <Library Name="vantage" Local="false" />
        <Scene>
          <Name>SceneProgram_10007</Name>
          <Type>procedure</Type>
          <Parameters />
          <ParameterValues />
          <FunctionBody>
            <FunctionCall disable="false">
              <Name>PressAndHold</Name>
              <Parameters>
                <Param>
                  <Label>Task</Label>
                  <Initializer>
                    <Constant Type="int">9975</Constant>
                  </Initializer>
                  <ParamName>pressTasks</ParamName>
                </Param>
                <Param>
                  <Label>Task</Label>
                  <Initializer>
                    <Constant Type="int">9958</Constant>
                  </Initializer>
                  <ParamName>holdTasks</ParamName>
                </Param>
                <Param>
                  <Label>TriggerType</Label>
                  <Identifier>ButtonRelease</Identifier>
                  <ParamName>pressEventType</ParamName>
                </Param>
                <Param>
                  <Label>TriggerType</Label>
                  <Identifier>ButtonHold</Identifier>
                  <ParamName>holdEventType</ParamName>
                </Param>
              </Parameters>
            </FunctionCall>
            <QueryCall>
              <Name>TaskQueryState</Name>
              <Parameters>
                <Param>
                  <Label>Task</Label>
                  <Initializer>
                    <Constant Type="int">9975</Constant>
                  </Initializer>
                  <ParamName>objects</ParamName>
                </Param>
              </Parameters>
            </QueryCall>
          </FunctionBody>
        </Scene>
      </Module>
    </Object>
    <Object>
      <Task VID="10008" Master="9722" MTime="">
        <Name>Master Bedroom Function Button</Name>
        <Model>Master Bedroom Function Button</Model>
        <Note />
        <DName />
        <ObjectType>Task</ObjectType>
        <Category>9885</Category>
        <Procedure>
          <Target>10171</Target>
          <Function>PressAndHold</Function>
          <Parameters>
            <Param>0</Param>
            <Param>1</Param>
            <Param>2</Param>
            <Param>3</Param>
          </Parameters>
        </Procedure>
        <Query>
          <Target>10170</Target>
          <Function>TaskQueryState</Function>
          <Parameters>
            <Param>0</Param>
          </Parameters>
        </Query>
        <Adjust>
          <Target>0</Target>
          <Function />
          <Parameters />
        </Adjust>
        <Level>
          <Target>0</Target>
          <Function />
          <Parameters />
        </Level>
        <ParamTable>
          <Param ID="0">
            <array>
              <val>9976</val>
            </array>
          </Param>
          <Param ID="1">
            <array>
              <val>9959</val>
            </array>
          </Param>
          <Param ID="2">
            <val>0</val>
          </Param>
          <Param ID="3">
            <val>2</val>
          </Param>
        </ParamTable>
        <DependTable>
          <Param status="Task.GetState">0</Param>
        </DependTable>
      </Task>
      <Module>
        <Library Name="Programming\LaunchTasks" Local="true" />
        <Library Name="vantage" Local="false" />
        <Scene>
          <Name>SceneProgram_10008</Name>
          <Type>procedure</Type>
          <Parameters />
          <ParameterValues />
          <FunctionBody>
            <FunctionCall disable="false">
              <Name>PressAndHold</Name>
              <Parameters>
                <Param>
                  <Label>Task</Label>
                  <Initializer>
                    <Constant Type="int">9976</Constant>
                  </Initializer>
                  <ParamName>pressTasks</ParamName>
                </Param>
                <Param>
                  <Label>Task</Label>
                  <Initializer>
                    <Constant Type="int">9959</Constant>
                  </Initializer>
                  <ParamName>holdTasks</ParamName>
                </Param>
                <Param>
                  <Label>TriggerType</Label>
                  <Identifier>ButtonRelease</Identifier>
                  <ParamName>pressEventType</ParamName>
                </Param>
                <Param>
                  <Label>TriggerType</Label>
                  <Identifier>ButtonHold</Identifier>
                  <ParamName>holdEventType</ParamName>
                </Param>
              </Parameters>
            </FunctionCall>
            <QueryCall>
              <Name>TaskQueryState</Name>
              <Parameters>
                <Param>
                  <Label>Task</Label>
                  <Initializer>
                    <Constant Type="int">9976</Constant>
                  </Initializer>
                  <ParamName>objects</ParamName>
                </Param>
              </Parameters>
            </QueryCall>
          </FunctionBody>
        </Scene>
      </Module>
    </Object>
    <Object>
      <Task VID="10009" Master="9722" MTime="">
        <Name>En-Suite Function Button</Name>
        <Model>En-Suite Function Button</Model>
        <Note />
        <DName />
        <ObjectType>Task</ObjectType>
        <Category>9864</Category>
        <Procedure>
          <Target>10171</Target>
          <Function>PressAndHold</Function>
          <Parameters>
            <Param>0</Param>
            <Param>1</Param>
            <Param>2</Param>
            <Param>3</Param>
          </Parameters>
        </Procedure>
        <Query>
          <Target>10170</Target>
          <Function>TaskQueryState</Function>
          <Parameters>
            <Param>0</Param>
          </Parameters>
        </Query>
        <Adjust>
          <Target>0</Target>
          <Function />
          <Parameters />
        </Adjust>
        <Level>
          <Target>0</Target>
          <Function />
          <Parameters />
        </Level>
        <ParamTable>
          <Param ID="0">
            <array>
              <val>9977</val>
            </array>
          </Param>
          <Param ID="1">
            <array>
              <val>9972</val>
            </array>
          </Param>
          <Param ID="2">
            <val>0</val>
          </Param>
          <Param ID="3">
            <val>2</val>
          </Param>
        </ParamTable>
        <DependTable>
          <Param status="Task.GetState">0</Param>
        </DependTable>
      </Task>
      <Module>
        <Library Name="Programming\LaunchTasks" Local="true" />
        <Library Name="vantage" Local="false" />
        <Scene>
          <Name>SceneProgram_10009</Name>
          <Type>procedure</Type>
          <Parameters />
          <ParameterValues />
          <FunctionBody>
            <FunctionCall disable="false">
              <Name>PressAndHold</Name>
              <Parameters>
                <Param>
                  <Label>Task</Label>
                  <Initializer>
                    <Constant Type="int">9977</Constant>
                  </Initializer>
                  <ParamName>pressTasks</ParamName>
                </Param>
                <Param>
                  <Label>Task</Label>
                  <Initializer>
                    <Constant Type="int">9972</Constant>
                  </Initializer>
                  <ParamName>holdTasks</ParamName>
                </Param>
                <Param>
                  <Label>TriggerType</Label>
                  <Identifier>ButtonRelease</Identifier>
                  <ParamName>pressEventType</ParamName>
                </Param>
                <Param>
                  <Label>TriggerType</Label>
                  <Identifier>ButtonHold</Identifier>
                  <ParamName>holdEventType</ParamName>
                </Param>
              </Parameters>
            </FunctionCall>
            <QueryCall>
              <Name>TaskQueryState</Name>
              <Parameters>
                <Param>
                  <Label>Task</Label>
                  <Initializer>
                    <Constant Type="int">9977</Constant>
                  </Initializer>
                  <ParamName>objects</ParamName>
                </Param>
              </Parameters>
            </QueryCall>
          </FunctionBody>
        </Scene>
      </Module>
    </Object>
    <Object>
      <Task VID="10010" Master="9722" MTime="">
        <Name>Bed 2 Function Button</Name>
        <Model>Bed 2 Function Button</Model>
        <Note />
        <DName />
        <ObjectType>Task</ObjectType>
        <Category>9901</Category>
        <Procedure>
          <Target>10171</Target>
          <Function>PressAndHold</Function>
          <Parameters>
            <Param>0</Param>
            <Param>1</Param>
            <Param>2</Param>
            <Param>3</Param>
          </Parameters>
        </Procedure>
        <Query>
          <Target>10170</Target>
          <Function>TaskQueryState</Function>
          <Parameters>
            <Param>0</Param>
          </Parameters>
        </Query>
        <Adjust>
          <Target>0</Target>
          <Function />
          <Parameters />
        </Adjust>
        <Level>
          <Target>0</Target>
          <Function />
          <Parameters />
        </Level>
        <ParamTable>
          <Param ID="0">
            <array>
              <val>9978</val>
            </array>
          </Param>
          <Param ID="1">
            <array>
              <val>9969</val>
            </array>
          </Param>
          <Param ID="2">
            <val>0</val>
          </Param>
          <Param ID="3">
            <val>2</val>
          </Param>
        </ParamTable>
        <DependTable>
          <Param status="Task.GetState">0</Param>
        </DependTable>
      </Task>
      <Module>
        <Library Name="Programming\LaunchTasks" Local="true" />
        <Library Name="vantage" Local="false" />
        <Scene>
          <Name>SceneProgram_10010</Name>
          <Type>procedure</Type>
          <Parameters />
          <ParameterValues />
          <FunctionBody>
            <FunctionCall disable="false">
              <Name>PressAndHold</Name>
              <Parameters>
                <Param>
                  <Label>Task</Label>
                  <Initializer>
                    <Constant Type="int">9978</Constant>
                  </Initializer>
                  <ParamName>pressTasks</ParamName>
                </Param>
                <Param>
                  <Label>Task</Label>
                  <Initializer>
                    <Constant Type="int">9969</Constant>
                  </Initializer>
                  <ParamName>holdTasks</ParamName>
                </Param>
                <Param>
                  <Label>TriggerType</Label>
                  <Identifier>ButtonRelease</Identifier>
                  <ParamName>pressEventType</ParamName>
                </Param>
                <Param>
                  <Label>TriggerType</Label>
                  <Identifier>ButtonHold</Identifier>
                  <ParamName>holdEventType</ParamName>
                </Param>
              </Parameters>
            </FunctionCall>
            <QueryCall>
              <Name>TaskQueryState</Name>
              <Parameters>
                <Param>
                  <Label>Task</Label>
                  <Initializer>
                    <Constant Type="int">9978</Constant>
                  </Initializer>
                  <ParamName>objects</ParamName>
                </Param>
              </Parameters>
            </QueryCall>
          </FunctionBody>
        </Scene>
      </Module>
    </Object>
    <Object>
      <Task VID="10011" Master="9722" MTime="">
        <Name>Bathroom Function Button</Name>
        <Model>Bathroom Function Button</Model>
        <Note />
        <DName />
        <ObjectType>Task</ObjectType>
        <Category>9740</Category>
        <Procedure>
          <Target>10171</Target>
          <Function>PressAndHold</Function>
          <Parameters>
            <Param>0</Param>
            <Param>1</Param>
            <Param>2</Param>
            <Param>3</Param>
          </Parameters>
        </Procedure>
        <Query>
          <Target>0</Target>
          <Function />
          <Parameters />
        </Query>
        <Adjust>
          <Target>0</Target>
          <Function />
          <Parameters />
        </Adjust>
        <Level>
          <Target>0</Target>
          <Function />
          <Parameters />
        </Level>
        <ParamTable>
          <Param ID="0">
            <array>
              <val>10012</val>
            </array>
          </Param>
          <Param ID="1">
            <array>
              <val>9971</val>
            </array>
          </Param>
          <Param ID="2">
            <val>0</val>
          </Param>
          <Param ID="3">
            <val>2</val>
          </Param>
        </ParamTable>
        <DependTable>
        </DependTable>
      </Task>
      <Module>
        <Library Name="Programming\LaunchTasks" Local="true" />
        <Library Name="vantage" Local="false" />
        <Scene>
          <Name>SceneProgram_10011</Name>
          <Type>procedure</Type>
          <Parameters />
          <ParameterValues />
          <FunctionBody>
            <FunctionCall disable="false">
              <Name>PressAndHold</Name>
              <Parameters>
                <Param>
                  <Label>Task</Label>
                  <Initializer>
                    <Constant Type="int">10012</Constant>
                  </Initializer>
                  <ParamName>pressTasks</ParamName>
                </Param>
                <Param>
                  <Label>Task</Label>
                  <Initializer>
                    <Constant Type="int">9971</Constant>
                  </Initializer>
                  <ParamName>holdTasks</ParamName>
                </Param>
                <Param>
                  <Label>TriggerType</Label>
                  <Identifier>ButtonRelease</Identifier>
                  <ParamName>pressEventType</ParamName>
                </Param>
                <Param>
                  <Label>TriggerType</Label>
                  <Identifier>ButtonHold</Identifier>
                  <ParamName>holdEventType</ParamName>
                </Param>
              </Parameters>
            </FunctionCall>
          </FunctionBody>
        </Scene>
      </Module>
    </Object>
    <Object>
      <Task VID="10012" Master="9722" MTime="">
        <Name>Bathroom Toggle Scene 1</Name>
        <Model>Bathroom Toggle Scene 1</Model>
        <Note />
        <DName />
        <ObjectType>Task</ObjectType>
        <Category>9740</Category>
        <Procedure>
          <Target>10181</Target>
          <Function>SceneProgram_10012</Function>
          <Parameters />
        </Procedure>
        <Query>
          <Target>10168</Target>
          <Function>AnyLoadsOn</Function>
          <Parameters>
            <Param>0</Param>
          </Parameters>
        </Query>
        <Adjust>
          <Target>0</Target>
          <Function />
          <Parameters />
        </Adjust>
        <Level>
          <Target>0</Target>
          <Function />
          <Parameters />
        </Level>
        <ParamTable>
          <Param ID="0">
            <array>
              <val>84</val>
              <val>71</val>
            </array>
          </Param>
        </ParamTable>
        <DependTable>
          <Param status="Load.GetLevel">0</Param>
        </DependTable>
      </Task>
      <Module>
        <Library Name="Programming\LaunchTasks" Local="true" />
        <Library Name="load" Local="false" />
        <Library Name="vantage" Local="false" />
        <Scene>
          <Name>SceneProgram_10012</Name>
          <Type>procedure</Type>
          <Parameters />
          <ParameterValues />
          <FunctionBody>
            <If disable="false">
              <LogicalExpression>
                <GivePrecedence>false</GivePrecedence>
                <Expanded>true</Expanded>
                <LogicalExpression>
                  <GivePrecedence>false</GivePrecedence>
                  <Expanded>true</Expanded>
                  <RelationalExpression>
                    <Operand>
                      <Label>Level</Label>
                      <FunctionCall>
                        <Name>Load_GetLevel</Name>
                        <Parameters>
                          <Param>
                            <Label>Load</Label>
                            <Constant Type="int">71</Constant>
                            <ParamName>object</ParamName>
                          </Param>
                        </Parameters>
                      </FunctionCall>
                    </Operand>
                    <Operator>eq</Operator>
                    <Operand>
                      <Label>Level</Label>
                      <Constant Type="float">0.0</Constant>
                    </Operand>
                  </RelationalExpression>
                </LogicalExpression>
                <Operator>and</Operator>
                <LogicalExpression>
                  <GivePrecedence>false</GivePrecedence>
                  <Expanded>true</Expanded>
                  <RelationalExpression>
                    <Operand>
                      <Label>Level</Label>
                      <FunctionCall>
                        <Name>Load_GetLevel</Name>
                        <Parameters>
                          <Param>
                            <Label>Load</Label>
                            <Constant Type="int">84</Constant>
                            <ParamName>object</ParamName>
                          </Param>
                        </Parameters>
                      </FunctionCall>
                    </Operand>
                    <Operator>eq</Operator>
                    <Operand>
                      <Label>Level</Label>
                      <Constant Type="float">0.0</Constant>
                    </Operand>
                  </RelationalExpression>
                </LogicalExpression>
              </LogicalExpression>
              <StatementList>
                <FunctionCall disable="false">
                  <Name>LaunchTask</Name>
                  <Parameters>
                    <Param>
                      <Label>Task</Label>
                      <Initializer>
                        <Constant Type="int">9735</Constant>
                      </Initializer>
                      <ParamName>tasks</ParamName>
                    </Param>
                    <Param>
                      <Label>TriggerType</Label>
                      <Identifier>ButtonRelease</Identifier>
                      <ParamName>eventType</ParamName>
                    </Param>
                    <Param>
                      <Label>Number</Label>
                      <Constant Type="int">1</Constant>
                      <ParamName>param1</ParamName>
                    </Param>
                  </Parameters>
                </FunctionCall>
              </StatementList>
              <Expanded>True</Expanded>
            </If>
            <Else disable="false">
              <StatementList>
                <FunctionCall disable="false">
                  <Name>LaunchTask</Name>
                  <Parameters>
                    <Param>
                      <Label>Task</Label>
                      <Initializer>
                        <Constant Type="int">722</Constant>
                      </Initializer>
                      <ParamName>tasks</ParamName>
                    </Param>
                    <Param>
                      <Label>TriggerType</Label>
                      <Identifier>ButtonRelease</Identifier>
                      <ParamName>eventType</ParamName>
                    </Param>
                    <Param>
                      <Label>Number</Label>
                      <Constant Type="int">1</Constant>
                      <ParamName>param1</ParamName>
                    </Param>
                  </Parameters>
                </FunctionCall>
              </StatementList>
              <Expanded>True</Expanded>
            </Else>
            <QueryCall>
              <Name>AnyLoadsOn</Name>
              <Parameters>
                <Param>
                  <Label>Load</Label>
                  <Initializer>
                    <Constant Type="int">84</Constant>
                    <Constant Type="int">71</Constant>
                  </Initializer>
                  <ParamName>loads</ParamName>
                </Param>
              </Parameters>
            </QueryCall>
          </FunctionBody>
        </Scene>
      </Module>
    </Object>
    <Object>
      <GMem VID="10014" Master="9722" MTime="">
        <Name>Bathroom Scene Tracking</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>GMem</ObjectType>
        <Category>9740</Category>
        <data Fixed="false">
          <val>0</val>
        </data>
        <Persistent>true</Persistent>
        <Tag object="false">Number</Tag>
      </GMem>
    </Object>
    <Object>
      <GMem VID="10015" Master="9722" MTime="">
        <Name>Bed 2 Scene Tracking</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>GMem</ObjectType>
        <Category>9901</Category>
        <data Fixed="false">
          <val>0</val>
        </data>
        <Persistent>true</Persistent>
        <Tag object="false">Number</Tag>
      </GMem>
    </Object>
    <Object>
      <GMem VID="10016" Master="9722" MTime="">
        <Name>En-Suite Scene Tracking</Name>
        <Model />
        <Note />
        <DName />
        <ObjectType>GMem</ObjectType>
        <Category>9864</Category>
        <data Fixed="false">
          <val>0</val>
        </data>
        <Persistent>true</Persistent>
        <Tag object="false">Number</Tag>
      </GMem>
    </Object>
    <Object>
      <GMem VID="10017" Master="9722" MTime="">
        <Name>Master Bedroom Scene Tracking</Name>
        <Model />
        <Note />
        <DName />
        <ObjectType>GMem</ObjectType>
        <Category>9885</Category>
        <data Fixed="false">
          <val>0</val>
        </data>
        <Persistent>true</Persistent>
        <Tag object="false">Number</Tag>
      </GMem>
    </Object>
    <Object>
      <GMem VID="10018" Master="9722" MTime="">
        <Name>Kitchen Scene Tracking</Name>
        <Model />
        <Note />
        <DName />
        <ObjectType>GMem</ObjectType>
        <Category>9904</Category>
        <data Fixed="false">
          <val>0</val>
        </data>
        <Persistent>true</Persistent>
        <Tag object="false">Number</Tag>
      </GMem>
    </Object>
    <Object>
      <GMem VID="10019" Master="9722" MTime="">
        <Name>Living Room Scene Tracking</Name>
        <Model />
        <Note />
        <DName />
        <ObjectType>GMem</ObjectType>
        <Category>9903</Category>
        <data Fixed="false">
          <val>0</val>
        </data>
        <Persistent>true</Persistent>
        <Tag object="false">Number</Tag>
      </GMem>
    </Object>
    <Object>
      <Task VID="10020" Master="9722" MTime="">
        <Name>Living Scene 1</Name>
        <Model>Living Scene 1</Model>
        <Note />
        <DName />
        <ObjectType>Task</ObjectType>
        <Category>9903</Category>
        <Procedure>
          <Target>10182</Target>
          <Function>SceneProgram_10020</Function>
          <Parameters>
            <Param>0</Param>
          </Parameters>
        </Procedure>
        <Query>
          <Target>10172</Target>
          <Function>VariableAtSpecifiedValue</Function>
          <Parameters>
            <Param>1</Param>
            <Param>2</Param>
          </Parameters>
        </Query>
        <Adjust>
          <Target>10173</Target>
          <Function>AdjustLoads</Function>
          <Parameters>
            <Param>3</Param>
            <Param>4</Param>
            <Param>5</Param>
          </Parameters>
        </Adjust>
        <Level Max="100">
          <Target>10173</Target>
          <Function>AverageLoadLevel</Function>
          <Parameters>
            <Param>3</Param>
          </Parameters>
        </Level>
        <ParamTable>
          <Param ID="0">
            <gmem Type="ref">10019</gmem>
          </Param>
          <Param ID="1">
            <gmem>10019</gmem>
          </Param>
          <Param ID="2">
            <val>2</val>
          </Param>
          <Param ID="3">
            <array>
              <val>9307</val>
              <val>67</val>
              <val>66</val>
            </array>
          </Param>
          <Param ID="4" Fixed="true">
            <val>5</val>
          </Param>
          <Param ID="5" Fixed="true">
            <val>10</val>
          </Param>
        </ParamTable>
        <DependTable>
          <Param>1</Param>
        </DependTable>
      </Task>
      <Module>
        <Library Name="Lighting\Toggle" Local="true" />
        <Library Name="vantage" Local="false" />
        <Scene>
          <Name>SceneProgram_10020</Name>
          <Type>procedure</Type>
          <Parameters>
            <Param>
              <Reference>true</Reference>
              <Label>Number</Label>
              <Label>GMem</Label>
              <Name>param2</Name>
            </Param>
          </Parameters>
          <ParameterValues>
            <Param>
              <Label>GMem</Label>
              <Constant Type="int">10019</Constant>
              <ParamName>param2</ParamName>
            </Param>
          </ParameterValues>
          <FunctionBody>
            <FunctionCall>
              <Name>On</Name>
              <Parameters>
                <Param>
                  <Label>Load</Label>
                  <Initializer>
                    <Constant Type="int">9307</Constant>
                    <Constant Type="int">67</Constant>
                    <Constant Type="int">66</Constant>
                  </Initializer>
                  <ParamName>loads</ParamName>
                </Param>
                <Param>
                  <Label>Level</Label>
                  <Initializer>
                    <Constant Type="float">100.0</Constant>
                    <Constant Type="float">100.0</Constant>
                    <Constant Type="float">100.0</Constant>
                  </Initializer>
                  <ParamName>levels</ParamName>
                </Param>
                <Param>
                  <Label>Seconds</Label>
                  <Constant Type="float">2.0</Constant>
                  <ParamName>rampTime</ParamName>
                </Param>
                <Param>
                  <Label>bool</Label>
                  <Constant Type="bool">true</Constant>
                  <ParamName>learnable</ParamName>
                </Param>
                <Param>
                  <Label>MemID</Label>
                  <Constant Type="int">0</Constant>
                  <ParamName>bufferid</ParamName>
                </Param>
              </Parameters>
            </FunctionCall>
            <Assignment disable="false">
              <Operand>
                <Identifier>param2</Identifier>
              </Operand>
              <Assign>equals</Assign>
              <Operand>
                <Label>Number</Label>
                <Constant Type="int">2</Constant>
              </Operand>
            </Assignment>
            <QueryCall>
              <Name>VariableAtSpecifiedValue</Name>
              <Parameters>
                <Param>
                  <Label>GMem</Label>
                  <Constant Type="int">10019</Constant>
                  <ParamName>variable</ParamName>
                </Param>
                <Param>
                  <Label>Number</Label>
                  <Constant Type="int">2</Constant>
                  <ParamName>value</ParamName>
                </Param>
              </Parameters>
            </QueryCall>
          </FunctionBody>
        </Scene>
      </Module>
    </Object>
    <Object>
      <Task VID="10027" Master="9722" MTime="">
        <Name>Kitchen Scene 2</Name>
        <Model>Kitchen Scene 2</Model>
        <Note />
        <DName />
        <ObjectType>Task</ObjectType>
        <Category>9904</Category>
        <Procedure>
          <Target>10176</Target>
          <Function>SceneProgram_10027</Function>
          <Parameters>
            <Param>0</Param>
          </Parameters>
        </Procedure>
        <Query>
          <Target>10172</Target>
          <Function>VariableAtSpecifiedValue</Function>
          <Parameters>
            <Param>1</Param>
            <Param>2</Param>
          </Parameters>
        </Query>
        <Adjust>
          <Target>0</Target>
          <Function />
          <Parameters />
        </Adjust>
        <Level>
          <Target>0</Target>
          <Function />
          <Parameters />
        </Level>
        <ParamTable>
          <Param ID="0">
            <gmem Type="ref">10018</gmem>
          </Param>
          <Param ID="1">
            <gmem>10018</gmem>
          </Param>
          <Param ID="2">
            <val>3</val>
          </Param>
        </ParamTable>
        <DependTable>
          <Param>1</Param>
        </DependTable>
      </Task>
      <Module>
        <Library Name="Lighting\Toggle" Local="true" />
        <Library Name="vantage" Local="false" />
        <Scene>
          <Name>SceneProgram_10027</Name>
          <Type>procedure</Type>
          <Parameters>
            <Param>
              <Reference>true</Reference>
              <Label>Number</Label>
              <Label>GMem</Label>
              <Name>param2</Name>
            </Param>
          </Parameters>
          <ParameterValues>
            <Param>
              <Label>GMem</Label>
              <Constant Type="int">10018</Constant>
              <ParamName>param2</ParamName>
            </Param>
          </ParameterValues>
          <FunctionBody>
            <FunctionCall disable="false">
              <Name>On</Name>
              <Parameters>
                <Param>
                  <Label>Load</Label>
                  <Initializer>
                    <Constant Type="int">10384</Constant>
                    <Constant Type="int">83</Constant>
                    <Constant Type="int">10413</Constant>
                    <Constant Type="int">70</Constant>
                  </Initializer>
                  <ParamName>loads</ParamName>
                </Param>
                <Param>
                  <Label>Level</Label>
                  <Initializer>
                    <Constant Type="float">50.0</Constant>
                    <Constant Type="float">50.0</Constant>
                    <Constant Type="float">0.0</Constant>
                    <Constant Type="float">50.0</Constant>
                  </Initializer>
                  <ParamName>levels</ParamName>
                </Param>
                <Param>
                  <Label>Seconds</Label>
                  <Constant Type="float">2.0</Constant>
                  <ParamName>rampTime</ParamName>
                </Param>
                <Param>
                  <Label>bool</Label>
                  <Constant Type="bool">true</Constant>
                  <ParamName>learnable</ParamName>
                </Param>
                <Param>
                  <Label>MemID</Label>
                  <Constant Type="int">0</Constant>
                  <ParamName>bufferid</ParamName>
                </Param>
              </Parameters>
            </FunctionCall>
            <Assignment disable="false">
              <Operand>
                <Identifier>param2</Identifier>
              </Operand>
              <Assign>equals</Assign>
              <Operand>
                <Label>Number</Label>
                <Constant Type="int">3</Constant>
              </Operand>
            </Assignment>
            <QueryCall>
              <Name>VariableAtSpecifiedValue</Name>
              <Parameters>
                <Param>
                  <Label>GMem</Label>
                  <Constant Type="int">10018</Constant>
                  <ParamName>variable</ParamName>
                </Param>
                <Param>
                  <Label>Number</Label>
                  <Constant Type="int">3</Constant>
                  <ParamName>value</ParamName>
                </Param>
              </Parameters>
            </QueryCall>
          </FunctionBody>
        </Scene>
      </Module>
    </Object>
    <Object>
      <Task VID="10028" Master="9722" MTime="">
        <Name>Master Bedroom Scene 2</Name>
        <Model>Master Bedroom Scene 2</Model>
        <Note />
        <DName />
        <ObjectType>Task</ObjectType>
        <Category>9885</Category>
        <Procedure>
          <Target>10177</Target>
          <Function>SceneProgram_10028</Function>
          <Parameters>
            <Param>0</Param>
          </Parameters>
        </Procedure>
        <Query>
          <Target>10172</Target>
          <Function>VariableAtSpecifiedValue</Function>
          <Parameters>
            <Param>1</Param>
            <Param>2</Param>
          </Parameters>
        </Query>
        <Adjust>
          <Target>10173</Target>
          <Function>AdjustLoads</Function>
          <Parameters>
            <Param>3</Param>
            <Param>4</Param>
            <Param>5</Param>
          </Parameters>
        </Adjust>
        <Level Max="100">
          <Target>10173</Target>
          <Function>AverageLoadLevel</Function>
          <Parameters>
            <Param>3</Param>
          </Parameters>
        </Level>
        <ParamTable>
          <Param ID="0">
            <gmem Type="ref">10017</gmem>
          </Param>
          <Param ID="1">
            <gmem>10017</gmem>
          </Param>
          <Param ID="2">
            <val>3</val>
          </Param>
          <Param ID="3">
            <array>
              <val>55</val>
              <val>53</val>
              <val>54</val>
            </array>
          </Param>
          <Param ID="4" Fixed="true">
            <val>5</val>
          </Param>
          <Param ID="5" Fixed="true">
            <val>10</val>
          </Param>
        </ParamTable>
        <DependTable>
          <Param>1</Param>
        </DependTable>
      </Task>
      <Module>
        <Library Name="Lighting\Toggle" Local="true" />
        <Library Name="vantage" Local="false" />
        <Scene>
          <Name>SceneProgram_10028</Name>
          <Type>procedure</Type>
          <Parameters>
            <Param>
              <Reference>true</Reference>
              <Label>Number</Label>
              <Label>GMem</Label>
              <Name>param2</Name>
            </Param>
          </Parameters>
          <ParameterValues>
            <Param>
              <Label>GMem</Label>
              <Constant Type="int">10017</Constant>
              <ParamName>param2</ParamName>
            </Param>
          </ParameterValues>
          <FunctionBody>
            <FunctionCall disable="false">
              <Name>On</Name>
              <Parameters>
                <Param>
                  <Label>Load</Label>
                  <Initializer>
                    <Constant Type="int">55</Constant>
                    <Constant Type="int">53</Constant>
                    <Constant Type="int">54</Constant>
                  </Initializer>
                  <ParamName>loads</ParamName>
                </Param>
                <Param>
                  <Label>Level</Label>
                  <Initializer>
                    <Constant Type="float">50.0</Constant>
                    <Constant Type="float">50.0</Constant>
                    <Constant Type="float">50.0</Constant>
                  </Initializer>
                  <ParamName>levels</ParamName>
                </Param>
                <Param>
                  <Label>Seconds</Label>
                  <Constant Type="float">2.0</Constant>
                  <ParamName>rampTime</ParamName>
                </Param>
                <Param>
                  <Label>bool</Label>
                  <Constant Type="bool">true</Constant>
                  <ParamName>learnable</ParamName>
                </Param>
                <Param>
                  <Label>MemID</Label>
                  <Constant Type="int">0</Constant>
                  <ParamName>bufferid</ParamName>
                </Param>
              </Parameters>
            </FunctionCall>
            <Assignment disable="false">
              <Operand>
                <Identifier>param2</Identifier>
              </Operand>
              <Assign>equals</Assign>
              <Operand>
                <Label>Number</Label>
                <Constant Type="int">3</Constant>
              </Operand>
            </Assignment>
            <QueryCall>
              <Name>VariableAtSpecifiedValue</Name>
              <Parameters>
                <Param>
                  <Label>GMem</Label>
                  <Constant Type="int">10017</Constant>
                  <ParamName>variable</ParamName>
                </Param>
                <Param>
                  <Label>Number</Label>
                  <Constant Type="int">3</Constant>
                  <ParamName>value</ParamName>
                </Param>
              </Parameters>
            </QueryCall>
          </FunctionBody>
        </Scene>
      </Module>
    </Object>
    <Object>
      <Task VID="10029" Master="9722" MTime="">
        <Name>En-Suite Scene 2</Name>
        <Model>En-Suite Scene 2</Model>
        <Note />
        <DName />
        <ObjectType>Task</ObjectType>
        <Category>9864</Category>
        <Procedure>
          <Target>10182</Target>
          <Function>SceneProgram_10029</Function>
          <Parameters>
            <Param>0</Param>
            <Param>1</Param>
          </Parameters>
        </Procedure>
        <Query>
          <Target>10172</Target>
          <Function>VariableAtSpecifiedValue</Function>
          <Parameters>
            <Param>2</Param>
            <Param>3</Param>
          </Parameters>
        </Query>
        <Adjust>
          <Target>10173</Target>
          <Function>AdjustLoads</Function>
          <Parameters>
            <Param>4</Param>
            <Param>5</Param>
            <Param>6</Param>
          </Parameters>
        </Adjust>
        <Level Max="100">
          <Target>10173</Target>
          <Function>AverageLoadLevel</Function>
          <Parameters>
            <Param>4</Param>
          </Parameters>
        </Level>
        <ParamTable>
          <Param ID="0">
            <gmem Type="ref">9869</gmem>
          </Param>
          <Param ID="1">
            <gmem Type="ref">10016</gmem>
          </Param>
          <Param ID="2">
            <gmem>10016</gmem>
          </Param>
          <Param ID="3">
            <val>3</val>
          </Param>
          <Param ID="4">
            <array>
              <val>10383</val>
              <val>86</val>
              <val>9306</val>
            </array>
          </Param>
          <Param ID="5" Fixed="true">
            <val>5</val>
          </Param>
          <Param ID="6" Fixed="true">
            <val>10</val>
          </Param>
        </ParamTable>
        <DependTable>
          <Param>2</Param>
        </DependTable>
      </Task>
      <Module>
        <Library Name="Lighting\Toggle" Local="true" />
        <Library Name="vantage" Local="false" />
        <Scene>
          <Name>SceneProgram_10029</Name>
          <Type>procedure</Type>
          <Parameters>
            <Param>
              <Reference>true</Reference>
              <Label>bool</Label>
              <Label>GMem</Label>
              <Name>param1</Name>
            </Param>
            <Param>
              <Reference>true</Reference>
              <Label>Number</Label>
              <Label>GMem</Label>
              <Name>param3</Name>
            </Param>
          </Parameters>
          <ParameterValues>
            <Param>
              <Label>GMem</Label>
              <Constant Type="int">9869</Constant>
              <ParamName>param1</ParamName>
            </Param>
            <Param>
              <Label>GMem</Label>
              <Constant Type="int">10016</Constant>
              <ParamName>param3</ParamName>
            </Param>
          </ParameterValues>
          <FunctionBody>
            <FunctionCall disable="false">
              <Name>On</Name>
              <Parameters>
                <Param>
                  <Label>Load</Label>
                  <Initializer>
                    <Constant Type="int">10383</Constant>
                    <Constant Type="int">86</Constant>
                    <Constant Type="int">9306</Constant>
                  </Initializer>
                  <ParamName>loads</ParamName>
                </Param>
                <Param>
                  <Label>Level</Label>
                  <Initializer>
                    <Constant Type="float">50.0</Constant>
                    <Constant Type="float">50.0</Constant>
                    <Constant Type="float">50.0</Constant>
                  </Initializer>
                  <ParamName>levels</ParamName>
                </Param>
                <Param>
                  <Label>Seconds</Label>
                  <Constant Type="float">2.0</Constant>
                  <ParamName>rampTime</ParamName>
                </Param>
                <Param>
                  <Label>bool</Label>
                  <Constant Type="bool">true</Constant>
                  <ParamName>learnable</ParamName>
                </Param>
                <Param>
                  <Label>MemID</Label>
                  <Constant Type="int">0</Constant>
                  <ParamName>bufferid</ParamName>
                </Param>
              </Parameters>
            </FunctionCall>
            <Assignment disable="false">
              <Operand>
                <Identifier>param1</Identifier>
              </Operand>
              <Assign>equals</Assign>
              <Operand>
                <Label>bool</Label>
                <Constant Type="bool">true</Constant>
              </Operand>
            </Assignment>
            <Assignment disable="false">
              <Operand>
                <Identifier>param3</Identifier>
              </Operand>
              <Assign>equals</Assign>
              <Operand>
                <Label>Number</Label>
                <Constant Type="int">3</Constant>
              </Operand>
            </Assignment>
            <QueryCall>
              <Name>VariableAtSpecifiedValue</Name>
              <Parameters>
                <Param>
                  <Label>GMem</Label>
                  <Constant Type="int">10016</Constant>
                  <ParamName>variable</ParamName>
                </Param>
                <Param>
                  <Label>Number</Label>
                  <Constant Type="int">3</Constant>
                  <ParamName>value</ParamName>
                </Param>
              </Parameters>
            </QueryCall>
          </FunctionBody>
        </Scene>
      </Module>
    </Object>
    <Object>
      <Task VID="10030" Master="9722" MTime="">
        <Name>Bed 2 Scene 2</Name>
        <Model>Bed 2 Scene 2</Model>
        <Note />
        <DName />
        <ObjectType>Task</ObjectType>
        <Category>9901</Category>
        <Procedure>
          <Target>10183</Target>
          <Function>SceneProgram_10030</Function>
          <Parameters>
            <Param>0</Param>
          </Parameters>
        </Procedure>
        <Query>
          <Target>10172</Target>
          <Function>VariableAtSpecifiedValue</Function>
          <Parameters>
            <Param>1</Param>
            <Param>2</Param>
          </Parameters>
        </Query>
        <Adjust>
          <Target>10173</Target>
          <Function>AdjustLoads</Function>
          <Parameters>
            <Param>3</Param>
            <Param>4</Param>
            <Param>5</Param>
          </Parameters>
        </Adjust>
        <Level Max="100">
          <Target>10173</Target>
          <Function>AverageLoadLevel</Function>
          <Parameters>
            <Param>3</Param>
          </Parameters>
        </Level>
        <ParamTable>
          <Param ID="0">
            <gmem Type="ref">10015</gmem>
          </Param>
          <Param ID="1">
            <gmem>10015</gmem>
          </Param>
          <Param ID="2">
            <val>3</val>
          </Param>
          <Param ID="3">
            <array>
              <val>57</val>
              <val>56</val>
              <val>58</val>
            </array>
          </Param>
          <Param ID="4" Fixed="true">
            <val>5</val>
          </Param>
          <Param ID="5" Fixed="true">
            <val>10</val>
          </Param>
        </ParamTable>
        <DependTable>
          <Param>1</Param>
        </DependTable>
      </Task>
      <Module>
        <Library Name="Lighting\Toggle" Local="true" />
        <Library Name="vantage" Local="false" />
        <Scene>
          <Name>SceneProgram_10030</Name>
          <Type>procedure</Type>
          <Parameters>
            <Param>
              <Reference>true</Reference>
              <Label>Number</Label>
              <Label>GMem</Label>
              <Name>param1</Name>
            </Param>
          </Parameters>
          <ParameterValues>
            <Param>
              <Label>GMem</Label>
              <Constant Type="int">10015</Constant>
              <ParamName>param1</ParamName>
            </Param>
          </ParameterValues>
          <FunctionBody>
            <FunctionCall>
              <Name>On</Name>
              <Parameters>
                <Param>
                  <Label>Load</Label>
                  <Initializer>
                    <Constant Type="int">57</Constant>
                    <Constant Type="int">56</Constant>
                    <Constant Type="int">58</Constant>
                  </Initializer>
                  <ParamName>loads</ParamName>
                </Param>
                <Param>
                  <Label>Level</Label>
                  <Initializer>
                    <Constant Type="float">50.0</Constant>
                    <Constant Type="float">50.0</Constant>
                    <Constant Type="float">50.0</Constant>
                  </Initializer>
                  <ParamName>levels</ParamName>
                </Param>
                <Param>
                  <Label>Seconds</Label>
                  <Constant Type="float">2.0</Constant>
                  <ParamName>rampTime</ParamName>
                </Param>
                <Param>
                  <Label>bool</Label>
                  <Constant Type="bool">true</Constant>
                  <ParamName>learnable</ParamName>
                </Param>
                <Param>
                  <Label>MemID</Label>
                  <Constant Type="int">0</Constant>
                  <ParamName>bufferid</ParamName>
                </Param>
              </Parameters>
            </FunctionCall>
            <Assignment disable="false">
              <Operand>
                <Identifier>param1</Identifier>
              </Operand>
              <Assign>equals</Assign>
              <Operand>
                <Label>Number</Label>
                <Constant Type="int">3</Constant>
              </Operand>
            </Assignment>
            <QueryCall>
              <Name>VariableAtSpecifiedValue</Name>
              <Parameters>
                <Param>
                  <Label>GMem</Label>
                  <Constant Type="int">10015</Constant>
                  <ParamName>variable</ParamName>
                </Param>
                <Param>
                  <Label>Number</Label>
                  <Constant Type="int">3</Constant>
                  <ParamName>value</ParamName>
                </Param>
              </Parameters>
            </QueryCall>
          </FunctionBody>
        </Scene>
      </Module>
    </Object>
    <Object>
      <Task VID="10044" Master="9722" MTime="">
        <Name>Bathroom Scene 2</Name>
        <Model>Bathroom Scene 2</Model>
        <Note />
        <DName />
        <ObjectType>Task</ObjectType>
        <Category>9740</Category>
        <Procedure>
          <Target>10182</Target>
          <Function>SceneProgram_10044</Function>
          <Parameters>
            <Param>0</Param>
            <Param>1</Param>
          </Parameters>
        </Procedure>
        <Query>
          <Target>10172</Target>
          <Function>VariableAtSpecifiedValue</Function>
          <Parameters>
            <Param>2</Param>
            <Param>3</Param>
          </Parameters>
        </Query>
        <Adjust>
          <Target>10173</Target>
          <Function>AdjustLoads</Function>
          <Parameters>
            <Param>4</Param>
            <Param>5</Param>
            <Param>6</Param>
          </Parameters>
        </Adjust>
        <Level Max="100">
          <Target>10173</Target>
          <Function>AverageLoadLevel</Function>
          <Parameters>
            <Param>4</Param>
          </Parameters>
        </Level>
        <ParamTable>
          <Param ID="0">
            <gmem Type="ref">9732</gmem>
          </Param>
          <Param ID="1">
            <gmem Type="ref">10014</gmem>
          </Param>
          <Param ID="2">
            <gmem>10014</gmem>
          </Param>
          <Param ID="3">
            <val>3</val>
          </Param>
          <Param ID="4">
            <array>
              <val>84</val>
              <val>71</val>
            </array>
          </Param>
          <Param ID="5" Fixed="true">
            <val>5</val>
          </Param>
          <Param ID="6" Fixed="true">
            <val>10</val>
          </Param>
        </ParamTable>
        <DependTable>
          <Param>2</Param>
        </DependTable>
      </Task>
      <Module>
        <Library Name="Lighting\Toggle" Local="true" />
        <Library Name="vantage" Local="false" />
        <Scene>
          <Name>SceneProgram_10044</Name>
          <Type>procedure</Type>
          <Parameters>
            <Param>
              <Reference>true</Reference>
              <Label>bool</Label>
              <Label>GMem</Label>
              <Name>param1</Name>
            </Param>
            <Param>
              <Reference>true</Reference>
              <Label>Number</Label>
              <Label>GMem</Label>
              <Name>param5</Name>
            </Param>
          </Parameters>
          <ParameterValues>
            <Param>
              <Label>GMem</Label>
              <Constant Type="int">9732</Constant>
              <ParamName>param1</ParamName>
            </Param>
            <Param>
              <Label>GMem</Label>
              <Constant Type="int">10014</Constant>
              <ParamName>param5</ParamName>
            </Param>
          </ParameterValues>
          <FunctionBody>
            <FunctionCall disable="false">
              <Name>On</Name>
              <Parameters>
                <Param>
                  <Label>Load</Label>
                  <Initializer>
                    <Constant Type="int">84</Constant>
                    <Constant Type="int">71</Constant>
                  </Initializer>
                  <ParamName>loads</ParamName>
                </Param>
                <Param>
                  <Label>Level</Label>
                  <Initializer>
                    <Constant Type="float">50.0</Constant>
                    <Constant Type="float">50.0</Constant>
                  </Initializer>
                  <ParamName>levels</ParamName>
                </Param>
                <Param>
                  <Label>Seconds</Label>
                  <Constant Type="float">2.0</Constant>
                  <ParamName>rampTime</ParamName>
                </Param>
                <Param>
                  <Label>bool</Label>
                  <Constant Type="bool">true</Constant>
                  <ParamName>learnable</ParamName>
                </Param>
                <Param>
                  <Label>MemID</Label>
                  <Constant Type="int">0</Constant>
                  <ParamName>bufferid</ParamName>
                </Param>
              </Parameters>
            </FunctionCall>
            <Assignment disable="false">
              <Operand>
                <Identifier>param1</Identifier>
              </Operand>
              <Assign>equals</Assign>
              <Operand>
                <Label>bool</Label>
                <Constant Type="bool">true</Constant>
              </Operand>
            </Assignment>
            <Assignment disable="false">
              <Operand>
                <Identifier>param5</Identifier>
              </Operand>
              <Assign>equals</Assign>
              <Operand>
                <Label>Number</Label>
                <Constant Type="int">3</Constant>
              </Operand>
            </Assignment>
            <QueryCall>
              <Name>VariableAtSpecifiedValue</Name>
              <Parameters>
                <Param>
                  <Label>GMem</Label>
                  <Constant Type="int">10014</Constant>
                  <ParamName>variable</ParamName>
                </Param>
                <Param>
                  <Label>Number</Label>
                  <Constant Type="int">3</Constant>
                  <ParamName>value</ParamName>
                </Param>
              </Parameters>
            </QueryCall>
          </FunctionBody>
        </Scene>
      </Module>
    </Object>
    <Object>
      <Task VID="10047" Master="9722" MTime="">
        <Name>Living Scene 3</Name>
        <Model>Living Scene 3</Model>
        <Note />
        <DName />
        <ObjectType>Task</ObjectType>
        <Category>9903</Category>
        <Procedure>
          <Target>10440</Target>
          <Function>SceneProgram_10047</Function>
          <Parameters>
            <Param>0</Param>
          </Parameters>
        </Procedure>
        <Query>
          <Target>10172</Target>
          <Function>VariableAtSpecifiedValue</Function>
          <Parameters>
            <Param>1</Param>
            <Param>2</Param>
          </Parameters>
        </Query>
        <Adjust>
          <Target>10173</Target>
          <Function>AdjustLoads</Function>
          <Parameters>
            <Param>3</Param>
            <Param>4</Param>
            <Param>5</Param>
          </Parameters>
        </Adjust>
        <Level Max="100">
          <Target>10173</Target>
          <Function>AverageLoadLevel</Function>
          <Parameters>
            <Param>3</Param>
          </Parameters>
        </Level>
        <ParamTable>
          <Param ID="0">
            <gmem Type="ref">10019</gmem>
          </Param>
          <Param ID="1">
            <gmem>10019</gmem>
          </Param>
          <Param ID="2">
            <val>4</val>
          </Param>
          <Param ID="3">
            <array>
              <val>9307</val>
              <val>67</val>
              <val>66</val>
            </array>
          </Param>
          <Param ID="4" Fixed="true">
            <val>5</val>
          </Param>
          <Param ID="5" Fixed="true">
            <val>10</val>
          </Param>
        </ParamTable>
        <DependTable>
          <Param>1</Param>
        </DependTable>
      </Task>
      <Module>
        <Library Name="Lighting\Toggle" Local="true" />
        <Library Name="vantage" Local="false" />
        <Scene>
          <Name>SceneProgram_10047</Name>
          <Type>procedure</Type>
          <Parameters>
            <Param>
              <Reference>true</Reference>
              <Label>Number</Label>
              <Label>GMem</Label>
              <Name>param2</Name>
            </Param>
          </Parameters>
          <ParameterValues>
            <Param>
              <Label>GMem</Label>
              <Constant Type="int">10019</Constant>
              <ParamName>param2</ParamName>
            </Param>
          </ParameterValues>
          <FunctionBody>
            <FunctionCall>
              <Name>On</Name>
              <Parameters>
                <Param>
                  <Label>Load</Label>
                  <Initializer>
                    <Constant Type="int">9307</Constant>
                    <Constant Type="int">67</Constant>
                    <Constant Type="int">66</Constant>
                  </Initializer>
                  <ParamName>loads</ParamName>
                </Param>
                <Param>
                  <Label>Level</Label>
                  <Initializer>
                    <Constant Type="float">0.0</Constant>
                    <Constant Type="float">70.0</Constant>
                    <Constant Type="float">0.0</Constant>
                  </Initializer>
                  <ParamName>levels</ParamName>
                </Param>
                <Param>
                  <Label>Seconds</Label>
                  <Constant Type="float">2.0</Constant>
                  <ParamName>rampTime</ParamName>
                </Param>
                <Param>
                  <Label>bool</Label>
                  <Constant Type="bool">true</Constant>
                  <ParamName>learnable</ParamName>
                </Param>
                <Param>
                  <Label>MemID</Label>
                  <Constant Type="int">0</Constant>
                  <ParamName>bufferid</ParamName>
                </Param>
              </Parameters>
            </FunctionCall>
            <Assignment disable="false">
              <Operand>
                <Identifier>param2</Identifier>
              </Operand>
              <Assign>equals</Assign>
              <Operand>
                <Label>Number</Label>
                <Constant Type="int">4</Constant>
              </Operand>
            </Assignment>
            <QueryCall>
              <Name>VariableAtSpecifiedValue</Name>
              <Parameters>
                <Param>
                  <Label>GMem</Label>
                  <Constant Type="int">10019</Constant>
                  <ParamName>variable</ParamName>
                </Param>
                <Param>
                  <Label>Number</Label>
                  <Constant Type="int">4</Constant>
                  <ParamName>value</ParamName>
                </Param>
              </Parameters>
            </QueryCall>
          </FunctionBody>
        </Scene>
      </Module>
    </Object>
    <Object>
      <Task VID="10049" Master="9722" MTime="">
        <Name>Kitchen Scene 3</Name>
        <Model>Kitchen Scene 3</Model>
        <Note />
        <DName />
        <ObjectType>Task</ObjectType>
        <Category>9904</Category>
        <Procedure>
          <Target>10181</Target>
          <Function>SceneProgram_10049</Function>
          <Parameters>
            <Param>0</Param>
          </Parameters>
        </Procedure>
        <Query>
          <Target>10172</Target>
          <Function>VariableAtSpecifiedValue</Function>
          <Parameters>
            <Param>1</Param>
            <Param>2</Param>
          </Parameters>
        </Query>
        <Adjust>
          <Target>0</Target>
          <Function />
          <Parameters />
        </Adjust>
        <Level>
          <Target>0</Target>
          <Function />
          <Parameters />
        </Level>
        <ParamTable>
          <Param ID="0">
            <gmem Type="ref">10018</gmem>
          </Param>
          <Param ID="1">
            <gmem>10018</gmem>
          </Param>
          <Param ID="2">
            <val>4</val>
          </Param>
        </ParamTable>
        <DependTable>
          <Param>1</Param>
        </DependTable>
      </Task>
      <Module>
        <Library Name="Lighting\Toggle" Local="true" />
        <Library Name="vantage" Local="false" />
        <Scene>
          <Name>SceneProgram_10049</Name>
          <Type>procedure</Type>
          <Parameters>
            <Param>
              <Reference>true</Reference>
              <Label>Number</Label>
              <Label>GMem</Label>
              <Name>param2</Name>
            </Param>
          </Parameters>
          <ParameterValues>
            <Param>
              <Label>GMem</Label>
              <Constant Type="int">10018</Constant>
              <ParamName>param2</ParamName>
            </Param>
          </ParameterValues>
          <FunctionBody>
            <FunctionCall disable="false">
              <Name>On</Name>
              <Parameters>
                <Param>
                  <Label>Load</Label>
                  <Initializer>
                    <Constant Type="int">10384</Constant>
                    <Constant Type="int">83</Constant>
                    <Constant Type="int">10413</Constant>
                    <Constant Type="int">70</Constant>
                  </Initializer>
                  <ParamName>loads</ParamName>
                </Param>
                <Param>
                  <Label>Level</Label>
                  <Initializer>
                    <Constant Type="float">0.0</Constant>
                    <Constant Type="float">70.0</Constant>
                    <Constant Type="float">100.0</Constant>
                    <Constant Type="float">0.0</Constant>
                  </Initializer>
                  <ParamName>levels</ParamName>
                </Param>
                <Param>
                  <Label>Seconds</Label>
                  <Constant Type="float">2.0</Constant>
                  <ParamName>rampTime</ParamName>
                </Param>
                <Param>
                  <Label>bool</Label>
                  <Constant Type="bool">true</Constant>
                  <ParamName>learnable</ParamName>
                </Param>
                <Param>
                  <Label>MemID</Label>
                  <Constant Type="int">0</Constant>
                  <ParamName>bufferid</ParamName>
                </Param>
              </Parameters>
            </FunctionCall>
            <Assignment disable="false">
              <Operand>
                <Identifier>param2</Identifier>
              </Operand>
              <Assign>equals</Assign>
              <Operand>
                <Label>Number</Label>
                <Constant Type="int">4</Constant>
              </Operand>
            </Assignment>
            <QueryCall>
              <Name>VariableAtSpecifiedValue</Name>
              <Parameters>
                <Param>
                  <Label>GMem</Label>
                  <Constant Type="int">10018</Constant>
                  <ParamName>variable</ParamName>
                </Param>
                <Param>
                  <Label>Number</Label>
                  <Constant Type="int">4</Constant>
                  <ParamName>value</ParamName>
                </Param>
              </Parameters>
            </QueryCall>
          </FunctionBody>
        </Scene>
      </Module>
    </Object>
    <Object>
      <Task VID="10050" Master="9722" MTime="">
        <Name>Master Bedroom Scene 3</Name>
        <Model>Master Bedroom Scene 3</Model>
        <Note />
        <DName />
        <ObjectType>Task</ObjectType>
        <Category>9885</Category>
        <Procedure>
          <Target>10177</Target>
          <Function>SceneProgram_10050</Function>
          <Parameters>
            <Param>0</Param>
          </Parameters>
        </Procedure>
        <Query>
          <Target>10172</Target>
          <Function>VariableAtSpecifiedValue</Function>
          <Parameters>
            <Param>1</Param>
            <Param>2</Param>
          </Parameters>
        </Query>
        <Adjust>
          <Target>10173</Target>
          <Function>AdjustLoads</Function>
          <Parameters>
            <Param>3</Param>
            <Param>4</Param>
            <Param>5</Param>
          </Parameters>
        </Adjust>
        <Level Max="100">
          <Target>10173</Target>
          <Function>AverageLoadLevel</Function>
          <Parameters>
            <Param>3</Param>
          </Parameters>
        </Level>
        <ParamTable>
          <Param ID="0">
            <gmem Type="ref">10017</gmem>
          </Param>
          <Param ID="1">
            <gmem>10017</gmem>
          </Param>
          <Param ID="2">
            <val>4</val>
          </Param>
          <Param ID="3">
            <array>
              <val>55</val>
              <val>53</val>
              <val>54</val>
            </array>
          </Param>
          <Param ID="4" Fixed="true">
            <val>5</val>
          </Param>
          <Param ID="5" Fixed="true">
            <val>10</val>
          </Param>
        </ParamTable>
        <DependTable>
          <Param>1</Param>
        </DependTable>
      </Task>
      <Module>
        <Library Name="Lighting\Toggle" Local="true" />
        <Library Name="vantage" Local="false" />
        <Scene>
          <Name>SceneProgram_10050</Name>
          <Type>procedure</Type>
          <Parameters>
            <Param>
              <Reference>true</Reference>
              <Label>Number</Label>
              <Label>GMem</Label>
              <Name>param2</Name>
            </Param>
          </Parameters>
          <ParameterValues>
            <Param>
              <Label>GMem</Label>
              <Constant Type="int">10017</Constant>
              <ParamName>param2</ParamName>
            </Param>
          </ParameterValues>
          <FunctionBody>
            <FunctionCall disable="false">
              <Name>On</Name>
              <Parameters>
                <Param>
                  <Label>Load</Label>
                  <Initializer>
                    <Constant Type="int">55</Constant>
                    <Constant Type="int">53</Constant>
                    <Constant Type="int">54</Constant>
                  </Initializer>
                  <ParamName>loads</ParamName>
                </Param>
                <Param>
                  <Label>Level</Label>
                  <Initializer>
                    <Constant Type="float">0.0</Constant>
                    <Constant Type="float">0.0</Constant>
                    <Constant Type="float">70.0</Constant>
                  </Initializer>
                  <ParamName>levels</ParamName>
                </Param>
                <Param>
                  <Label>Seconds</Label>
                  <Constant Type="float">2.0</Constant>
                  <ParamName>rampTime</ParamName>
                </Param>
                <Param>
                  <Label>bool</Label>
                  <Constant Type="bool">true</Constant>
                  <ParamName>learnable</ParamName>
                </Param>
                <Param>
                  <Label>MemID</Label>
                  <Constant Type="int">0</Constant>
                  <ParamName>bufferid</ParamName>
                </Param>
              </Parameters>
            </FunctionCall>
            <Assignment disable="false">
              <Operand>
                <Identifier>param2</Identifier>
              </Operand>
              <Assign>equals</Assign>
              <Operand>
                <Label>Number</Label>
                <Constant Type="int">4</Constant>
              </Operand>
            </Assignment>
            <QueryCall>
              <Name>VariableAtSpecifiedValue</Name>
              <Parameters>
                <Param>
                  <Label>GMem</Label>
                  <Constant Type="int">10017</Constant>
                  <ParamName>variable</ParamName>
                </Param>
                <Param>
                  <Label>Number</Label>
                  <Constant Type="int">4</Constant>
                  <ParamName>value</ParamName>
                </Param>
              </Parameters>
            </QueryCall>
          </FunctionBody>
        </Scene>
      </Module>
    </Object>
    <Object>
      <Task VID="10051" Master="9722" MTime="">
        <Name>En-Suite Scene 3</Name>
        <Model>En-Suite Scene 3</Model>
        <Note />
        <DName />
        <ObjectType>Task</ObjectType>
        <Category>9864</Category>
        <Procedure>
          <Target>10182</Target>
          <Function>SceneProgram_10051</Function>
          <Parameters>
            <Param>0</Param>
            <Param>1</Param>
          </Parameters>
        </Procedure>
        <Query>
          <Target>10172</Target>
          <Function>VariableAtSpecifiedValue</Function>
          <Parameters>
            <Param>2</Param>
            <Param>3</Param>
          </Parameters>
        </Query>
        <Adjust>
          <Target>10173</Target>
          <Function>AdjustLoads</Function>
          <Parameters>
            <Param>4</Param>
            <Param>5</Param>
            <Param>6</Param>
          </Parameters>
        </Adjust>
        <Level Max="100">
          <Target>10173</Target>
          <Function>AverageLoadLevel</Function>
          <Parameters>
            <Param>4</Param>
          </Parameters>
        </Level>
        <ParamTable>
          <Param ID="0">
            <gmem Type="ref">9869</gmem>
          </Param>
          <Param ID="1">
            <gmem Type="ref">10016</gmem>
          </Param>
          <Param ID="2">
            <gmem>10016</gmem>
          </Param>
          <Param ID="3">
            <val>4</val>
          </Param>
          <Param ID="4">
            <array>
              <val>10383</val>
              <val>86</val>
              <val>9306</val>
            </array>
          </Param>
          <Param ID="5" Fixed="true">
            <val>5</val>
          </Param>
          <Param ID="6" Fixed="true">
            <val>10</val>
          </Param>
        </ParamTable>
        <DependTable>
          <Param>2</Param>
        </DependTable>
      </Task>
      <Module>
        <Library Name="Lighting\Toggle" Local="true" />
        <Library Name="vantage" Local="false" />
        <Scene>
          <Name>SceneProgram_10051</Name>
          <Type>procedure</Type>
          <Parameters>
            <Param>
              <Reference>true</Reference>
              <Label>bool</Label>
              <Label>GMem</Label>
              <Name>param1</Name>
            </Param>
            <Param>
              <Reference>true</Reference>
              <Label>Number</Label>
              <Label>GMem</Label>
              <Name>param3</Name>
            </Param>
          </Parameters>
          <ParameterValues>
            <Param>
              <Label>GMem</Label>
              <Constant Type="int">9869</Constant>
              <ParamName>param1</ParamName>
            </Param>
            <Param>
              <Label>GMem</Label>
              <Constant Type="int">10016</Constant>
              <ParamName>param3</ParamName>
            </Param>
          </ParameterValues>
          <FunctionBody>
            <FunctionCall disable="false">
              <Name>On</Name>
              <Parameters>
                <Param>
                  <Label>Load</Label>
                  <Initializer>
                    <Constant Type="int">10383</Constant>
                    <Constant Type="int">86</Constant>
                    <Constant Type="int">9306</Constant>
                  </Initializer>
                  <ParamName>loads</ParamName>
                </Param>
                <Param>
                  <Label>Level</Label>
                  <Initializer>
                    <Constant Type="float">0.0</Constant>
                    <Constant Type="float">70.0</Constant>
                    <Constant Type="float">0.0</Constant>
                  </Initializer>
                  <ParamName>levels</ParamName>
                </Param>
                <Param>
                  <Label>Seconds</Label>
                  <Constant Type="float">2.0</Constant>
                  <ParamName>rampTime</ParamName>
                </Param>
                <Param>
                  <Label>bool</Label>
                  <Constant Type="bool">true</Constant>
                  <ParamName>learnable</ParamName>
                </Param>
                <Param>
                  <Label>MemID</Label>
                  <Constant Type="int">0</Constant>
                  <ParamName>bufferid</ParamName>
                </Param>
              </Parameters>
            </FunctionCall>
            <Assignment disable="false">
              <Operand>
                <Identifier>param1</Identifier>
              </Operand>
              <Assign>equals</Assign>
              <Operand>
                <Label>bool</Label>
                <Constant Type="bool">true</Constant>
              </Operand>
            </Assignment>
            <Assignment disable="false">
              <Operand>
                <Identifier>param3</Identifier>
              </Operand>
              <Assign>equals</Assign>
              <Operand>
                <Label>Number</Label>
                <Constant Type="int">4</Constant>
              </Operand>
            </Assignment>
            <QueryCall>
              <Name>VariableAtSpecifiedValue</Name>
              <Parameters>
                <Param>
                  <Label>GMem</Label>
                  <Constant Type="int">10016</Constant>
                  <ParamName>variable</ParamName>
                </Param>
                <Param>
                  <Label>Number</Label>
                  <Constant Type="int">4</Constant>
                  <ParamName>value</ParamName>
                </Param>
              </Parameters>
            </QueryCall>
          </FunctionBody>
        </Scene>
      </Module>
    </Object>
    <Object>
      <Task VID="10052" Master="9722" MTime="">
        <Name>Bed 2 Scene 3</Name>
        <Model>Bed 2 Scene 3</Model>
        <Note />
        <DName />
        <ObjectType>Task</ObjectType>
        <Category>9901</Category>
        <Procedure>
          <Target>10182</Target>
          <Function>SceneProgram_10052</Function>
          <Parameters>
            <Param>0</Param>
          </Parameters>
        </Procedure>
        <Query>
          <Target>10172</Target>
          <Function>VariableAtSpecifiedValue</Function>
          <Parameters>
            <Param>1</Param>
            <Param>2</Param>
          </Parameters>
        </Query>
        <Adjust>
          <Target>10173</Target>
          <Function>AdjustLoads</Function>
          <Parameters>
            <Param>3</Param>
            <Param>4</Param>
            <Param>5</Param>
          </Parameters>
        </Adjust>
        <Level Max="100">
          <Target>10173</Target>
          <Function>AverageLoadLevel</Function>
          <Parameters>
            <Param>3</Param>
          </Parameters>
        </Level>
        <ParamTable>
          <Param ID="0">
            <gmem Type="ref">10015</gmem>
          </Param>
          <Param ID="1">
            <gmem>10015</gmem>
          </Param>
          <Param ID="2">
            <val>4</val>
          </Param>
          <Param ID="3">
            <array>
              <val>57</val>
              <val>56</val>
              <val>58</val>
            </array>
          </Param>
          <Param ID="4" Fixed="true">
            <val>5</val>
          </Param>
          <Param ID="5" Fixed="true">
            <val>10</val>
          </Param>
        </ParamTable>
        <DependTable>
          <Param>1</Param>
        </DependTable>
      </Task>
      <Module>
        <Library Name="Lighting\Toggle" Local="true" />
        <Library Name="vantage" Local="false" />
        <Scene>
          <Name>SceneProgram_10052</Name>
          <Type>procedure</Type>
          <Parameters>
            <Param>
              <Reference>true</Reference>
              <Label>Number</Label>
              <Label>GMem</Label>
              <Name>param1</Name>
            </Param>
          </Parameters>
          <ParameterValues>
            <Param>
              <Label>GMem</Label>
              <Constant Type="int">10015</Constant>
              <ParamName>param1</ParamName>
            </Param>
          </ParameterValues>
          <FunctionBody>
            <FunctionCall>
              <Name>On</Name>
              <Parameters>
                <Param>
                  <Label>Load</Label>
                  <Initializer>
                    <Constant Type="int">57</Constant>
                    <Constant Type="int">56</Constant>
                    <Constant Type="int">58</Constant>
                  </Initializer>
                  <ParamName>loads</ParamName>
                </Param>
                <Param>
                  <Label>Level</Label>
                  <Initializer>
                    <Constant Type="float">0.0</Constant>
                    <Constant Type="float">0.0</Constant>
                    <Constant Type="float">70.0</Constant>
                  </Initializer>
                  <ParamName>levels</ParamName>
                </Param>
                <Param>
                  <Label>Seconds</Label>
                  <Constant Type="float">2.0</Constant>
                  <ParamName>rampTime</ParamName>
                </Param>
                <Param>
                  <Label>bool</Label>
                  <Constant Type="bool">true</Constant>
                  <ParamName>learnable</ParamName>
                </Param>
                <Param>
                  <Label>MemID</Label>
                  <Constant Type="int">0</Constant>
                  <ParamName>bufferid</ParamName>
                </Param>
              </Parameters>
            </FunctionCall>
            <Assignment disable="false">
              <Operand>
                <Identifier>param1</Identifier>
              </Operand>
              <Assign>equals</Assign>
              <Operand>
                <Label>Number</Label>
                <Constant Type="int">4</Constant>
              </Operand>
            </Assignment>
            <QueryCall>
              <Name>VariableAtSpecifiedValue</Name>
              <Parameters>
                <Param>
                  <Label>GMem</Label>
                  <Constant Type="int">10015</Constant>
                  <ParamName>variable</ParamName>
                </Param>
                <Param>
                  <Label>Number</Label>
                  <Constant Type="int">4</Constant>
                  <ParamName>value</ParamName>
                </Param>
              </Parameters>
            </QueryCall>
          </FunctionBody>
        </Scene>
      </Module>
    </Object>
    <Object>
      <Task VID="10053" Master="9722" MTime="">
        <Name>Bathroom Scene 3</Name>
        <Model>Bathroom Scene 3</Model>
        <Note />
        <DName />
        <ObjectType>Task</ObjectType>
        <Category>9740</Category>
        <Procedure>
          <Target>10182</Target>
          <Function>SceneProgram_10053</Function>
          <Parameters>
            <Param>0</Param>
            <Param>1</Param>
          </Parameters>
        </Procedure>
        <Query>
          <Target>10172</Target>
          <Function>VariableAtSpecifiedValue</Function>
          <Parameters>
            <Param>2</Param>
            <Param>3</Param>
          </Parameters>
        </Query>
        <Adjust>
          <Target>10173</Target>
          <Function>AdjustLoads</Function>
          <Parameters>
            <Param>4</Param>
            <Param>5</Param>
            <Param>6</Param>
          </Parameters>
        </Adjust>
        <Level Max="100">
          <Target>10173</Target>
          <Function>AverageLoadLevel</Function>
          <Parameters>
            <Param>4</Param>
          </Parameters>
        </Level>
        <ParamTable>
          <Param ID="0">
            <gmem Type="ref">9732</gmem>
          </Param>
          <Param ID="1">
            <gmem Type="ref">10014</gmem>
          </Param>
          <Param ID="2">
            <gmem>10014</gmem>
          </Param>
          <Param ID="3">
            <val>4</val>
          </Param>
          <Param ID="4">
            <array>
              <val>84</val>
              <val>71</val>
            </array>
          </Param>
          <Param ID="5" Fixed="true">
            <val>5</val>
          </Param>
          <Param ID="6" Fixed="true">
            <val>10</val>
          </Param>
        </ParamTable>
        <DependTable>
          <Param>2</Param>
        </DependTable>
      </Task>
      <Module>
        <Library Name="Lighting\Toggle" Local="true" />
        <Library Name="vantage" Local="false" />
        <Scene>
          <Name>SceneProgram_10053</Name>
          <Type>procedure</Type>
          <Parameters>
            <Param>
              <Reference>true</Reference>
              <Label>bool</Label>
              <Label>GMem</Label>
              <Name>param1</Name>
            </Param>
            <Param>
              <Reference>true</Reference>
              <Label>Number</Label>
              <Label>GMem</Label>
              <Name>param5</Name>
            </Param>
          </Parameters>
          <ParameterValues>
            <Param>
              <Label>GMem</Label>
              <Constant Type="int">9732</Constant>
              <ParamName>param1</ParamName>
            </Param>
            <Param>
              <Label>GMem</Label>
              <Constant Type="int">10014</Constant>
              <ParamName>param5</ParamName>
            </Param>
          </ParameterValues>
          <FunctionBody>
            <FunctionCall disable="false">
              <Name>On</Name>
              <Parameters>
                <Param>
                  <Label>Load</Label>
                  <Initializer>
                    <Constant Type="int">84</Constant>
                    <Constant Type="int">71</Constant>
                  </Initializer>
                  <ParamName>loads</ParamName>
                </Param>
                <Param>
                  <Label>Level</Label>
                  <Initializer>
                    <Constant Type="float">50.0</Constant>
                    <Constant Type="float">50.0</Constant>
                  </Initializer>
                  <ParamName>levels</ParamName>
                </Param>
                <Param>
                  <Label>Seconds</Label>
                  <Constant Type="float">2.0</Constant>
                  <ParamName>rampTime</ParamName>
                </Param>
                <Param>
                  <Label>bool</Label>
                  <Constant Type="bool">true</Constant>
                  <ParamName>learnable</ParamName>
                </Param>
                <Param>
                  <Label>MemID</Label>
                  <Constant Type="int">0</Constant>
                  <ParamName>bufferid</ParamName>
                </Param>
              </Parameters>
            </FunctionCall>
            <Assignment disable="false">
              <Operand>
                <Identifier>param1</Identifier>
              </Operand>
              <Assign>equals</Assign>
              <Operand>
                <Label>bool</Label>
                <Constant Type="bool">true</Constant>
              </Operand>
            </Assignment>
            <Assignment disable="false">
              <Operand>
                <Identifier>param5</Identifier>
              </Operand>
              <Assign>equals</Assign>
              <Operand>
                <Label>Number</Label>
                <Constant Type="int">4</Constant>
              </Operand>
            </Assignment>
            <QueryCall>
              <Name>VariableAtSpecifiedValue</Name>
              <Parameters>
                <Param>
                  <Label>GMem</Label>
                  <Constant Type="int">10014</Constant>
                  <ParamName>variable</ParamName>
                </Param>
                <Param>
                  <Label>Number</Label>
                  <Constant Type="int">4</Constant>
                  <ParamName>value</ParamName>
                </Param>
              </Parameters>
            </QueryCall>
          </FunctionBody>
        </Scene>
      </Module>
    </Object>
    <Object>
      <Task VID="10054" Master="9722" MTime="">
        <Name>ES 1 PIR</Name>
        <Model>ES 1 PIR</Model>
        <Note />
        <DName />
        <ObjectType>Task</ObjectType>
        <Category>9741</Category>
        <Procedure>
          <Target>10182</Target>
          <Function>SceneProgram_10054</Function>
          <Parameters>
            <Param>0</Param>
          </Parameters>
        </Procedure>
        <Query>
          <Target>10172</Target>
          <Function>VariableAtSpecifiedValue</Function>
          <Parameters>
            <Param>1</Param>
            <Param>2</Param>
          </Parameters>
        </Query>
        <Adjust>
          <Target>0</Target>
          <Function />
          <Parameters />
        </Adjust>
        <Level>
          <Target>0</Target>
          <Function />
          <Parameters />
        </Level>
        <ParamTable>
          <Param ID="0">
            <gmem Type="ref">10055</gmem>
          </Param>
          <Param ID="1">
            <gmem>10055</gmem>
          </Param>
          <Param ID="2">
            <val>0</val>
          </Param>
        </ParamTable>
        <DependTable>
          <Param>1</Param>
        </DependTable>
      </Task>
      <Module>
        <Library Name="Lighting\Toggle" Local="true" />
        <Library Name="vantage" Local="false" />
        <Scene>
          <Name>SceneProgram_10054</Name>
          <Type>procedure</Type>
          <Parameters>
            <Param>
              <Reference>true</Reference>
              <Label>Number</Label>
              <Label>GMem</Label>
              <Name>param1</Name>
            </Param>
          </Parameters>
          <ParameterValues>
            <Param>
              <Label>GMem</Label>
              <Constant Type="int">10055</Constant>
              <ParamName>param1</ParamName>
            </Param>
          </ParameterValues>
          <FunctionBody>
            <If disable="false">
              <LogicalExpression>
                <GivePrecedence>false</GivePrecedence>
                <Expanded>true</Expanded>
                <RelationalExpression>
                  <Operand>
                    <Label>Number</Label>
                    <Identifier>param1</Identifier>
                  </Operand>
                  <Operator>eq</Operator>
                  <Operand>
                    <Label>Number</Label>
                    <Constant Type="int">1</Constant>
                  </Operand>
                </RelationalExpression>
              </LogicalExpression>
              <StatementList>
                <Assignment disable="false">
                  <Operand>
                    <Identifier>param1</Identifier>
                  </Operand>
                  <Assign>equals</Assign>
                  <Operand>
                    <Label>Number</Label>
                    <Constant Type="int">0</Constant>
                  </Operand>
                </Assignment>
              </StatementList>
              <Expanded>True</Expanded>
            </If>
            <Else disable="false">
              <StatementList>
                <Assignment disable="false">
                  <Operand>
                    <Identifier>param1</Identifier>
                  </Operand>
                  <Assign>equals</Assign>
                  <Operand>
                    <Label>Number</Label>
                    <Constant Type="int">1</Constant>
                  </Operand>
                </Assignment>
                <FunctionCall disable="false">
                  <Name>Off</Name>
                  <Parameters>
                    <Param>
                      <Label>Load</Label>
                      <Initializer>
                        <Constant Type="int">10383</Constant>
                        <Constant Type="int">86</Constant>
                        <Constant Type="int">9306</Constant>
                      </Initializer>
                      <ParamName>loads</ParamName>
                    </Param>
                    <Param>
                      <Label>Seconds</Label>
                      <Constant Type="float">2.0</Constant>
                      <ParamName>rampTime</ParamName>
                    </Param>
                  </Parameters>
                </FunctionCall>
              </StatementList>
              <Expanded>True</Expanded>
            </Else>
            <QueryCall>
              <Name>VariableAtSpecifiedValue</Name>
              <Parameters>
                <Param>
                  <Label>GMem</Label>
                  <Constant Type="int">10055</Constant>
                  <ParamName>variable</ParamName>
                </Param>
                <Param>
                  <Label>Number</Label>
                  <Constant Type="int">0</Constant>
                  <ParamName>value</ParamName>
                </Param>
              </Parameters>
            </QueryCall>
          </FunctionBody>
        </Scene>
      </Module>
    </Object>
    <Object>
      <GMem VID="10055" Master="9722" MTime="">
        <Name>ES 1 PIR</Name>
        <Model />
        <Note />
        <DName />
        <ObjectType>GMem</ObjectType>
        <Category>9741</Category>
        <data Fixed="false">
          <val>0</val>
        </data>
        <Persistent>true</Persistent>
        <Tag object="false">Number</Tag>
      </GMem>
    </Object>
    <Object>
      <Task VID="10056" Master="9722" MTime="">
        <Name>Hall PIR</Name>
        <Model>Hall PIR</Model>
        <Note />
        <DName />
        <ObjectType>Task</ObjectType>
        <Category>9741</Category>
        <Procedure>
          <Target>10183</Target>
          <Function>SceneProgram_10056</Function>
          <Parameters>
            <Param>0</Param>
          </Parameters>
        </Procedure>
        <Query>
          <Target>10172</Target>
          <Function>VariableAtSpecifiedValue</Function>
          <Parameters>
            <Param>1</Param>
            <Param>2</Param>
          </Parameters>
        </Query>
        <Adjust>
          <Target>0</Target>
          <Function />
          <Parameters />
        </Adjust>
        <Level>
          <Target>0</Target>
          <Function />
          <Parameters />
        </Level>
        <ParamTable>
          <Param ID="0">
            <gmem Type="ref">10057</gmem>
          </Param>
          <Param ID="1">
            <gmem>10057</gmem>
          </Param>
          <Param ID="2">
            <val>0</val>
          </Param>
        </ParamTable>
        <DependTable>
          <Param>1</Param>
        </DependTable>
      </Task>
      <Module>
        <Library Name="Lighting\Toggle" Local="true" />
        <Library Name="vantage" Local="false" />
        <Scene>
          <Name>SceneProgram_10056</Name>
          <Type>procedure</Type>
          <Parameters>
            <Param>
              <Reference>true</Reference>
              <Label>Number</Label>
              <Label>GMem</Label>
              <Name>param1</Name>
            </Param>
          </Parameters>
          <ParameterValues>
            <Param>
              <Label>GMem</Label>
              <Constant Type="int">10057</Constant>
              <ParamName>param1</ParamName>
            </Param>
          </ParameterValues>
          <FunctionBody>
            <If disable="false">
              <LogicalExpression>
                <GivePrecedence>false</GivePrecedence>
                <Expanded>true</Expanded>
                <RelationalExpression>
                  <Operand>
                    <Label>Number</Label>
                    <Identifier>param1</Identifier>
                  </Operand>
                  <Operator>eq</Operator>
                  <Operand>
                    <Label>Number</Label>
                    <Constant Type="int">1</Constant>
                  </Operand>
                </RelationalExpression>
              </LogicalExpression>
              <StatementList>
                <Assignment disable="false">
                  <Operand>
                    <Identifier>param1</Identifier>
                  </Operand>
                  <Assign>equals</Assign>
                  <Operand>
                    <Label>Number</Label>
                    <Constant Type="int">0</Constant>
                  </Operand>
                </Assignment>
              </StatementList>
              <Expanded>True</Expanded>
            </If>
            <Else disable="false">
              <StatementList>
                <Assignment disable="false">
                  <Operand>
                    <Identifier>param1</Identifier>
                  </Operand>
                  <Assign>equals</Assign>
                  <Operand>
                    <Label>Number</Label>
                    <Constant Type="int">1</Constant>
                  </Operand>
                </Assignment>
                <FunctionCall disable="false">
                  <Name>Off</Name>
                  <Parameters>
                    <Param>
                      <Label>Load</Label>
                      <Initializer>
                        <Constant Type="int">79</Constant>
                      </Initializer>
                      <ParamName>loads</ParamName>
                    </Param>
                    <Param>
                      <Label>Seconds</Label>
                      <Constant Type="float">2.0</Constant>
                      <ParamName>rampTime</ParamName>
                    </Param>
                  </Parameters>
                </FunctionCall>
              </StatementList>
              <Expanded>True</Expanded>
            </Else>
            <QueryCall>
              <Name>VariableAtSpecifiedValue</Name>
              <Parameters>
                <Param>
                  <Label>GMem</Label>
                  <Constant Type="int">10057</Constant>
                  <ParamName>variable</ParamName>
                </Param>
                <Param>
                  <Label>Number</Label>
                  <Constant Type="int">0</Constant>
                  <ParamName>value</ParamName>
                </Param>
              </Parameters>
            </QueryCall>
          </FunctionBody>
        </Scene>
      </Module>
    </Object>
    <Object>
      <GMem VID="10057" Master="9722" MTime="">
        <Name>Hall PIR</Name>
        <Model />
        <Note />
        <DName />
        <ObjectType>GMem</ObjectType>
        <Category>9741</Category>
        <data Fixed="false">
          <val>0</val>
        </data>
        <Persistent>true</Persistent>
        <Tag object="false">Number</Tag>
      </GMem>
    </Object>
    <Object>
      <Task VID="10058" Master="9722" MTime="">
        <Name>Home On Vantage and Hall PIR</Name>
        <Model>Home On Vantage and Hall PIR</Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Task</ObjectType>
        <Category>9876</Category>
        <Procedure>
          <Target>10171</Target>
          <Function>PressAndHold</Function>
          <Parameters>
            <Param>0</Param>
            <Param>1</Param>
            <Param>2</Param>
            <Param>3</Param>
          </Parameters>
        </Procedure>
        <Query>
          <Target>10172</Target>
          <Function>VariableAtSpecifiedValue</Function>
          <Parameters>
            <Param>4</Param>
            <Param>3</Param>
          </Parameters>
        </Query>
        <Adjust>
          <Target>0</Target>
          <Function />
          <Parameters />
        </Adjust>
        <Level>
          <Target>0</Target>
          <Function />
          <Parameters />
        </Level>
        <ParamTable>
          <Param ID="0">
            <array>
              <val>10102</val>
            </array>
          </Param>
          <Param ID="1">
            <array>
              <val>10056</val>
            </array>
          </Param>
          <Param ID="2">
            <val>0</val>
          </Param>
          <Param ID="3">
            <val>2</val>
          </Param>
          <Param ID="4">
            <gmem>10106</gmem>
          </Param>
        </ParamTable>
        <DependTable>
          <Param>4</Param>
        </DependTable>
      </Task>
      <Module>
        <Library Name="Programming\LaunchTasks" Local="true" />
        <Library Name="vantage" Local="false" />
        <Scene>
          <Name>SceneProgram_10058</Name>
          <Type>procedure</Type>
          <Parameters />
          <ParameterValues />
          <FunctionBody>
            <FunctionCall disable="false">
              <Name>PressAndHold</Name>
              <Parameters>
                <Param>
                  <Label>Task</Label>
                  <Initializer>
                    <Constant Type="int">10102</Constant>
                  </Initializer>
                  <ParamName>pressTasks</ParamName>
                </Param>
                <Param>
                  <Label>Task</Label>
                  <Initializer>
                    <Constant Type="int">10056</Constant>
                  </Initializer>
                  <ParamName>holdTasks</ParamName>
                </Param>
                <Param>
                  <Label>TriggerType</Label>
                  <Identifier>ButtonRelease</Identifier>
                  <ParamName>pressEventType</ParamName>
                </Param>
                <Param>
                  <Label>TriggerType</Label>
                  <Identifier>ButtonHold</Identifier>
                  <ParamName>holdEventType</ParamName>
                </Param>
              </Parameters>
            </FunctionCall>
            <QueryCall>
              <Name>VariableAtSpecifiedValue</Name>
              <Parameters>
                <Param>
                  <Label>GMem</Label>
                  <Constant Type="int">10106</Constant>
                  <ParamName>variable</ParamName>
                </Param>
                <Param>
                  <Label>Number</Label>
                  <Constant Type="int">2</Constant>
                  <ParamName>value</ParamName>
                </Param>
              </Parameters>
            </QueryCall>
          </FunctionBody>
        </Scene>
      </Module>
    </Object>
    <Object>
      <LEDStyle VID="10059" Master="0" MTime="">
        <Name>LED Style Hall</Name>
        <Model>RGB</Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>LEDStyle</ObjectType>
        <ColorTable Color1="Red" Color2="Green" Color3="" Color4="">
          <Color ID="1">00000000</Color>
          <Color ID="2">FF000000</Color>
          <Color ID="3">FF700000</Color>
          <Color ID="0">0000FF00</Color>
          <Color ID="4">FF00FF00</Color>
        </ColorTable>
        <StyleTable Enum="FourState">
          <Mode ID="1" Default="true">
            <Entry Color="1">0</Entry>
            <Entry Color="0">1</Entry>
            <Entry Color="2">2</Entry>
            <Entry Color="4">3</Entry>
          </Mode>
          <Mode ID="2" Default="false">
            <Entry Color="1">0</Entry>
            <Entry Color="0" BlinkOffColor="1" Blink="Medium">1</Entry>
            <Entry Color="2" BlinkOffColor="1" Blink="Medium">2</Entry>
            <Entry Color="4" BlinkOffColor="1" Blink="Medium">3</Entry>
          </Mode>
        </StyleTable>
      </LEDStyle>
    </Object>
    <Object>
      <Task VID="10060" Master="9722" MTime="">
        <Name>Away Vantage</Name>
        <Model>Away Vantage</Model>
        <Note />
        <DName />
        <ObjectType>Task</ObjectType>
        <Category>9876</Category>
        <Procedure>
          <Target>10181</Target>
          <Function>SceneProgram_10060</Function>
          <Parameters>
            <Param>0</Param>
            <Param>1</Param>
            <Param>2</Param>
          </Parameters>
        </Procedure>
        <Query>
          <Target>10172</Target>
          <Function>SetToVariable</Function>
          <Parameters>
            <Param>3</Param>
            <Param>4</Param>
          </Parameters>
        </Query>
        <Adjust>
          <Target>0</Target>
          <Function />
          <Parameters />
        </Adjust>
        <Level>
          <Target>0</Target>
          <Function />
          <Parameters />
        </Level>
        <ParamTable>
          <Param ID="0">
            <gmem Type="ref">10148</gmem>
          </Param>
          <Param ID="1">
            <gmem Type="ref">10106</gmem>
          </Param>
          <Param ID="2">
            <gmem Type="ref">9943</gmem>
          </Param>
          <Param ID="3">
            <gmem>9939</gmem>
          </Param>
          <Param ID="4">
            <val>0</val>
          </Param>
        </ParamTable>
        <DependTable>
          <Param>3</Param>
        </DependTable>
      </Task>
      <Module>
        <Library Name="HVAC" Local="true" />
        <Library Name="Audio Video\Theater" Local="true" />
        <Library Name="ledstyle" Local="false" />
        <Library Name="Lighting\Toggle" Local="true" />
        <Library Name="Programming\LaunchTasks" Local="true" />
        <Library Name="Programming\VantageTime" Local="true" />
        <Library Name="Lighting\Misc" Local="true" />
        <Library Name="vantage" Local="false" />
        <Scene>
          <Name>SceneProgram_10060</Name>
          <Type>procedure</Type>
          <Parameters>
            <Param>
              <Reference>true</Reference>
              <Label>bool</Label>
              <Label>GMem</Label>
              <Name>param4</Name>
            </Param>
            <Param>
              <Reference>true</Reference>
              <Label>Number</Label>
              <Label>GMem</Label>
              <Name>param1</Name>
            </Param>
            <Param>
              <Reference>true</Reference>
              <Label>bool</Label>
              <Label>GMem</Label>
              <Name>param2</Name>
            </Param>
          </Parameters>
          <ParameterValues>
            <Param>
              <Label>GMem</Label>
              <Constant Type="int">10148</Constant>
              <ParamName>param4</ParamName>
            </Param>
            <Param>
              <Label>GMem</Label>
              <Constant Type="int">10106</Constant>
              <ParamName>param1</ParamName>
            </Param>
            <Param>
              <Label>GMem</Label>
              <Constant Type="int">9943</Constant>
              <ParamName>param2</ParamName>
            </Param>
          </ParameterValues>
          <FunctionBody>
            <Assignment disable="false">
              <Operand>
                <Identifier>param1</Identifier>
              </Operand>
              <Assign>equals</Assign>
              <Operand>
                <Label>Number</Label>
                <Constant Type="int">1</Constant>
              </Operand>
            </Assignment>
            <FunctionCall disable="false">
              <Name>Learn</Name>
              <Parameters>
                <Param>
                  <Label>Task</Label>
                  <Initializer>
                    <Constant Type="int">10108</Constant>
                  </Initializer>
                  <ParamName>tasks</ParamName>
                </Param>
              </Parameters>
            </FunctionCall>
            <FunctionCall disable="false">
              <Name>TheDelay</Name>
              <Parameters>
                <Param>
                  <Label>Delay</Label>
                  <Constant Type="float">0.200</Constant>
                  <ParamName>delayTime</ParamName>
                </Param>
              </Parameters>
            </FunctionCall>
            <FunctionCall disable="false">
              <Name>LaunchTaskWithCurrentEvent</Name>
              <Parameters>
                <Param>
                  <Label>Task</Label>
                  <Initializer>
                    <Constant Type="int">9938</Constant>
                  </Initializer>
                  <ParamName>tasks</ParamName>
                </Param>
              </Parameters>
            </FunctionCall>
            <FunctionCall disable="false">
              <Name>TheDelay</Name>
              <Parameters>
                <Param>
                  <Label>Delay</Label>
                  <Constant Type="float">0.200</Constant>
                  <ParamName>delayTime</ParamName>
                </Param>
              </Parameters>
            </FunctionCall>
            <FunctionCall disable="false">
              <Name>LaunchTaskWithCurrentEvent</Name>
              <Parameters>
                <Param>
                  <Label>Task</Label>
                  <Initializer>
                    <Constant Type="int">9866</Constant>
                    <Constant Type="int">722</Constant>
                  </Initializer>
                  <ParamName>tasks</ParamName>
                </Param>
              </Parameters>
            </FunctionCall>
            <Assignment disable="false">
              <Operand>
                <Identifier>param4</Identifier>
              </Operand>
              <Assign>equals</Assign>
              <Operand>
                <Label>bool</Label>
                <Constant Type="bool">true</Constant>
              </Operand>
            </Assignment>
            <FunctionCall disable="false">
              <Name>Off</Name>
              <Parameters>
                <Param>
                  <Label>Load</Label>
                  <Initializer>
                    <Constant Type="int">344</Constant>
                  </Initializer>
                  <ParamName>loads</ParamName>
                </Param>
                <Param>
                  <Label>Seconds</Label>
                  <Constant Type="float">0.0</Constant>
                  <ParamName>rampTime</ParamName>
                </Param>
              </Parameters>
            </FunctionCall>
            <FunctionCall disable="false">
              <Name>LEDStyle_SetMode</Name>
              <Parameters>
                <Param>
                  <Label>LEDStyle</Label>
                  <Constant Type="int">120</Constant>
                  <ParamName>object</ParamName>
                </Param>
                <Param>
                  <Label>Number</Label>
                  <Constant Type="int">1</Constant>
                  <ParamName>mode</ParamName>
                </Param>
              </Parameters>
            </FunctionCall>
            <Assignment disable="false">
              <Operand>
                <Identifier>param2</Identifier>
              </Operand>
              <Assign>equals</Assign>
              <Operand>
                <Label>bool</Label>
                <Constant Type="bool">false</Constant>
              </Operand>
            </Assignment>
            <FunctionCall disable="false">
              <Name>Off</Name>
              <Parameters>
                <Param>
                  <Label>Load</Label>
                  <Initializer>
                    <Constant Type="int">79</Constant>
                    <Constant Type="int">9307</Constant>
                    <Constant Type="int">67</Constant>
                    <Constant Type="int">66</Constant>
                    <Constant Type="int">10384</Constant>
                    <Constant Type="int">83</Constant>
                    <Constant Type="int">10413</Constant>
                    <Constant Type="int">70</Constant>
                    <Constant Type="int">55</Constant>
                    <Constant Type="int">10197</Constant>
                    <Constant Type="int">53</Constant>
                    <Constant Type="int">54</Constant>
                    <Constant Type="int">58</Constant>
                    <Constant Type="int">57</Constant>
                    <Constant Type="int">56</Constant>
                  </Initializer>
                  <ParamName>loads</ParamName>
                </Param>
                <Param>
                  <Label>Seconds</Label>
                  <Constant Type="float">3.0</Constant>
                  <ParamName>rampTime</ParamName>
                </Param>
              </Parameters>
            </FunctionCall>
            <FunctionCall disable="false">
              <Name>TurnPowerOff</Name>
              <Parameters>
                <Param>
                  <Label>Power</Label>
                  <Initializer>
                    <Constant Type="int">10461</Constant>
                    <Constant Type="int">10465</Constant>
                    <Constant Type="int">10467</Constant>
                    <Constant Type="int">10459</Constant>
                    <Constant Type="int">10471</Constant>
                    <Constant Type="int">10463</Constant>
                    <Constant Type="int">10469</Constant>
                  </Initializer>
                  <ParamName>objects</ParamName>
                </Param>
              </Parameters>
            </FunctionCall>
            <FunctionCall disable="false">
              <Name>WrapperSetOperationMode</Name>
              <Parameters>
                <Param>
                  <Label>Thermostat</Label>
                  <Initializer>
                    <Constant Type="int">7015</Constant>
                    <Constant Type="int">6975</Constant>
                    <Constant Type="int">7000</Constant>
                    <Constant Type="int">7005</Constant>
                    <Constant Type="int">7534</Constant>
                    <Constant Type="int">6985</Constant>
                  </Initializer>
                  <ParamName>objects</ParamName>
                </Param>
                <Param>
                  <Label>Thermostat_OperationMode</Label>
                  <Identifier>Thermostat_OperationMode_Off</Identifier>
                  <ParamName>mode</ParamName>
                </Param>
              </Parameters>
            </FunctionCall>
            <FunctionCall disable="false">
              <Name>LaunchTaskWithCurrentEvent</Name>
              <Parameters>
                <Param>
                  <Label>Task</Label>
                  <Initializer>
                    <Constant Type="int">9915</Constant>
                    <Constant Type="int">9898</Constant>
                    <Constant Type="int">9906</Constant>
                  </Initializer>
                  <ParamName>tasks</ParamName>
                </Param>
              </Parameters>
            </FunctionCall>
            <FunctionCall disable="false">
              <Name>TheDelay</Name>
              <Parameters>
                <Param>
                  <Label>Delay</Label>
                  <Constant Type="float">10.0</Constant>
                  <ParamName>delayTime</ParamName>
                </Param>
              </Parameters>
            </FunctionCall>
            <Assignment disable="false">
              <Operand>
                <Identifier>param4</Identifier>
              </Operand>
              <Assign>equals</Assign>
              <Operand>
                <Label>bool</Label>
                <Constant Type="bool">false</Constant>
              </Operand>
            </Assignment>
            <QueryCall>
              <Name>SetToVariable</Name>
              <Parameters>
                <Param>
                  <Label>GMem</Label>
                  <Constant Type="int">9939</Constant>
                  <ParamName>variable</ParamName>
                </Param>
                <Param>
                  <Label>QueryVariableType</Label>
                  <Identifier>Boolean</Identifier>
                  <ParamName>varType</ParamName>
                </Param>
              </Parameters>
            </QueryCall>
          </FunctionBody>
        </Scene>
      </Module>
    </Object>
    <Object>
      <Task VID="10102" Master="9722" MTime="">
        <Name>Home On Vantage</Name>
        <Model>Home On Vantage</Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Task</ObjectType>
        <Category>9876</Category>
        <Procedure>
          <Target>10183</Target>
          <Function>SceneProgram_10102</Function>
          <Parameters>
            <Param>0</Param>
            <Param>1</Param>
            <Param>2</Param>
          </Parameters>
        </Procedure>
        <Query>
          <Target>10172</Target>
          <Function>VariableAtSpecifiedValue</Function>
          <Parameters>
            <Param>3</Param>
            <Param>4</Param>
          </Parameters>
        </Query>
        <Adjust>
          <Target>0</Target>
          <Function />
          <Parameters />
        </Adjust>
        <Level>
          <Target>0</Target>
          <Function />
          <Parameters />
        </Level>
        <ParamTable>
          <Param ID="0">
            <gmem Type="ref">10148</gmem>
          </Param>
          <Param ID="1">
            <gmem Type="ref">10106</gmem>
          </Param>
          <Param ID="2">
            <gmem Type="ref">9943</gmem>
          </Param>
          <Param ID="3">
            <gmem>10106</gmem>
          </Param>
          <Param ID="4">
            <val>2</val>
          </Param>
        </ParamTable>
        <DependTable>
          <Param>3</Param>
        </DependTable>
      </Task>
      <Module>
        <Library Name="blind" Local="false" />
        <Library Name="ledstyle" Local="false" />
        <Library Name="Lighting\Toggle" Local="true" />
        <Library Name="Programming\VantageTime" Local="true" />
        <Library Name="Programming\LaunchTasks" Local="true" />
        <Library Name="vantage" Local="false" />
        <Scene>
          <Name>SceneProgram_10102</Name>
          <Type>procedure</Type>
          <Parameters>
            <Param>
              <Reference>true</Reference>
              <Label>bool</Label>
              <Label>GMem</Label>
              <Name>param4</Name>
            </Param>
            <Param>
              <Reference>true</Reference>
              <Label>Number</Label>
              <Label>GMem</Label>
              <Name>param1</Name>
            </Param>
            <Param>
              <Reference>true</Reference>
              <Label>bool</Label>
              <Label>GMem</Label>
              <Name>param3</Name>
            </Param>
          </Parameters>
          <ParameterValues>
            <Param>
              <Label>GMem</Label>
              <Constant Type="int">10148</Constant>
              <ParamName>param4</ParamName>
            </Param>
            <Param>
              <Label>GMem</Label>
              <Constant Type="int">10106</Constant>
              <ParamName>param1</ParamName>
            </Param>
            <Param>
              <Label>GMem</Label>
              <Constant Type="int">9943</Constant>
              <ParamName>param3</ParamName>
            </Param>
          </ParameterValues>
          <FunctionBody>
            <Assignment disable="false">
              <Operand>
                <Identifier>param1</Identifier>
              </Operand>
              <Assign>equals</Assign>
              <Operand>
                <Label>Number</Label>
                <Constant Type="int">2</Constant>
              </Operand>
            </Assignment>
            <FunctionCall disable="false">
              <Name>LaunchTaskWithCurrentEvent</Name>
              <Parameters>
                <Param>
                  <Label>Task</Label>
                  <Initializer>
                    <Constant Type="int">9940</Constant>
                  </Initializer>
                  <ParamName>tasks</ParamName>
                </Param>
              </Parameters>
            </FunctionCall>
            <FunctionCall disable="false">
              <Name>TheDelay</Name>
              <Parameters>
                <Param>
                  <Label>Delay</Label>
                  <Constant Type="float">0.200</Constant>
                  <ParamName>delayTime</ParamName>
                </Param>
              </Parameters>
            </FunctionCall>
            <FunctionCall disable="false">
              <Name>LaunchTaskWithCurrentEvent</Name>
              <Parameters>
                <Param>
                  <Label>Task</Label>
                  <Initializer>
                    <Constant Type="int">10108</Constant>
                  </Initializer>
                  <ParamName>tasks</ParamName>
                </Param>
              </Parameters>
            </FunctionCall>
            <FunctionCall disable="false">
              <Name>Off</Name>
              <Parameters>
                <Param>
                  <Label>Load</Label>
                  <Initializer>
                    <Constant Type="int">344</Constant>
                  </Initializer>
                  <ParamName>loads</ParamName>
                </Param>
                <Param>
                  <Label>Seconds</Label>
                  <Constant Type="float">0.0</Constant>
                  <ParamName>rampTime</ParamName>
                </Param>
              </Parameters>
            </FunctionCall>
            <Assignment disable="false">
              <Operand>
                <Identifier>param3</Identifier>
              </Operand>
              <Assign>equals</Assign>
              <Operand>
                <Label>bool</Label>
                <Constant Type="bool">false</Constant>
              </Operand>
            </Assignment>
            <FunctionCall disable="false">
              <Name>LEDStyle_SetMode</Name>
              <Parameters>
                <Param>
                  <Label>LEDStyle</Label>
                  <Constant Type="int">120</Constant>
                  <ParamName>object</ParamName>
                </Param>
                <Param>
                  <Label>Number</Label>
                  <Constant Type="int">1</Constant>
                  <ParamName>mode</ParamName>
                </Param>
              </Parameters>
            </FunctionCall>
            <Assignment disable="false">
              <Operand>
                <Identifier>param4</Identifier>
              </Operand>
              <Assign>equals</Assign>
              <Operand>
                <Label>bool</Label>
                <Constant Type="bool">false</Constant>
              </Operand>
            </Assignment>
            <If disable="false">
              <LogicalExpression>
                <GivePrecedence>false</GivePrecedence>
                <Expanded>true</Expanded>
                <RelationalExpression>
                  <Operand>
                    <Label>bool</Label>
                    <FunctionCall>
                      <Name>DayTime</Name>
                      <Parameters />
                    </FunctionCall>
                  </Operand>
                  <Operator>eq</Operator>
                  <Operand>
                    <Label>bool</Label>
                    <Constant Type="bool">true</Constant>
                  </Operand>
                </RelationalExpression>
              </LogicalExpression>
              <StatementList>
                <FunctionCall disable="false">
                  <Name>Blind_Open</Name>
                  <Parameters>
                    <Param>
                      <Label>Blind</Label>
                      <Constant Type="int">10116</Constant>
                      <ParamName>object</ParamName>
                    </Param>
                  </Parameters>
                </FunctionCall>
              </StatementList>
              <Expanded>True</Expanded>
            </If>
            <Else disable="false">
              <StatementList>
                <FunctionCall disable="false">
                  <Name>Blind_Close</Name>
                  <Parameters>
                    <Param>
                      <Label>Blind</Label>
                      <Constant Type="int">10116</Constant>
                      <ParamName>object</ParamName>
                    </Param>
                  </Parameters>
                </FunctionCall>
              </StatementList>
              <Expanded>True</Expanded>
            </Else>
            <QueryCall>
              <Name>VariableAtSpecifiedValue</Name>
              <Parameters>
                <Param>
                  <Label>GMem</Label>
                  <Constant Type="int">10106</Constant>
                  <ParamName>variable</ParamName>
                </Param>
                <Param>
                  <Label>Number</Label>
                  <Constant Type="int">2</Constant>
                  <ParamName>value</ParamName>
                </Param>
              </Parameters>
            </QueryCall>
          </FunctionBody>
        </Scene>
      </Module>
    </Object>
    <Object>
      <Task VID="10103" Master="9722" MTime="">
        <Name>Home Off Vantage</Name>
        <Model>Home Off Vantage</Model>
        <Note />
        <DName />
        <ObjectType>Task</ObjectType>
        <Category>9876</Category>
        <Procedure>
          <Target>10181</Target>
          <Function>SceneProgram_10103</Function>
          <Parameters>
            <Param>0</Param>
            <Param>1</Param>
            <Param>2</Param>
          </Parameters>
        </Procedure>
        <Query>
          <Target>10172</Target>
          <Function>VariableAtSpecifiedValue</Function>
          <Parameters>
            <Param>3</Param>
            <Param>4</Param>
          </Parameters>
        </Query>
        <Adjust>
          <Target>0</Target>
          <Function />
          <Parameters />
        </Adjust>
        <Level>
          <Target>0</Target>
          <Function />
          <Parameters />
        </Level>
        <ParamTable>
          <Param ID="0">
            <gmem Type="ref">10148</gmem>
          </Param>
          <Param ID="1">
            <gmem Type="ref">10106</gmem>
          </Param>
          <Param ID="2">
            <gmem Type="ref">9943</gmem>
          </Param>
          <Param ID="3">
            <gmem>10106</gmem>
          </Param>
          <Param ID="4">
            <val>3</val>
          </Param>
        </ParamTable>
        <DependTable>
          <Param>3</Param>
        </DependTable>
      </Task>
      <Module>
        <Library Name="blind" Local="false" />
        <Library Name="Audio Video\Theater" Local="true" />
        <Library Name="ledstyle" Local="false" />
        <Library Name="Lighting\Toggle" Local="true" />
        <Library Name="Programming\LaunchTasks" Local="true" />
        <Library Name="Programming\VantageTime" Local="true" />
        <Library Name="Lighting\Misc" Local="true" />
        <Library Name="vantage" Local="false" />
        <Scene>
          <Name>SceneProgram_10103</Name>
          <Type>procedure</Type>
          <Parameters>
            <Param>
              <Reference>true</Reference>
              <Label>bool</Label>
              <Label>GMem</Label>
              <Name>param4</Name>
            </Param>
            <Param>
              <Reference>true</Reference>
              <Label>Number</Label>
              <Label>GMem</Label>
              <Name>param1</Name>
            </Param>
            <Param>
              <Reference>true</Reference>
              <Label>bool</Label>
              <Label>GMem</Label>
              <Name>param2</Name>
            </Param>
          </Parameters>
          <ParameterValues>
            <Param>
              <Label>GMem</Label>
              <Constant Type="int">10148</Constant>
              <ParamName>param4</ParamName>
            </Param>
            <Param>
              <Label>GMem</Label>
              <Constant Type="int">10106</Constant>
              <ParamName>param1</ParamName>
            </Param>
            <Param>
              <Label>GMem</Label>
              <Constant Type="int">9943</Constant>
              <ParamName>param2</ParamName>
            </Param>
          </ParameterValues>
          <FunctionBody>
            <Assignment disable="false">
              <Operand>
                <Identifier>param1</Identifier>
              </Operand>
              <Assign>equals</Assign>
              <Operand>
                <Label>Number</Label>
                <Constant Type="int">3</Constant>
              </Operand>
            </Assignment>
            <FunctionCall disable="false">
              <Name>Learn</Name>
              <Parameters>
                <Param>
                  <Label>Task</Label>
                  <Initializer>
                    <Constant Type="int">10108</Constant>
                  </Initializer>
                  <ParamName>tasks</ParamName>
                </Param>
              </Parameters>
            </FunctionCall>
            <FunctionCall disable="false">
              <Name>TheDelay</Name>
              <Parameters>
                <Param>
                  <Label>Delay</Label>
                  <Constant Type="float">0.200</Constant>
                  <ParamName>delayTime</ParamName>
                </Param>
              </Parameters>
            </FunctionCall>
            <FunctionCall disable="false">
              <Name>LaunchTaskWithCurrentEvent</Name>
              <Parameters>
                <Param>
                  <Label>Task</Label>
                  <Initializer>
                    <Constant Type="int">9940</Constant>
                  </Initializer>
                  <ParamName>tasks</ParamName>
                </Param>
              </Parameters>
            </FunctionCall>
            <FunctionCall disable="false">
              <Name>TheDelay</Name>
              <Parameters>
                <Param>
                  <Label>Delay</Label>
                  <Constant Type="float">0.200</Constant>
                  <ParamName>delayTime</ParamName>
                </Param>
              </Parameters>
            </FunctionCall>
            <FunctionCall disable="false">
              <Name>LaunchTaskWithCurrentEvent</Name>
              <Parameters>
                <Param>
                  <Label>Task</Label>
                  <Initializer>
                    <Constant Type="int">9866</Constant>
                    <Constant Type="int">722</Constant>
                  </Initializer>
                  <ParamName>tasks</ParamName>
                </Param>
              </Parameters>
            </FunctionCall>
            <Assignment disable="false">
              <Operand>
                <Identifier>param4</Identifier>
              </Operand>
              <Assign>equals</Assign>
              <Operand>
                <Label>bool</Label>
                <Constant Type="bool">true</Constant>
              </Operand>
            </Assignment>
            <FunctionCall disable="false">
              <Name>Off</Name>
              <Parameters>
                <Param>
                  <Label>Load</Label>
                  <Initializer>
                    <Constant Type="int">344</Constant>
                  </Initializer>
                  <ParamName>loads</ParamName>
                </Param>
                <Param>
                  <Label>Seconds</Label>
                  <Constant Type="float">0.0</Constant>
                  <ParamName>rampTime</ParamName>
                </Param>
              </Parameters>
            </FunctionCall>
            <Assignment disable="false">
              <Operand>
                <Identifier>param2</Identifier>
              </Operand>
              <Assign>equals</Assign>
              <Operand>
                <Label>bool</Label>
                <Constant Type="bool">false</Constant>
              </Operand>
            </Assignment>
            <FunctionCall disable="false">
              <Name>LEDStyle_SetMode</Name>
              <Parameters>
                <Param>
                  <Label>LEDStyle</Label>
                  <Constant Type="int">120</Constant>
                  <ParamName>object</ParamName>
                </Param>
                <Param>
                  <Label>Number</Label>
                  <Constant Type="int">1</Constant>
                  <ParamName>mode</ParamName>
                </Param>
              </Parameters>
            </FunctionCall>
            <FunctionCall disable="false">
              <Name>Off</Name>
              <Parameters>
                <Param>
                  <Label>Load</Label>
                  <Initializer>
                    <Constant Type="int">79</Constant>
                    <Constant Type="int">9307</Constant>
                    <Constant Type="int">67</Constant>
                    <Constant Type="int">66</Constant>
                    <Constant Type="int">10384</Constant>
                    <Constant Type="int">83</Constant>
                    <Constant Type="int">10413</Constant>
                    <Constant Type="int">70</Constant>
                    <Constant Type="int">55</Constant>
                    <Constant Type="int">10197</Constant>
                    <Constant Type="int">53</Constant>
                    <Constant Type="int">54</Constant>
                    <Constant Type="int">58</Constant>
                    <Constant Type="int">57</Constant>
                    <Constant Type="int">56</Constant>
                  </Initializer>
                  <ParamName>loads</ParamName>
                </Param>
                <Param>
                  <Label>Seconds</Label>
                  <Constant Type="float">2.0</Constant>
                  <ParamName>rampTime</ParamName>
                </Param>
              </Parameters>
            </FunctionCall>
            <FunctionCall disable="false">
              <Name>TurnPowerOff</Name>
              <Parameters>
                <Param>
                  <Label>Power</Label>
                  <Initializer>
                    <Constant Type="int">10461</Constant>
                    <Constant Type="int">10465</Constant>
                    <Constant Type="int">10467</Constant>
                    <Constant Type="int">10459</Constant>
                    <Constant Type="int">10471</Constant>
                    <Constant Type="int">10463</Constant>
                    <Constant Type="int">10469</Constant>
                  </Initializer>
                  <ParamName>objects</ParamName>
                </Param>
              </Parameters>
            </FunctionCall>
            <FunctionCall disable="false">
              <Name>Blind_Close</Name>
              <Parameters>
                <Param>
                  <Label>Blind</Label>
                  <Constant Type="int">10116</Constant>
                  <ParamName>object</ParamName>
                </Param>
              </Parameters>
            </FunctionCall>
            <FunctionCall disable="false">
              <Name>TheDelay</Name>
              <Parameters>
                <Param>
                  <Label>Delay</Label>
                  <Constant Type="float">10.0</Constant>
                  <ParamName>delayTime</ParamName>
                </Param>
              </Parameters>
            </FunctionCall>
            <Assignment disable="false">
              <Operand>
                <Identifier>param4</Identifier>
              </Operand>
              <Assign>equals</Assign>
              <Operand>
                <Label>bool</Label>
                <Constant Type="bool">false</Constant>
              </Operand>
            </Assignment>
            <QueryCall>
              <Name>VariableAtSpecifiedValue</Name>
              <Parameters>
                <Param>
                  <Label>GMem</Label>
                  <Constant Type="int">10106</Constant>
                  <ParamName>variable</ParamName>
                </Param>
                <Param>
                  <Label>Number</Label>
                  <Constant Type="int">3</Constant>
                  <ParamName>value</ParamName>
                </Param>
              </Parameters>
            </QueryCall>
          </FunctionBody>
        </Scene>
      </Module>
    </Object>
    <Object>
      <GMem VID="10105" Master="9722" MTime="">
        <Name>PIR Delay</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>GMem</ObjectType>
        <Category>9741</Category>
        <data Fixed="true">
          <val>600.000</val>
        </data>
        <Persistent>true</Persistent>
        <Tag object="false">Delay</Tag>
      </GMem>
    </Object>
    <Object>
      <GMem VID="10106" Master="9722" MTime="">
        <Name>Home On Colour Tracking Vantage</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>GMem</ObjectType>
        <Category>9876</Category>
        <data Fixed="false">
          <val>1</val>
        </data>
        <Persistent>true</Persistent>
        <Tag object="false">Number</Tag>
      </GMem>
    </Object>
    <Object>
      <Task VID="10108" Master="9722" MTime="">
        <Name>Toggle On Vantage</Name>
        <Model>Toggle On Vantage</Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Task</ObjectType>
        <Category>9876</Category>
        <Procedure>
          <Target>10169</Target>
          <Function>On</Function>
          <Parameters>
            <Param>0</Param>
            <Param>1</Param>
            <Param>2</Param>
            <Param>3</Param>
            <Param>4</Param>
          </Parameters>
        </Procedure>
        <Query>
          <Target>10168</Target>
          <Function>LoadsOn</Function>
          <Parameters>
            <Param>0</Param>
          </Parameters>
        </Query>
        <Adjust>
          <Target>0</Target>
          <Function />
          <Parameters />
        </Adjust>
        <Level>
          <Target>0</Target>
          <Function />
          <Parameters />
        </Level>
        <ParamTable>
          <Param ID="0">
            <array>
              <val>9307</val>
              <val>67</val>
              <val>66</val>
              <val>10384</val>
              <val>83</val>
              <val>10413</val>
              <val>70</val>
              <val>55</val>
              <val>10197</val>
              <val>53</val>
              <val>54</val>
              <val>58</val>
              <val>57</val>
              <val>56</val>
            </array>
          </Param>
          <Param ID="1" Fixed="true">
            <array>
              <val>100</val>
              <val>100</val>
              <val>100</val>
              <val>100</val>
              <val>100</val>
              <val>100</val>
              <val>100</val>
              <val>100</val>
              <val>100</val>
              <val>100</val>
              <val>100</val>
              <val>100</val>
              <val>100</val>
              <val>100</val>
            </array>
          </Param>
          <Param ID="2" Fixed="true">
            <val>1</val>
          </Param>
          <Param ID="3">
            <val>1</val>
          </Param>
          <Param ID="4">
            <val>0</val>
          </Param>
        </ParamTable>
        <DependTable>
          <Param status="Load.GetLevel">0</Param>
        </DependTable>
      </Task>
      <Module>
        <Library Name="Lighting\Toggle" Local="true" />
        <Library Name="vantage" Local="false" />
        <Scene>
          <Name>SceneProgram_10108</Name>
          <Type>procedure</Type>
          <Parameters />
          <ParameterValues />
          <FunctionBody>
            <FunctionCall>
              <Name>On</Name>
              <Parameters>
                <Param>
                  <Label>Load</Label>
                  <Initializer>
                    <Constant Type="int">9307</Constant>
                    <Constant Type="int">67</Constant>
                    <Constant Type="int">66</Constant>
                    <Constant Type="int">10384</Constant>
                    <Constant Type="int">83</Constant>
                    <Constant Type="int">10413</Constant>
                    <Constant Type="int">70</Constant>
                    <Constant Type="int">55</Constant>
                    <Constant Type="int">10197</Constant>
                    <Constant Type="int">53</Constant>
                    <Constant Type="int">54</Constant>
                    <Constant Type="int">58</Constant>
                    <Constant Type="int">57</Constant>
                    <Constant Type="int">56</Constant>
                  </Initializer>
                  <ParamName>loads</ParamName>
                </Param>
                <Param>
                  <Label>Level</Label>
                  <Initializer>
                    <Constant Type="float">100.0</Constant>
                    <Constant Type="float">100.0</Constant>
                    <Constant Type="float">100.0</Constant>
                    <Constant Type="float">100.0</Constant>
                    <Constant Type="float">100.0</Constant>
                    <Constant Type="float">100.0</Constant>
                    <Constant Type="float">100.0</Constant>
                    <Constant Type="float">100.0</Constant>
                    <Constant Type="float">100.0</Constant>
                    <Constant Type="float">100.0</Constant>
                    <Constant Type="float">100.0</Constant>
                    <Constant Type="float">100.0</Constant>
                    <Constant Type="float">100.0</Constant>
                    <Constant Type="float">100.0</Constant>
                  </Initializer>
                  <ParamName>levels</ParamName>
                </Param>
                <Param>
                  <Label>Seconds</Label>
                  <Constant Type="float">1.0</Constant>
                  <ParamName>rampTime</ParamName>
                </Param>
                <Param>
                  <Label>bool</Label>
                  <Constant Type="bool">true</Constant>
                  <ParamName>learnable</ParamName>
                </Param>
                <Param>
                  <Label>MemID</Label>
                  <Constant Type="int">0</Constant>
                  <ParamName>bufferid</ParamName>
                </Param>
              </Parameters>
            </FunctionCall>
            <QueryCall>
              <Name>LoadsOn</Name>
              <Parameters>
                <Param>
                  <Label>Load</Label>
                  <Initializer>
                    <Constant Type="int">9307</Constant>
                    <Constant Type="int">67</Constant>
                    <Constant Type="int">66</Constant>
                    <Constant Type="int">10384</Constant>
                    <Constant Type="int">83</Constant>
                    <Constant Type="int">10413</Constant>
                    <Constant Type="int">70</Constant>
                    <Constant Type="int">55</Constant>
                    <Constant Type="int">10197</Constant>
                    <Constant Type="int">53</Constant>
                    <Constant Type="int">54</Constant>
                    <Constant Type="int">58</Constant>
                    <Constant Type="int">57</Constant>
                    <Constant Type="int">56</Constant>
                  </Initializer>
                  <ParamName>loads</ParamName>
                </Param>
              </Parameters>
            </QueryCall>
          </FunctionBody>
        </Scene>
      </Module>
    </Object>
    <Object>
      <SerialPort VID="10114" Master="9722" MTime="" Position="">
        <Name>RS-485 Port 1</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>SerialPort</ObjectType>
        <Parent Position="6">9722</Parent>
        <Data>6962</Data>
        <Write>6962</Write>
        <Connect>6962</Connect>
        <Disconnect>6962</Disconnect>
        <Baud>9600</Baud>
        <Parity>None</Parity>
        <DataBits>8</DataBits>
        <StopBits>1.0</StopBits>
        <FlowControl>None</FlowControl>
        <SoftwareControl>
          <Xon>0</Xon>
          <Xoff>0</Xoff>
        </SoftwareControl>
        <HostCmdPort>false</HostCmdPort>
        <Crossover>false</Crossover>
        <Unsecure>false</Unsecure>
      </SerialPort>
    </Object>
    <Object>
      <SerialPort VID="10115" Master="9722" MTime="" Position="">
        <Name>RS-485 Port 2</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>SerialPort</ObjectType>
        <Parent Position="7">9722</Parent>
        <Data>6962</Data>
        <Write>6962</Write>
        <Connect>6962</Connect>
        <Disconnect>6962</Disconnect>
        <Baud>9600</Baud>
        <Parity>None</Parity>
        <DataBits>8</DataBits>
        <StopBits>1.0</StopBits>
        <FlowControl>None</FlowControl>
        <SoftwareControl>
          <Xon>0</Xon>
          <Xoff>0</Xoff>
        </SoftwareControl>
        <HostCmdPort>false</HostCmdPort>
        <Crossover>false</Crossover>
        <Unsecure>false</Unsecure>
      </SerialPort>
    </Object>
    <Object>
      <BlindGroup VID="10116" Master="9722" MTime="" ShadeOrientation="TopDown" ShadeType="Roller">
        <Name>All Blinds</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>All Blinds</DName>
        <ObjectType>BlindGroup</ObjectType>
        <Area>6</Area>
        <Location>
        </Location>
        <Category>7</Category>
        <BlindTable>
          <Blind>9650</Blind>
          <Blind>10395</Blind>
          <Blind>10396</Blind>
          <Blind>9652</Blind>
          <Blind>10381</Blind>
          <Blind>10410</Blind>
          <Blind>9653</Blind>
        </BlindTable>
      </BlindGroup>
    </Object>
    <Object>
      <Task VID="10139" Master="9722" MTime="">
        <Name>Learn Living Room</Name>
        <Model>Learn Living Room</Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Task</ObjectType>
        <Category>9903</Category>
        <Procedure>
          <Target>10183</Target>
          <Function>SceneProgram_10139</Function>
          <Parameters>
            <Param>0</Param>
          </Parameters>
        </Procedure>
        <Query>
          <Target>0</Target>
          <Function />
          <Parameters />
        </Query>
        <Adjust>
          <Target>0</Target>
          <Function />
          <Parameters />
        </Adjust>
        <Level>
          <Target>0</Target>
          <Function />
          <Parameters />
        </Level>
        <ParamTable>
          <Param ID="0">
            <gmem Type="ref">10019</gmem>
          </Param>
        </ParamTable>
        <DependTable>
        </DependTable>
      </Task>
      <Module>
        <Library Name="sounder" Local="false" />
        <Library Name="Lighting\Misc" Local="true" />
        <Library Name="vantage" Local="false" />
        <Scene>
          <Name>SceneProgram_10139</Name>
          <Type>procedure</Type>
          <Parameters>
            <Param>
              <Reference>true</Reference>
              <Label>Number</Label>
              <Label>GMem</Label>
              <Name>param1</Name>
            </Param>
          </Parameters>
          <ParameterValues>
            <Param>
              <Label>GMem</Label>
              <Constant Type="int">10019</Constant>
              <ParamName>param1</ParamName>
            </Param>
          </ParameterValues>
          <FunctionBody>
            <If disable="false">
              <LogicalExpression>
                <GivePrecedence>false</GivePrecedence>
                <Expanded>true</Expanded>
                <RelationalExpression>
                  <Operand>
                    <Label>Number</Label>
                    <Identifier>param1</Identifier>
                  </Operand>
                  <Operator>eq</Operator>
                  <Operand>
                    <Label>Number</Label>
                    <Constant Type="int">2</Constant>
                  </Operand>
                </RelationalExpression>
              </LogicalExpression>
              <StatementList>
                <FunctionCall disable="false">
                  <Name>Learn</Name>
                  <Parameters>
                    <Param>
                      <Label>Task</Label>
                      <Initializer>
                        <Constant Type="int">10020</Constant>
                      </Initializer>
                      <ParamName>tasks</ParamName>
                    </Param>
                  </Parameters>
                </FunctionCall>
              </StatementList>
              <Expanded>True</Expanded>
            </If>
            <ElseIf disable="false">
              <LogicalExpression>
                <GivePrecedence>false</GivePrecedence>
                <Expanded>true</Expanded>
                <RelationalExpression>
                  <Operand>
                    <Label>Number</Label>
                    <Identifier>param1</Identifier>
                  </Operand>
                  <Operator>eq</Operator>
                  <Operand>
                    <Label>Number</Label>
                    <Constant Type="int">3</Constant>
                  </Operand>
                </RelationalExpression>
              </LogicalExpression>
              <StatementList>
                <FunctionCall disable="false">
                  <Name>Learn</Name>
                  <Parameters>
                    <Param>
                      <Label>Task</Label>
                      <Initializer>
                        <Constant Type="int">9929</Constant>
                      </Initializer>
                      <ParamName>tasks</ParamName>
                    </Param>
                  </Parameters>
                </FunctionCall>
              </StatementList>
              <Expanded>True</Expanded>
            </ElseIf>
            <ElseIf disable="false">
              <LogicalExpression>
                <GivePrecedence>false</GivePrecedence>
                <Expanded>true</Expanded>
                <RelationalExpression>
                  <Operand>
                    <Label>Number</Label>
                    <Identifier>param1</Identifier>
                  </Operand>
                  <Operator>eq</Operator>
                  <Operand>
                    <Label>Number</Label>
                    <Constant Type="int">4</Constant>
                  </Operand>
                </RelationalExpression>
              </LogicalExpression>
              <StatementList>
                <FunctionCall disable="false">
                  <Name>Learn</Name>
                  <Parameters>
                    <Param>
                      <Label>Task</Label>
                      <Initializer>
                        <Constant Type="int">10047</Constant>
                      </Initializer>
                      <ParamName>tasks</ParamName>
                    </Param>
                  </Parameters>
                </FunctionCall>
              </StatementList>
              <Expanded>True</Expanded>
            </ElseIf>
            <FunctionCall disable="false">
              <Name>Sounder_PlayFX</Name>
              <Parameters>
                <Param>
                  <Label>Sounder</Label>
                  <Constant Type="int">9744</Constant>
                  <ParamName>object</ParamName>
                </Param>
                <Param>
                  <Constant Type="int">0</Constant>
                  <ParamName>id</ParamName>
                </Param>
                <Param>
                  <Label>Seconds</Label>
                  <Constant Type="float">1.0</Constant>
                  <ParamName>duration</ParamName>
                </Param>
                <Param>
                  <Label>Percentage</Label>
                  <Constant Type="int">50</Constant>
                  <ParamName>volume</ParamName>
                </Param>
              </Parameters>
            </FunctionCall>
          </FunctionBody>
        </Scene>
      </Module>
    </Object>
    <Object>
      <Task VID="10140" Master="9722" MTime="">
        <Name>Bathroom PIR High</Name>
        <Model>Bathroom PIR High</Model>
        <Note />
        <DName />
        <ObjectType>Task</ObjectType>
        <Category>9740</Category>
        <Procedure>
          <Target>10169</Target>
          <Function>On</Function>
          <Parameters>
            <Param>0</Param>
            <Param>1</Param>
            <Param>2</Param>
            <Param>3</Param>
            <Param>4</Param>
          </Parameters>
        </Procedure>
        <Query>
          <Target>0</Target>
          <Function />
          <Parameters />
        </Query>
        <Adjust>
          <Target>10173</Target>
          <Function>AdjustLoads</Function>
          <Parameters>
            <Param>0</Param>
            <Param>5</Param>
            <Param>6</Param>
          </Parameters>
        </Adjust>
        <Level Max="100">
          <Target>10173</Target>
          <Function>AverageLoadLevel</Function>
          <Parameters>
            <Param>0</Param>
          </Parameters>
        </Level>
        <ParamTable>
          <Param ID="0">
            <array>
              <val>84</val>
              <val>71</val>
            </array>
          </Param>
          <Param ID="1" Fixed="true">
            <array>
              <val>100</val>
              <val>100</val>
            </array>
          </Param>
          <Param ID="2" Fixed="true">
            <val>2</val>
          </Param>
          <Param ID="3">
            <val>1</val>
          </Param>
          <Param ID="4">
            <val>0</val>
          </Param>
          <Param ID="5" Fixed="true">
            <val>5</val>
          </Param>
          <Param ID="6" Fixed="true">
            <val>10</val>
          </Param>
        </ParamTable>
        <DependTable>
        </DependTable>
      </Task>
      <Module>
        <Library Name="Lighting\Toggle" Local="true" />
        <Library Name="vantage" Local="false" />
        <Scene>
          <Name>SceneProgram_10140</Name>
          <Type>procedure</Type>
          <Parameters />
          <ParameterValues />
          <FunctionBody>
            <FunctionCall disable="false">
              <Name>On</Name>
              <Parameters>
                <Param>
                  <Label>Load</Label>
                  <Initializer>
                    <Constant Type="int">84</Constant>
                    <Constant Type="int">71</Constant>
                  </Initializer>
                  <ParamName>loads</ParamName>
                </Param>
                <Param>
                  <Label>Level</Label>
                  <Initializer>
                    <Constant Type="float">100.0</Constant>
                    <Constant Type="float">100.0</Constant>
                  </Initializer>
                  <ParamName>levels</ParamName>
                </Param>
                <Param>
                  <Label>Seconds</Label>
                  <Constant Type="float">2.0</Constant>
                  <ParamName>rampTime</ParamName>
                </Param>
                <Param>
                  <Label>bool</Label>
                  <Constant Type="bool">true</Constant>
                  <ParamName>learnable</ParamName>
                </Param>
                <Param>
                  <Label>MemID</Label>
                  <Constant Type="int">0</Constant>
                  <ParamName>bufferid</ParamName>
                </Param>
              </Parameters>
            </FunctionCall>
          </FunctionBody>
        </Scene>
      </Module>
    </Object>
    <Object>
      <Task VID="10141" Master="9722" MTime="">
        <Name>Bathroom PIR Low</Name>
        <Model>Bathroom PIR Low</Model>
        <Note />
        <DName />
        <ObjectType>Task</ObjectType>
        <Category>9740</Category>
        <Procedure>
          <Target>10169</Target>
          <Function>On</Function>
          <Parameters>
            <Param>0</Param>
            <Param>1</Param>
            <Param>2</Param>
            <Param>3</Param>
            <Param>4</Param>
          </Parameters>
        </Procedure>
        <Query>
          <Target>0</Target>
          <Function />
          <Parameters />
        </Query>
        <Adjust>
          <Target>10173</Target>
          <Function>AdjustLoads</Function>
          <Parameters>
            <Param>0</Param>
            <Param>5</Param>
            <Param>6</Param>
          </Parameters>
        </Adjust>
        <Level Max="100">
          <Target>10173</Target>
          <Function>AverageLoadLevel</Function>
          <Parameters>
            <Param>0</Param>
          </Parameters>
        </Level>
        <ParamTable>
          <Param ID="0">
            <array>
              <val>84</val>
              <val>71</val>
            </array>
          </Param>
          <Param ID="1" Fixed="true">
            <array>
              <val>70</val>
              <val>0</val>
            </array>
          </Param>
          <Param ID="2" Fixed="true">
            <val>2</val>
          </Param>
          <Param ID="3">
            <val>1</val>
          </Param>
          <Param ID="4">
            <val>0</val>
          </Param>
          <Param ID="5" Fixed="true">
            <val>5</val>
          </Param>
          <Param ID="6" Fixed="true">
            <val>10</val>
          </Param>
        </ParamTable>
        <DependTable />
      </Task>
      <Module>
        <Library Name="Lighting\Toggle" Local="true" />
        <Library Name="vantage" Local="false" />
        <Scene>
          <Name>SceneProgram_10141</Name>
          <Type>procedure</Type>
          <Parameters />
          <ParameterValues />
          <FunctionBody>
            <FunctionCall disable="false">
              <Name>On</Name>
              <Parameters>
                <Param>
                  <Label>Load</Label>
                  <Initializer>
                    <Constant Type="int">84</Constant>
                    <Constant Type="int">71</Constant>
                  </Initializer>
                  <ParamName>loads</ParamName>
                </Param>
                <Param>
                  <Label>Level</Label>
                  <Initializer>
                    <Constant Type="float">70.0</Constant>
                    <Constant Type="float">0.0</Constant>
                  </Initializer>
                  <ParamName>levels</ParamName>
                </Param>
                <Param>
                  <Label>Seconds</Label>
                  <Constant Type="float">2.0</Constant>
                  <ParamName>rampTime</ParamName>
                </Param>
                <Param>
                  <Label>bool</Label>
                  <Constant Type="bool">true</Constant>
                  <ParamName>learnable</ParamName>
                </Param>
                <Param>
                  <Label>MemID</Label>
                  <Constant Type="int">0</Constant>
                  <ParamName>bufferid</ParamName>
                </Param>
              </Parameters>
            </FunctionCall>
          </FunctionBody>
        </Scene>
      </Module>
    </Object>
    <Object>
      <Task VID="10142" Master="9722" MTime="">
        <Name>En-Suite PIR High</Name>
        <Model>En-Suite PIR High</Model>
        <Note />
        <DName />
        <ObjectType>Task</ObjectType>
        <Category>9864</Category>
        <Procedure>
          <Target>10169</Target>
          <Function>On</Function>
          <Parameters>
            <Param>0</Param>
            <Param>1</Param>
            <Param>2</Param>
            <Param>3</Param>
            <Param>4</Param>
          </Parameters>
        </Procedure>
        <Query>
          <Target>0</Target>
          <Function />
          <Parameters />
        </Query>
        <Adjust>
          <Target>10173</Target>
          <Function>AdjustLoads</Function>
          <Parameters>
            <Param>0</Param>
            <Param>5</Param>
            <Param>6</Param>
          </Parameters>
        </Adjust>
        <Level Max="100">
          <Target>10173</Target>
          <Function>AverageLoadLevel</Function>
          <Parameters>
            <Param>0</Param>
          </Parameters>
        </Level>
        <ParamTable>
          <Param ID="0">
            <array>
              <val>10383</val>
              <val>86</val>
              <val>9306</val>
            </array>
          </Param>
          <Param ID="1" Fixed="true">
            <array>
              <val>100</val>
              <val>100</val>
              <val>100</val>
            </array>
          </Param>
          <Param ID="2" Fixed="true">
            <val>2</val>
          </Param>
          <Param ID="3">
            <val>1</val>
          </Param>
          <Param ID="4">
            <val>0</val>
          </Param>
          <Param ID="5" Fixed="true">
            <val>5</val>
          </Param>
          <Param ID="6" Fixed="true">
            <val>10</val>
          </Param>
        </ParamTable>
        <DependTable>
        </DependTable>
      </Task>
      <Module>
        <Library Name="Lighting\Toggle" Local="true" />
        <Library Name="vantage" Local="false" />
        <Scene>
          <Name>SceneProgram_10142</Name>
          <Type>procedure</Type>
          <Parameters />
          <ParameterValues />
          <FunctionBody>
            <FunctionCall disable="false">
              <Name>On</Name>
              <Parameters>
                <Param>
                  <Label>Load</Label>
                  <Initializer>
                    <Constant Type="int">10383</Constant>
                    <Constant Type="int">86</Constant>
                    <Constant Type="int">9306</Constant>
                  </Initializer>
                  <ParamName>loads</ParamName>
                </Param>
                <Param>
                  <Label>Level</Label>
                  <Initializer>
                    <Constant Type="float">100.0</Constant>
                    <Constant Type="float">100.0</Constant>
                    <Constant Type="float">100.0</Constant>
                  </Initializer>
                  <ParamName>levels</ParamName>
                </Param>
                <Param>
                  <Label>Seconds</Label>
                  <Constant Type="float">2.0</Constant>
                  <ParamName>rampTime</ParamName>
                </Param>
                <Param>
                  <Label>bool</Label>
                  <Constant Type="bool">true</Constant>
                  <ParamName>learnable</ParamName>
                </Param>
                <Param>
                  <Label>MemID</Label>
                  <Constant Type="int">0</Constant>
                  <ParamName>bufferid</ParamName>
                </Param>
              </Parameters>
            </FunctionCall>
          </FunctionBody>
        </Scene>
      </Module>
    </Object>
    <Object>
      <Task VID="10143" Master="9722" MTime="">
        <Name>En-Suite PIR Low</Name>
        <Model>En-Suite PIR Low</Model>
        <Note />
        <DName />
        <ObjectType>Task</ObjectType>
        <Category>9864</Category>
        <Procedure>
          <Target>10169</Target>
          <Function>On</Function>
          <Parameters>
            <Param>0</Param>
            <Param>1</Param>
            <Param>2</Param>
            <Param>3</Param>
            <Param>4</Param>
          </Parameters>
        </Procedure>
        <Query>
          <Target>0</Target>
          <Function />
          <Parameters />
        </Query>
        <Adjust>
          <Target>10173</Target>
          <Function>AdjustLoads</Function>
          <Parameters>
            <Param>0</Param>
            <Param>5</Param>
            <Param>6</Param>
          </Parameters>
        </Adjust>
        <Level Max="100">
          <Target>10173</Target>
          <Function>AverageLoadLevel</Function>
          <Parameters>
            <Param>0</Param>
          </Parameters>
        </Level>
        <ParamTable>
          <Param ID="0">
            <array>
              <val>10383</val>
              <val>86</val>
              <val>9306</val>
            </array>
          </Param>
          <Param ID="1" Fixed="true">
            <array>
              <val>0</val>
              <val>70</val>
              <val>0</val>
            </array>
          </Param>
          <Param ID="2" Fixed="true">
            <val>2</val>
          </Param>
          <Param ID="3">
            <val>1</val>
          </Param>
          <Param ID="4">
            <val>0</val>
          </Param>
          <Param ID="5" Fixed="true">
            <val>5</val>
          </Param>
          <Param ID="6" Fixed="true">
            <val>10</val>
          </Param>
        </ParamTable>
        <DependTable />
      </Task>
      <Module>
        <Library Name="Lighting\Toggle" Local="true" />
        <Library Name="vantage" Local="false" />
        <Scene>
          <Name>SceneProgram_10143</Name>
          <Type>procedure</Type>
          <Parameters />
          <ParameterValues />
          <FunctionBody>
            <FunctionCall disable="false">
              <Name>On</Name>
              <Parameters>
                <Param>
                  <Label>Load</Label>
                  <Initializer>
                    <Constant Type="int">10383</Constant>
                    <Constant Type="int">86</Constant>
                    <Constant Type="int">9306</Constant>
                  </Initializer>
                  <ParamName>loads</ParamName>
                </Param>
                <Param>
                  <Label>Level</Label>
                  <Initializer>
                    <Constant Type="float">0.0</Constant>
                    <Constant Type="float">70.0</Constant>
                    <Constant Type="float">0.0</Constant>
                  </Initializer>
                  <ParamName>levels</ParamName>
                </Param>
                <Param>
                  <Label>Seconds</Label>
                  <Constant Type="float">2.0</Constant>
                  <ParamName>rampTime</ParamName>
                </Param>
                <Param>
                  <Label>bool</Label>
                  <Constant Type="bool">true</Constant>
                  <ParamName>learnable</ParamName>
                </Param>
                <Param>
                  <Label>MemID</Label>
                  <Constant Type="int">0</Constant>
                  <ParamName>bufferid</ParamName>
                </Param>
              </Parameters>
            </FunctionCall>
          </FunctionBody>
        </Scene>
      </Module>
    </Object>
    <Object>
      <Task VID="10144" Master="9722" MTime="">
        <Name>Hall PIR Day</Name>
        <Model>Hall PIR Day</Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Task</ObjectType>
        <Category>9876</Category>
        <Procedure>
          <Target>10169</Target>
          <Function>On</Function>
          <Parameters>
            <Param>0</Param>
            <Param>1</Param>
            <Param>2</Param>
            <Param>3</Param>
            <Param>4</Param>
          </Parameters>
        </Procedure>
        <Query>
          <Target>0</Target>
          <Function />
          <Parameters />
        </Query>
        <Adjust>
          <Target>10173</Target>
          <Function>AdjustLoads</Function>
          <Parameters>
            <Param>0</Param>
            <Param>5</Param>
            <Param>6</Param>
          </Parameters>
        </Adjust>
        <Level Max="100">
          <Target>10173</Target>
          <Function>AverageLoadLevel</Function>
          <Parameters>
            <Param>0</Param>
          </Parameters>
        </Level>
        <ParamTable>
          <Param ID="0">
            <array>
              <val>79</val>
            </array>
          </Param>
          <Param ID="1" Fixed="true">
            <array>
              <val>100</val>
            </array>
          </Param>
          <Param ID="2" Fixed="true">
            <val>2</val>
          </Param>
          <Param ID="3">
            <val>1</val>
          </Param>
          <Param ID="4">
            <val>0</val>
          </Param>
          <Param ID="5" Fixed="true">
            <val>5</val>
          </Param>
          <Param ID="6" Fixed="true">
            <val>10</val>
          </Param>
        </ParamTable>
        <DependTable>
        </DependTable>
      </Task>
      <Module>
        <Library Name="Lighting\Toggle" Local="true" />
        <Library Name="vantage" Local="false" />
        <Scene>
          <Name>SceneProgram_10144</Name>
          <Type>procedure</Type>
          <Parameters />
          <ParameterValues />
          <FunctionBody>
            <FunctionCall disable="false">
              <Name>On</Name>
              <Parameters>
                <Param>
                  <Label>Load</Label>
                  <Initializer>
                    <Constant Type="int">79</Constant>
                  </Initializer>
                  <ParamName>loads</ParamName>
                </Param>
                <Param>
                  <Label>Level</Label>
                  <Initializer>
                    <Constant Type="float">100.0</Constant>
                  </Initializer>
                  <ParamName>levels</ParamName>
                </Param>
                <Param>
                  <Label>Seconds</Label>
                  <Constant Type="float">2.0</Constant>
                  <ParamName>rampTime</ParamName>
                </Param>
                <Param>
                  <Label>bool</Label>
                  <Constant Type="bool">true</Constant>
                  <ParamName>learnable</ParamName>
                </Param>
                <Param>
                  <Label>MemID</Label>
                  <Constant Type="int">0</Constant>
                  <ParamName>bufferid</ParamName>
                </Param>
              </Parameters>
            </FunctionCall>
          </FunctionBody>
        </Scene>
      </Module>
    </Object>
    <Object>
      <Task VID="10145" Master="9722" MTime="">
        <Name>Hall PIR Night</Name>
        <Model>Hall PIR Night</Model>
        <Note />
        <DName />
        <ObjectType>Task</ObjectType>
        <Category>9876</Category>
        <Procedure>
          <Target>10169</Target>
          <Function>On</Function>
          <Parameters>
            <Param>0</Param>
            <Param>1</Param>
            <Param>2</Param>
            <Param>3</Param>
            <Param>4</Param>
          </Parameters>
        </Procedure>
        <Query>
          <Target>0</Target>
          <Function />
          <Parameters />
        </Query>
        <Adjust>
          <Target>10173</Target>
          <Function>AdjustLoads</Function>
          <Parameters>
            <Param>0</Param>
            <Param>5</Param>
            <Param>6</Param>
          </Parameters>
        </Adjust>
        <Level Max="100">
          <Target>10173</Target>
          <Function>AverageLoadLevel</Function>
          <Parameters>
            <Param>0</Param>
          </Parameters>
        </Level>
        <ParamTable>
          <Param ID="0">
            <array>
              <val>79</val>
            </array>
          </Param>
          <Param ID="1" Fixed="true">
            <array>
              <val>50</val>
            </array>
          </Param>
          <Param ID="2" Fixed="true">
            <val>2</val>
          </Param>
          <Param ID="3">
            <val>1</val>
          </Param>
          <Param ID="4">
            <val>0</val>
          </Param>
          <Param ID="5" Fixed="true">
            <val>5</val>
          </Param>
          <Param ID="6" Fixed="true">
            <val>10</val>
          </Param>
        </ParamTable>
        <DependTable />
      </Task>
      <Module>
        <Library Name="Lighting\Toggle" Local="true" />
        <Library Name="vantage" Local="false" />
        <Scene>
          <Name>SceneProgram_10145</Name>
          <Type>procedure</Type>
          <Parameters />
          <ParameterValues />
          <FunctionBody>
            <FunctionCall disable="false">
              <Name>On</Name>
              <Parameters>
                <Param>
                  <Label>Load</Label>
                  <Initializer>
                    <Constant Type="int">79</Constant>
                  </Initializer>
                  <ParamName>loads</ParamName>
                </Param>
                <Param>
                  <Label>Level</Label>
                  <Initializer>
                    <Constant Type="float">50.0</Constant>
                  </Initializer>
                  <ParamName>levels</ParamName>
                </Param>
                <Param>
                  <Label>Seconds</Label>
                  <Constant Type="float">2.0</Constant>
                  <ParamName>rampTime</ParamName>
                </Param>
                <Param>
                  <Label>bool</Label>
                  <Constant Type="bool">true</Constant>
                  <ParamName>learnable</ParamName>
                </Param>
                <Param>
                  <Label>MemID</Label>
                  <Constant Type="int">0</Constant>
                  <ParamName>bufferid</ParamName>
                </Param>
              </Parameters>
            </FunctionCall>
          </FunctionBody>
        </Scene>
      </Module>
    </Object>
    <Object>
      <Task VID="10146" Master="9722" MTime="">
        <Name>Learn Hall</Name>
        <Model>Learn Hall</Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Task</ObjectType>
        <Category>9876</Category>
        <Procedure>
          <Target>10183</Target>
          <Function>SceneProgram_10146</Function>
          <Parameters />
        </Procedure>
        <Query>
          <Target>0</Target>
          <Function />
          <Parameters />
        </Query>
        <Adjust>
          <Target>0</Target>
          <Function />
          <Parameters />
        </Adjust>
        <Level>
          <Target>0</Target>
          <Function />
          <Parameters />
        </Level>
        <ParamTable>
        </ParamTable>
        <DependTable>
        </DependTable>
      </Task>
      <Module>
        <Library Name="Lighting\Misc" Local="true" />
        <Library Name="load" Local="false" />
        <Library Name="Programming\VantageTime" Local="true" />
        <Library Name="vantage" Local="false" />
        <Scene>
          <Name>SceneProgram_10146</Name>
          <Type>procedure</Type>
          <Parameters />
          <ParameterValues />
          <FunctionBody>
            <If disable="false">
              <LogicalExpression>
                <GivePrecedence>false</GivePrecedence>
                <Expanded>true</Expanded>
                <LogicalExpression>
                  <GivePrecedence>false</GivePrecedence>
                  <Expanded>true</Expanded>
                  <RelationalExpression>
                    <Operand>
                      <Label>bool</Label>
                      <FunctionCall>
                        <Name>DayTime</Name>
                        <Parameters />
                      </FunctionCall>
                    </Operand>
                    <Operator>eq</Operator>
                    <Operand>
                      <Label>bool</Label>
                      <Constant Type="bool">true</Constant>
                    </Operand>
                  </RelationalExpression>
                </LogicalExpression>
                <Operator>and</Operator>
                <LogicalExpression>
                  <GivePrecedence>false</GivePrecedence>
                  <Expanded>true</Expanded>
                  <RelationalExpression>
                    <Operand>
                      <Label>Level</Label>
                      <FunctionCall>
                        <Name>Load_GetLevel</Name>
                        <Parameters>
                          <Param>
                            <Label>Load</Label>
                            <Constant Type="int">79</Constant>
                            <ParamName>object</ParamName>
                          </Param>
                        </Parameters>
                      </FunctionCall>
                    </Operand>
                    <Operator>ne</Operator>
                    <Operand>
                      <Label>Level</Label>
                      <Constant Type="float">0.0</Constant>
                    </Operand>
                  </RelationalExpression>
                </LogicalExpression>
              </LogicalExpression>
              <StatementList>
                <FunctionCall disable="false">
                  <Name>Learn</Name>
                  <Parameters>
                    <Param>
                      <Label>Task</Label>
                      <Initializer>
                        <Constant Type="int">10144</Constant>
                      </Initializer>
                      <ParamName>tasks</ParamName>
                    </Param>
                  </Parameters>
                </FunctionCall>
              </StatementList>
              <Expanded>True</Expanded>
            </If>
            <Else disable="false">
              <StatementList>
                <FunctionCall disable="false">
                  <Name>Learn</Name>
                  <Parameters>
                    <Param>
                      <Label>Task</Label>
                      <Initializer>
                        <Constant Type="int">10145</Constant>
                      </Initializer>
                      <ParamName>tasks</ParamName>
                    </Param>
                  </Parameters>
                </FunctionCall>
              </StatementList>
              <Expanded>True</Expanded>
            </Else>
          </FunctionBody>
        </Scene>
      </Module>
    </Object>
    <Object>
      <Area VID="10147" Master="9722" MTime="" ExcludeFromWidgets="True">
        <Name>Blinds</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Area</ObjectType>
        <Area>6</Area>
        <Location>10</Location>
        <AreaType>
        </AreaType>
        <EnclosureArea>0</EnclosureArea>
      </Area>
    </Object>
    <Object>
      <GMem VID="10148" Master="9722" MTime="">
        <Name>Motion sensor Hall overide </Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>GMem</ObjectType>
        <Category>9876</Category>
        <data Fixed="false">
          <val>0</val>
        </data>
        <Persistent>true</Persistent>
        <Tag object="false">bool</Tag>
      </GMem>
    </Object>
    <Object>
      <Task VID="10155" Master="9722" MTime="">
        <Name>Kitchen EQ Scene 1</Name>
        <Model>Kitchen EQ Scene 1</Model>
        <Note />
        <DName />
        <ObjectType>Task</ObjectType>
        <Category>9904</Category>
        <Procedure>
          <Target>10183</Target>
          <Function>SceneProgram_10155</Function>
          <Parameters>
            <Param>0</Param>
          </Parameters>
        </Procedure>
        <Query>
          <Target>10172</Target>
          <Function>VariableAtSpecifiedValue</Function>
          <Parameters>
            <Param>1</Param>
            <Param>2</Param>
          </Parameters>
        </Query>
        <Adjust>
          <Target>0</Target>
          <Function />
          <Parameters />
        </Adjust>
        <Level>
          <Target>0</Target>
          <Function />
          <Parameters />
        </Level>
        <ParamTable>
          <Param ID="0">
            <gmem Type="ref">10018</gmem>
          </Param>
          <Param ID="1">
            <gmem>10018</gmem>
          </Param>
          <Param ID="2">
            <val>2</val>
          </Param>
        </ParamTable>
        <DependTable>
          <Param>1</Param>
        </DependTable>
      </Task>
      <Module>
        <Library Name="Programming\LaunchTasks" Local="true" />
        <Library Name="vantage" Local="false" />
        <Scene>
          <Name>SceneProgram_10155</Name>
          <Type>procedure</Type>
          <Parameters>
            <Param>
              <Reference>true</Reference>
              <Label>Number</Label>
              <Label>GMem</Label>
              <Name>param1</Name>
            </Param>
          </Parameters>
          <ParameterValues>
            <Param>
              <Label>GMem</Label>
              <Constant Type="int">10018</Constant>
              <ParamName>param1</ParamName>
            </Param>
          </ParameterValues>
          <FunctionBody>
            <If disable="false">
              <LogicalExpression>
                <GivePrecedence>false</GivePrecedence>
                <Expanded>true</Expanded>
                <RelationalExpression>
                  <Operand>
                    <Label>Number</Label>
                    <Identifier>param1</Identifier>
                  </Operand>
                  <Operator>eq</Operator>
                  <Operand>
                    <Label>Number</Label>
                    <Constant Type="int">2</Constant>
                  </Operand>
                </RelationalExpression>
              </LogicalExpression>
              <StatementList>
                <FunctionCall disable="false">
                  <Name>LaunchTask</Name>
                  <Parameters>
                    <Param>
                      <Label>Task</Label>
                      <Initializer>
                        <Constant Type="int">9932</Constant>
                      </Initializer>
                      <ParamName>tasks</ParamName>
                    </Param>
                    <Param>
                      <Label>TriggerType</Label>
                      <Identifier>ButtonRelease</Identifier>
                      <ParamName>eventType</ParamName>
                    </Param>
                    <Param>
                      <Label>Number</Label>
                      <Constant Type="int">1</Constant>
                      <ParamName>param1</ParamName>
                    </Param>
                  </Parameters>
                </FunctionCall>
              </StatementList>
              <Expanded>True</Expanded>
            </If>
            <Else disable="false">
              <StatementList>
                <FunctionCall disable="false">
                  <Name>LaunchTask</Name>
                  <Parameters>
                    <Param>
                      <Label>Task</Label>
                      <Initializer>
                        <Constant Type="int">9933</Constant>
                      </Initializer>
                      <ParamName>tasks</ParamName>
                    </Param>
                    <Param>
                      <Label>TriggerType</Label>
                      <Identifier>ButtonRelease</Identifier>
                      <ParamName>eventType</ParamName>
                    </Param>
                    <Param>
                      <Label>Number</Label>
                      <Constant Type="int">1</Constant>
                      <ParamName>param1</ParamName>
                    </Param>
                  </Parameters>
                </FunctionCall>
              </StatementList>
              <Expanded>True</Expanded>
            </Else>
            <QueryCall>
              <Name>VariableAtSpecifiedValue</Name>
              <Parameters>
                <Param>
                  <Label>GMem</Label>
                  <Constant Type="int">10018</Constant>
                  <ParamName>variable</ParamName>
                </Param>
                <Param>
                  <Label>Number</Label>
                  <Constant Type="int">2</Constant>
                  <ParamName>value</ParamName>
                </Param>
              </Parameters>
            </QueryCall>
          </FunctionBody>
        </Scene>
      </Module>
    </Object>
    <Object>
      <Task VID="10156" Master="9722" MTime="">
        <Name>Kitchen EQ Scene 2</Name>
        <Model>Kitchen EQ Scene 2</Model>
        <Note />
        <DName />
        <ObjectType>Task</ObjectType>
        <Category>9904</Category>
        <Procedure>
          <Target>10183</Target>
          <Function>SceneProgram_10156</Function>
          <Parameters>
            <Param>0</Param>
          </Parameters>
        </Procedure>
        <Query>
          <Target>10172</Target>
          <Function>VariableAtSpecifiedValue</Function>
          <Parameters>
            <Param>1</Param>
            <Param>2</Param>
          </Parameters>
        </Query>
        <Adjust>
          <Target>0</Target>
          <Function />
          <Parameters />
        </Adjust>
        <Level>
          <Target>0</Target>
          <Function />
          <Parameters />
        </Level>
        <ParamTable>
          <Param ID="0">
            <gmem Type="ref">10018</gmem>
          </Param>
          <Param ID="1">
            <gmem>10018</gmem>
          </Param>
          <Param ID="2">
            <val>3</val>
          </Param>
        </ParamTable>
        <DependTable>
          <Param>1</Param>
        </DependTable>
      </Task>
      <Module>
        <Library Name="Programming\LaunchTasks" Local="true" />
        <Library Name="vantage" Local="false" />
        <Scene>
          <Name>SceneProgram_10156</Name>
          <Type>procedure</Type>
          <Parameters>
            <Param>
              <Reference>true</Reference>
              <Label>Number</Label>
              <Label>GMem</Label>
              <Name>param1</Name>
            </Param>
          </Parameters>
          <ParameterValues>
            <Param>
              <Label>GMem</Label>
              <Constant Type="int">10018</Constant>
              <ParamName>param1</ParamName>
            </Param>
          </ParameterValues>
          <FunctionBody>
            <If disable="false">
              <LogicalExpression>
                <GivePrecedence>false</GivePrecedence>
                <Expanded>true</Expanded>
                <RelationalExpression>
                  <Operand>
                    <Label>Number</Label>
                    <Identifier>param1</Identifier>
                  </Operand>
                  <Operator>eq</Operator>
                  <Operand>
                    <Label>Number</Label>
                    <Constant Type="int">3</Constant>
                  </Operand>
                </RelationalExpression>
              </LogicalExpression>
              <StatementList>
                <FunctionCall disable="false">
                  <Name>LaunchTask</Name>
                  <Parameters>
                    <Param>
                      <Label>Task</Label>
                      <Initializer>
                        <Constant Type="int">9932</Constant>
                      </Initializer>
                      <ParamName>tasks</ParamName>
                    </Param>
                    <Param>
                      <Label>TriggerType</Label>
                      <Identifier>ButtonRelease</Identifier>
                      <ParamName>eventType</ParamName>
                    </Param>
                    <Param>
                      <Label>Number</Label>
                      <Constant Type="int">1</Constant>
                      <ParamName>param1</ParamName>
                    </Param>
                  </Parameters>
                </FunctionCall>
              </StatementList>
              <Expanded>True</Expanded>
            </If>
            <Else disable="false">
              <StatementList>
                <FunctionCall disable="false">
                  <Name>LaunchTask</Name>
                  <Parameters>
                    <Param>
                      <Label>Task</Label>
                      <Initializer>
                        <Constant Type="int">10027</Constant>
                      </Initializer>
                      <ParamName>tasks</ParamName>
                    </Param>
                    <Param>
                      <Label>TriggerType</Label>
                      <Identifier>ButtonRelease</Identifier>
                      <ParamName>eventType</ParamName>
                    </Param>
                    <Param>
                      <Label>Number</Label>
                      <Constant Type="int">1</Constant>
                      <ParamName>param1</ParamName>
                    </Param>
                  </Parameters>
                </FunctionCall>
              </StatementList>
              <Expanded>True</Expanded>
            </Else>
            <QueryCall>
              <Name>VariableAtSpecifiedValue</Name>
              <Parameters>
                <Param>
                  <Label>GMem</Label>
                  <Constant Type="int">10018</Constant>
                  <ParamName>variable</ParamName>
                </Param>
                <Param>
                  <Label>Number</Label>
                  <Constant Type="int">3</Constant>
                  <ParamName>value</ParamName>
                </Param>
              </Parameters>
            </QueryCall>
          </FunctionBody>
        </Scene>
      </Module>
    </Object>
    <Object>
      <Task VID="10157" Master="9722" MTime="">
        <Name>Kitchen EQ Scene 3</Name>
        <Model>Kitchen EQ Scene 3</Model>
        <Note />
        <DName />
        <ObjectType>Task</ObjectType>
        <Category>9904</Category>
        <Procedure>
          <Target>10183</Target>
          <Function>SceneProgram_10157</Function>
          <Parameters>
            <Param>0</Param>
          </Parameters>
        </Procedure>
        <Query>
          <Target>10172</Target>
          <Function>VariableAtSpecifiedValue</Function>
          <Parameters>
            <Param>1</Param>
            <Param>2</Param>
          </Parameters>
        </Query>
        <Adjust>
          <Target>0</Target>
          <Function />
          <Parameters />
        </Adjust>
        <Level>
          <Target>0</Target>
          <Function />
          <Parameters />
        </Level>
        <ParamTable>
          <Param ID="0">
            <gmem Type="ref">10018</gmem>
          </Param>
          <Param ID="1">
            <gmem>10018</gmem>
          </Param>
          <Param ID="2">
            <val>4</val>
          </Param>
        </ParamTable>
        <DependTable>
          <Param>1</Param>
        </DependTable>
      </Task>
      <Module>
        <Library Name="Programming\LaunchTasks" Local="true" />
        <Library Name="vantage" Local="false" />
        <Scene>
          <Name>SceneProgram_10157</Name>
          <Type>procedure</Type>
          <Parameters>
            <Param>
              <Reference>true</Reference>
              <Label>Number</Label>
              <Label>GMem</Label>
              <Name>param1</Name>
            </Param>
          </Parameters>
          <ParameterValues>
            <Param>
              <Label>GMem</Label>
              <Constant Type="int">10018</Constant>
              <ParamName>param1</ParamName>
            </Param>
          </ParameterValues>
          <FunctionBody>
            <If disable="false">
              <LogicalExpression>
                <GivePrecedence>false</GivePrecedence>
                <Expanded>true</Expanded>
                <RelationalExpression>
                  <Operand>
                    <Label>Number</Label>
                    <Identifier>param1</Identifier>
                  </Operand>
                  <Operator>eq</Operator>
                  <Operand>
                    <Label>Number</Label>
                    <Constant Type="int">4</Constant>
                  </Operand>
                </RelationalExpression>
              </LogicalExpression>
              <StatementList>
                <FunctionCall disable="false">
                  <Name>LaunchTask</Name>
                  <Parameters>
                    <Param>
                      <Label>Task</Label>
                      <Initializer>
                        <Constant Type="int">9932</Constant>
                      </Initializer>
                      <ParamName>tasks</ParamName>
                    </Param>
                    <Param>
                      <Label>TriggerType</Label>
                      <Identifier>ButtonRelease</Identifier>
                      <ParamName>eventType</ParamName>
                    </Param>
                    <Param>
                      <Label>Number</Label>
                      <Constant Type="int">1</Constant>
                      <ParamName>param1</ParamName>
                    </Param>
                  </Parameters>
                </FunctionCall>
              </StatementList>
              <Expanded>True</Expanded>
            </If>
            <Else disable="false">
              <StatementList>
                <FunctionCall disable="false">
                  <Name>LaunchTask</Name>
                  <Parameters>
                    <Param>
                      <Label>Task</Label>
                      <Initializer>
                        <Constant Type="int">10049</Constant>
                      </Initializer>
                      <ParamName>tasks</ParamName>
                    </Param>
                    <Param>
                      <Label>TriggerType</Label>
                      <Identifier>ButtonRelease</Identifier>
                      <ParamName>eventType</ParamName>
                    </Param>
                    <Param>
                      <Label>Number</Label>
                      <Constant Type="int">1</Constant>
                      <ParamName>param1</ParamName>
                    </Param>
                  </Parameters>
                </FunctionCall>
              </StatementList>
              <Expanded>True</Expanded>
            </Else>
            <QueryCall>
              <Name>VariableAtSpecifiedValue</Name>
              <Parameters>
                <Param>
                  <Label>GMem</Label>
                  <Constant Type="int">10018</Constant>
                  <ParamName>variable</ParamName>
                </Param>
                <Param>
                  <Label>Number</Label>
                  <Constant Type="int">4</Constant>
                  <ParamName>value</ParamName>
                </Param>
              </Parameters>
            </QueryCall>
          </FunctionBody>
        </Scene>
      </Module>
    </Object>
    <Object>
      <Task VID="10158" Master="9722" MTime="">
        <Name>KItchen Toggle/Learn All</Name>
        <Model>KItchen Toggle/Learn All</Model>
        <Note />
        <DName />
        <ObjectType>Task</ObjectType>
        <Category>9904</Category>
        <Procedure>
          <Target>10171</Target>
          <Function>PressAndHold</Function>
          <Parameters>
            <Param>0</Param>
            <Param>1</Param>
            <Param>2</Param>
            <Param>3</Param>
          </Parameters>
        </Procedure>
        <Query>
          <Target>10170</Target>
          <Function>TaskQueryState</Function>
          <Parameters>
            <Param>0</Param>
          </Parameters>
        </Query>
        <Adjust>
          <Target>0</Target>
          <Function />
          <Parameters />
        </Adjust>
        <Level>
          <Target>0</Target>
          <Function />
          <Parameters />
        </Level>
        <ParamTable>
          <Param ID="0">
            <array>
              <val>9975</val>
            </array>
          </Param>
          <Param ID="1">
            <array>
              <val>9956</val>
            </array>
          </Param>
          <Param ID="2">
            <val>0</val>
          </Param>
          <Param ID="3">
            <val>2</val>
          </Param>
        </ParamTable>
        <DependTable>
          <Param status="Task.GetState">0</Param>
        </DependTable>
      </Task>
      <Module>
        <Library Name="Programming\LaunchTasks" Local="true" />
        <Library Name="vantage" Local="false" />
        <Scene>
          <Name>SceneProgram_10158</Name>
          <Type>procedure</Type>
          <Parameters />
          <ParameterValues />
          <FunctionBody>
            <FunctionCall disable="false">
              <Name>PressAndHold</Name>
              <Parameters>
                <Param>
                  <Label>Task</Label>
                  <Initializer>
                    <Constant Type="int">9975</Constant>
                  </Initializer>
                  <ParamName>pressTasks</ParamName>
                </Param>
                <Param>
                  <Label>Task</Label>
                  <Initializer>
                    <Constant Type="int">9956</Constant>
                  </Initializer>
                  <ParamName>holdTasks</ParamName>
                </Param>
                <Param>
                  <Label>TriggerType</Label>
                  <Identifier>ButtonRelease</Identifier>
                  <ParamName>pressEventType</ParamName>
                </Param>
                <Param>
                  <Label>TriggerType</Label>
                  <Identifier>ButtonHold</Identifier>
                  <ParamName>holdEventType</ParamName>
                </Param>
              </Parameters>
            </FunctionCall>
            <QueryCall>
              <Name>TaskQueryState</Name>
              <Parameters>
                <Param>
                  <Label>Task</Label>
                  <Initializer>
                    <Constant Type="int">9975</Constant>
                  </Initializer>
                  <ParamName>objects</ParamName>
                </Param>
              </Parameters>
            </QueryCall>
          </FunctionBody>
        </Scene>
      </Module>
    </Object>
    <Object>
      <Script VID="10165" Master="9722" MTime="">
        <Name>CustomScript_10165.sma</Name>
        <Model> 9878, 722, 9733, 9735, 9742, 9922, 9888, 9866, 9867, 9868,</Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Script</ObjectType>
      </Script>
      <?File / 
/*******************************************************************************
*                                                                              *
*                WARNING! DO NOT EDIT! GENERATED CODE BELOW!                   *
*                                                                              *
*******************************************************************************/
#include "Lighting\Toggle"
#include "Programming\LaunchTasks"
#include "Programming\VantageTime"
#include "Programming\MiscTasks"
#include <vantage>

procedure SceneProgram_9878(& {bool,GMem}:param1, & {Delay,GMem}:param5, & {Number,GMem}:param6)
{
	if(Number:param6 == Number:0 && 
	   bool:param1 == bool:false)
	{
		if(TriggerType:GetEventType() == TriggerType:ButtonPress)
		{
			if(bool:DayTime() == bool:true)
			{
				LaunchTaskWithCurrentEvent(.tasks = Task:{10144});
			}
			else
			{
				LaunchTaskWithCurrentEvent(.tasks = Task:{10145});
			}
		}
		else if(TriggerType:GetEventType() == TriggerType:ButtonRelease)
		{
			TheDelay(.delayTime = Delay:param5);

			Off(.loads = Load:{79}, .rampTime = Seconds:2.0);
		}
	}
}

procedure SceneProgram_722(& {bool,GMem}:param2, & {Number,GMem}:param3)
{
	Off(.loads = Load:{84, 71}, .rampTime = Seconds:2.0);

	param2 = bool:true;

	param3 = Number:1;

	TheDelay(.delayTime = Delay:5.0);

	param2 = bool:false;
}

procedure SceneProgram_9733(& {Number,GMem}:param4, & {Delay,GMem}:param5, & {bool,GMem}:param3)
{
	if(bool:param3 == bool:false && 
	   Number:param4 == Number:0)
	{
		if(TriggerType:GetEventType() == TriggerType:ButtonPress)
		{
			if(bool:DayTime() == bool:true)
			{
				LaunchTaskWithCurrentEvent(.tasks = Task:{10140});
			}
			else
			{
				LaunchTaskWithCurrentEvent(.tasks = Task:{10141});
			}
		}
		else if(TriggerType:GetEventType() == TriggerType:ButtonRelease)
		{
			TheDelay(.delayTime = Delay:param5);

			Off(.loads = Load:{84, 71}, .rampTime = Seconds:2.0);
		}
	}
}

procedure SceneProgram_9735(& {bool,GMem}:param1, & {Number,GMem}:param5)
{
	On(.loads = Load:{84, 71}, .levels = Level:{100.0, 100.0}, .rampTime = Seconds:2.0, .learnable = bool:true, .bufferid = MemID:0);

	param1 = bool:true;

	param5 = Number:2;
}

procedure SceneProgram_9742(& {Number,GMem}:param1)
{
	if(Number:param1 == Number:1)
	{
		param1 = Number:0;
	}
	else
	{
		param1 = Number:1;

		Off(.loads = Load:{84, 71}, .rampTime = Seconds:2.0);
	}
}

procedure SceneProgram_9922(& {Number,GMem}:param1)
{
	On(.loads = Load:{57, 56, 58}, .levels = Level:{100.0, 100.0, 100.0}, .rampTime = Seconds:2.0, .learnable = bool:true, .bufferid = MemID:0);

	param1 = Number:2;
}

procedure SceneProgram_9888(& {Number,GMem}:param2)
{
	On(.loads = Load:{55, 53, 54}, .levels = Level:{100.0, 100.0, 100.0}, .rampTime = Seconds:2.0, .learnable = bool:true, .bufferid = MemID:0);

	param2 = Number:2;
}

procedure SceneProgram_9866(& {bool,GMem}:param2, & {Number,GMem}:param3)
{
	Off(.loads = Load:{10383, 86, 9306}, .rampTime = Seconds:2.0);

	param2 = bool:true;

	param3 = Number:1;

	TheDelay(.delayTime = Delay:5.0);

	param2 = bool:false;
}

procedure SceneProgram_9867(& {Number,GMem}:param5, & {Delay,GMem}:param6, & {bool,GMem}:param3)
{
	if(bool:param3 == bool:false && 
	   Number:param5 == Number:0)
	{
		if(TriggerType:GetEventType() == TriggerType:ButtonPress)
		{
			if(bool:DayTime() == bool:true)
			{
				LaunchTaskWithCurrentEvent(.tasks = Task:{10142});
			}
			else
			{
				LaunchTaskWithCurrentEvent(.tasks = Task:{10143});
			}
		}
		else if(TriggerType:GetEventType() == TriggerType:ButtonRelease)
		{
			TheDelay(.delayTime = Delay:param6);

			Off(.loads = Load:{10383, 86, 9306}, .rampTime = Seconds:2.0);
		}
	}
}

procedure SceneProgram_9868(& {bool,GMem}:param1, & {Number,GMem}:param3)
{
	On(.loads = Load:{10383, 86, 9306}, .levels = Level:{100.0, 100.0, 100.0}, .rampTime = Seconds:2.0, .learnable = bool:true, .bufferid = MemID:0);

	param1 = bool:true;

	param3 = Number:2;
}
?>
    </Object>
    <Object>
      <Script VID="10166" Master="9722" MTime="">
        <Name>Programming\VantageTime.sma</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Script</ObjectType>
      </Script>
      <?File / 
/*
RepeatTasks.sma - Task Procedure Library
Copyright (c) 2012, Vantage Controls, Inc.
Version 0.4

ENUMS:
	Day
	Month
	Hour
	
FUNCTIONS:
	DayTime:ConvertTimeToDayTime
	bool:BetweenTime
	DayTime:GetCurrentTime
	Time:GetCurrentDate
	DayTime:GetTodaysSunsetTime
	DayTime:GetTodaysSunriseTime
	bool:DayTime
	
PROCEDURES:
	TheDelay
	
QUERIES:
*/

#if defined _VantageTime_included
  #endinput
#endif

#define _VantageTime_included

#if !defined(Delay)
  #define Delay Fixed
#endif

#include <time>
#include <vantage>
#include <fixed>

/*
<EnumInfo>
	<Localization Langauge="en">
		<Description>The day of the week.</Description>
		<Category>Timer</Category>
	</Localization>
	<IsLEDStyleType>false</IsLEDStyleType>
	<Enumerator Name="Sunday">
		<Localization Language="en">
			<DisplayName>Sunday</DisplayName>
		</Localization>
	</Enumerator>
	<Enumerator Name="Monday">
		<Localization Language="en">
			<DisplayName>Monday</DisplayName>
		</Localization>
	</Enumerator>
	<Enumerator Name="Tuesday">
		<Localization Language="en">
			<DisplayName>Tuesday</DisplayName>
		</Localization>
	</Enumerator>
	<Enumerator Name="Wednesday">
		<Localization Language="en">
			<DisplayName>Wednesday</DisplayName>
		</Localization>
	</Enumerator>
	<Enumerator Name="Thursday">
		<Localization Language="en">
			<DisplayName>Thursday</DisplayName>
		</Localization>
	</Enumerator>
	<Enumerator Name="Friday">
		<Localization Language="en">
			<DisplayName>Friday</DisplayName>
		</Localization>
	</Enumerator>
	<Enumerator Name="Saturday">
		<Localization Language="en">
			<DisplayName>Saturday</DisplayName>
		</Localization>
	</Enumerator>
</EnumInfo>
*/
enum Day
{
    Sunday = 0,
    Monday = 1,
    Tuesday = 2,
    Wednesday = 3,
    Thursday = 4,
    Friday = 5,
    Saturday = 6
};

/*
<EnumInfo>
	<Localization Langauge="en">
		<Description>The month of the year.</Description>
		<Category>Timer</Category>
	</Localization>
	<IsLEDStyleType>false</IsLEDStyleType>
	<Enumerator Name="January">
		<Localization Language="en">
			<DisplayName>January</DisplayName>
		</Localization>
	</Enumerator>
	<Enumerator Name="February">
		<Localization Language="en">
			<DisplayName>February</DisplayName>
		</Localization>
	</Enumerator>
	<Enumerator Name="March">
		<Localization Language="en">
			<DisplayName>March</DisplayName>
		</Localization>
	</Enumerator>
	<Enumerator Name="April">
		<Localization Language="en">
			<DisplayName>April</DisplayName>
		</Localization>
	</Enumerator>
	<Enumerator Name="May">
		<Localization Language="en">
			<DisplayName>May</DisplayName>
		</Localization>
	</Enumerator>
	<Enumerator Name="June">
		<Localization Language="en">
			<DisplayName>June</DisplayName>
		</Localization>
	</Enumerator>
	<Enumerator Name="July">
		<Localization Language="en">
			<DisplayName>July</DisplayName>
		</Localization>
	</Enumerator>
	<Enumerator Name="August">
		<Localization Language="en">
			<DisplayName>August</DisplayName>
		</Localization>
	</Enumerator>
	<Enumerator Name="September">
		<Localization Language="en">
			<DisplayName>September</DisplayName>
		</Localization>
	</Enumerator>
	<Enumerator Name="October">
		<Localization Language="en">
			<DisplayName>Ocotober</DisplayName>
		</Localization>
	</Enumerator>
	<Enumerator Name="November">
		<Localization Language="en">
			<DisplayName>November</DisplayName>
		</Localization>
	</Enumerator>
	<Enumerator Name="December">
		<Localization Language="en">
			<DisplayName>December</DisplayName>
		</Localization>
	</Enumerator>
</EnumInfo>
*/
enum Month
{
    January = 0,
    February = 1,
    March = 2,
    April = 3,
    May = 4,
    June = 5,
    July = 6,
    August = 7,
    September = 8,
    October = 9,
    November = 10,
    December = 11
};

/*
<EnumInfo>
	<Localization Langauge="en">
		<Description>The hour of the day.</Description>
		<Category>Timer</Category>
	</Localization>
	<Enumerator Name="Twelve Midnight">
		<Localization Language="en">
			<DisplayName>12 AM</DisplayName>
		</Localization>
	</Enumerator>
	<Enumerator Name="OneAM">
		<Localization Language="en">
			<DisplayName>1 AM</DisplayName>
		</Localization>
	</Enumerator>
	<Enumerator Name="TwoAM">
		<Localization Language="en">
			<DisplayName>2 AM</DisplayName>
		</Localization>
	</Enumerator>
	<Enumerator Name="ThreeAM">
		<Localization Language="en">
			<DisplayName>3 AM</DisplayName>
		</Localization>
	</Enumerator>
	<Enumerator Name="FourAM">
		<Localization Language="en">
			<DisplayName>4 AM</DisplayName>
		</Localization>
	</Enumerator>
	<Enumerator Name="FiveAM">
		<Localization Language="en">
			<DisplayName>5 AM</DisplayName>
		</Localization>
	</Enumerator>
	<Enumerator Name="SixAM">
		<Localization Language="en">
			<DisplayName>6 AM</DisplayName>
		</Localization>
	</Enumerator>
	<Enumerator Name="SevenAM">
		<Localization Language="en">
			<DisplayName>7 AM</DisplayName>
		</Localization>
	</Enumerator>\
	<Enumerator Name="EightAM">
		<Localization Language="en">
			<DisplayName>8 AM</DisplayName>
		</Localization>
	</Enumerator>
	<Enumerator Name="NineAM">
		<Localization Language="en">
			<DisplayName>9 AM</DisplayName>
		</Localization>
	</Enumerator>
	<Enumerator Name="TenAM">
		<Localization Language="en">
			<DisplayName>10 AM</DisplayName>
		</Localization>
	</Enumerator>
	<Enumerator Name="ElevenAM">
		<Localization Language="en">
			<DisplayName>11 AM</DisplayName>
		</Localization>
	</Enumerator>
	<Enumerator Name="Twelve Noon">
		<Localization Language="en">
			<DisplayName>12 PM</DisplayName>
		</Localization>
	</Enumerator>
	<Enumerator Name="OnePM">
		<Localization Language="en">
			<DisplayName>1 PM</DisplayName>
		</Localization>
	</Enumerator>
	<Enumerator Name="TwoPM">
		<Localization Language="en">
			<DisplayName>2 PM</DisplayName>
		</Localization>
	</Enumerator>
	<Enumerator Name="ThreePM">
		<Localization Language="en">
			<DisplayName>3 PM</DisplayName>
		</Localization>
	</Enumerator>
	<Enumerator Name="FourPM">
		<Localization Language="en">
			<DisplayName>4 PM</DisplayName>
		</Localization>
	</Enumerator>
	<Enumerator Name="FivePM">
		<Localization Language="en">
			<DisplayName>5 PM</DisplayName>
		</Localization>
	</Enumerator>
	<Enumerator Name="SixPM">
		<Localization Language="en">
			<DisplayName>6 PM</DisplayName>
		</Localization>
	</Enumerator>
	<Enumerator Name="SevenPM">
		<Localization Language="en">
			<DisplayName>7 PM</DisplayName>
		</Localization>
	</Enumerator>
	<Enumerator Name="EightPM">
		<Localization Language="en">
			<DisplayName>8 PM</DisplayName>
		</Localization>
	</Enumerator>
	<Enumerator Name="NinePM">
		<Localization Language="en">
			<DisplayName>9 PM</DisplayName>
		</Localization>
	</Enumerator>
	<Enumerator Name="TenPM">
		<Localization Language="en">
			<DisplayName>10 PM</DisplayName>
		</Localization>
	</Enumerator>
	<Enumerator Name="ElevenPM">
		<Localization Language="en">
			<DisplayName>11 PM</DisplayName>
		</Localization>
	</Enumerator>
	<Enumerator Name="Sunrise">
		<Localization Language="en">
			<DisplayName>Sunrise</DisplayName>
		</Localization>
	</Enumerator>
	<Enumerator Name="Sunset">
		<Localization Language="en">
			<DisplayName>Sunset</DisplayName>
		</Localization>
	</Enumerator>
</EnumInfo>
*/
enum Hour
{
    TwelveAM = 0,
    OneAM = 1,
    TwoAM = 2,
    ThreeAM = 3,
    FourAM = 4,
    FiveAM = 5,
    SixAM = 6,
    SevenAM = 7,
    EightAM = 8,
    NineAM = 9,
    TenAM = 10,
    ElevenAM = 11,
    TwelvePM = 12,
    OnePM = 13,
    TwoPM = 14,
    ThreePM = 15,
    FourPM = 16,
    FivePM = 17,
    SixPM = 18,
    SevenPM = 19,
    EightPM = 20,
    NinePM = 21,
    TenPM = 22,
    ElevenPM = 23,
    Sunrise = 24,
    Sunset = 25
};

/*
<FunctionInfo>
	<Localization Language="en">
		<DisplayName>Delay</DisplayName>
		<Description>Delays the task for the specified amount of time or until a trigger is received.  If a trigger is received.  The delay is halted and the task is run again.</Description>
		<TitleFormat>Delay</TitleFormat>
		<DisplayFormat>Delay for [delay(delayTime)]</DisplayFormat>
	</Localization>
	<BrowserClass>Button</BrowserClass>
	<FunctionClasses>
		<FunctionClass>Objectless</FunctionClass>
		<FunctionClass>CreatesTrigger</FunctionClass>
	</FunctionClasses>
	<Supports>
		<QueryClass>Standard</QueryClass>
		<QueryClass>Time</QueryClass>
	</Supports>
	<DefaultQuery>AlwaysOn</DefaultQuery>
	<Param Name="delayTime">
		<Localization Language="en">
			<DisplayName>Delay Time</DisplayName>
			<Description>The amount of time in seconds to wait before continuing.</Description>
		</Localization>
		<SystemDefault>Delay</SystemDefault>
	</Param>
</FunctionInfo>
*/
procedure TheDelay(Delay:delayTime)
{
	Delay(Seconds:delayTime);
}

DayTime:ConvertTimeToDayTime(Time:time)
{
	new hour;
	new minute;
	new second;
	new garbage;
	ParseTime(time, garbage, garbage, garbage, hour, minute, second);
	minute += (hour * 60);
	second += (minute * 60);
	return DayTime:second;
}

/*
<FunctionInfo>
	<Localization Language="en">
		<DisplayName>Between Times</DisplayName>
		<Description>Reports true if the current time is between the specified times.</Description>
		<TitleFormat>Between Times</TitleFormat>
		<DisplayFormat>The current time is between [time(startTime)] and [time(endTime)]</DisplayFormat>
	</Localization>
	<BrowserClass>Time</BrowserClass>
	<Param Name="startTime">
		<Localization Language="en">
			<DisplayName>Start Time</DisplayName>
			<Description>The time the current time needs to be after.</Description>
		</Localization>
	</Param>
	<Param Name="endTime">
		<Localization Language="en">
			<DisplayName>End Time</DisplayName>
			<Description>The time the current time needs to be before.</Description>
		</Localization>
	</Param>
</FunctionInfo>
*/
public bool:BetweenTime(DayTime:startTime, DayTime:endTime)
{
	new DayTime:currentTime = ConvertTimeToDayTime(GetTime());
	new bool:retVal = false;
	
	if (startTime < endTime)
	{
		if ((currentTime > startTime) && (currentTime < endTime))
		{
			retVal = true;
		}
	}
	else
	{
		if ((currentTime > startTime) || (currentTime < endTime))
		{
			retVal = true;
		}
	}
	return retVal;
}

/*
<FunctionInfo>
	<Localization Language="en">
		<DisplayName>Current Time</DisplayName>
		<Description>Reports the current time.</Description>
		<TitleFormat>Current Time</TitleFormat>
		<DisplayFormat>The Current Time is</DisplayFormat>
	</Localization>
	<BrowserClass>Time</BrowserClass>
</FunctionInfo>
*/
public DayTime:GetCurrentTime()
{
	return ConvertTimeToDayTime(GetTime());
}

/*
<FunctionInfo>
	<Localization Language="en">
		<DisplayName>Current Hour</DisplayName>
		<Description>Reports the hour component of the current time.</Description>
		<TitleFormat>The Current Hour</TitleFormat>
		<DisplayFormat>The Current Hour</DisplayFormat>
	</Localization>
	<BrowserClass>Time</BrowserClass>
	<Param Name="twelveHour">
		<Localization Language="en">
			<DisplayName>Twelve Hour</DisplayName>
			<Description>If true, the hour will report in 12 hour format.  Otherwise it will report in 24 hour format.</Description>
		</Localization>
	</Param>
	<Return>
		<ValidRange>
			<LowerBound Type="int">0</LowerBound>
			<UpperBound Type="int">23</UpperBound>
		</ValidRange>
	</Return>
</FunctionInfo>
*/
public Number:GetCurrentHour(bool:twelveHour)
{
	new hour;
	new garbage;
	ParseTime(GetTime(), garbage, garbage, garbage, hour, garbage, garbage);
	if (twelveHour) 
	{
		return Number:hour % Number:12;
	}
	return Number:hour;
}

/*
<FunctionInfo>
	<Localization Language="en">
		<DisplayName>Current Minute</DisplayName>
		<Description>Reports the minute component of the current time.</Description>
		<TitleFormat>The Current Minute</TitleFormat>
		<DisplayFormat>The Current Minute</DisplayFormat>
	</Localization>
	<BrowserClass>Time</BrowserClass>
	<Return>
		<ValidRange>
			<LowerBound Type="int">0</LowerBound>
			<UpperBound Type="int">59</UpperBound>
		</ValidRange>
	</Return>
</FunctionInfo>
*/
public Number:GetCurrentMinute()
{
	new garbage;
	new minute;
	new hour;
	ParseTime(GetTime(), garbage, garbage, garbage, hour, minute, garbage);
	minute += (hour * 60);
	return Number:minute;
}

/*
<FunctionInfo>
	<Localization Language="en">
		<DisplayName>Current Date</DisplayName>
		<Description>Reports the current date.</Description>
		<TitleFormat>Current Date</TitleFormat>
		<DisplayFormat>The Current Date</DisplayFormat>
	</Localization>
	<BrowserClass>Time</BrowserClass>
</FunctionInfo>
*/
public Time:GetCurrentDate()
{
	new year;
	new month;
	new day;
	new garbage;
	ParseTime(GetTime(), year, month, day, garbage, garbage, garbage);
	return MakeTime(year, month, day, 0, 0, 0);
}

/*
<FunctionInfo>
	<Localization Language="en">
		<DisplayName>Today's Sunset Time</DisplayName>
		<Description>Reports the sunset time for the current date.</Description>
		<TitleFormat>Today's Sunset Time</TitleFormat>
		<DisplayFormat>Today's Sunset Time [timeOffset(offset)]</DisplayFormat>
	</Localization>
	<BrowserClass>Time</BrowserClass>
	<Param Name="offset">
		<Localization Language="en">
			<DisplayName>Offset</DisplayName>
			<Description>The amount of time before or after the sunset.</Description>
		</Localization>
	</Param>
	<Return>
		<DefaultValue>
			<Constant Type="int">64800</Constant>
			<Label>DateTime</Label>
		</DefaultValue>
	</Return>
</FunctionInfo>
*/
public DayTime:GetTodaysSunsetTime(TimeOffset:offset)
{
	return (ConvertTimeToDayTime(GetSunset(GetTime())) + DayTime:offset);
}

/*
<FunctionInfo>
	<Localization Language="en">
		<DisplayName>Today's Sunrise Time</DisplayName>
		<Description>Reports the sunrise time for the current date.</Description>
		<TitleFormat>Today's Sunrise Time</TitleFormat>
		<DisplayFormat>Today's Sunrise Time [timeOffset(offset)]</DisplayFormat>
	</Localization>
	<BrowserClass>Time</BrowserClass>
	<Param Name="offset">
		<Localization Language="en">
			<DisplayName>Offset</DisplayName>
			<Description>The amount of time before or after the sunrise.</Description>
		</Localization>
	</Param>
	<Return>
		<DefaultValue>
			<Constant Type="int">21600</Constant>
			<Label>DateTime</Label>
		</DefaultValue>
	</Return>
</FunctionInfo>
*/
public DayTime:GetTodaysSunriseTime(TimeOffset:offset)
{
	return (ConvertTimeToDayTime(GetSunrise(GetTime())) + DayTime:offset);
}

/*
<FunctionInfo>
	<Localization Language="en">
		<DisplayName>DayTime</DisplayName>
		<Description>Reports true if the current time is between sunrise and sunset.</Description>
		<TitleFormat>DayTime</TitleFormat>
		<DisplayFormat>The current time is in the daytime</DisplayFormat>
	</Localization>
	<BrowserClass>Time</BrowserClass>
</FunctionInfo>
*/
public bool:DayTime()
{
	new DayTime:startTime = ConvertTimeToDayTime(GetSunrise(GetTime()));
	new DayTime:endTime = ConvertTimeToDayTime(GetSunset(GetTime()));
	return BetweenTime(startTime, endTime);
}

/*
<FunctionInfo>
	<Localization Language="en">
		<DisplayName>NightTime</DisplayName>
		<Description>Reports true if the current time is between sunset and sunrise.</Description>
		<TitleFormat>NightTime</TitleFormat>
		<DisplayFormat>The current time is in the nighttime</DisplayFormat>
	</Localization>
	<BrowserClass>Time</BrowserClass>
</FunctionInfo>
*/
public bool:NightTime()
{
	return !DayTime();
}

/*
<FunctionInfo>
	<Localization Language="en">
		<DisplayName>Today's Day of the Week</DisplayName>
		<Description>Reports the day of the week for the current day.</Description>
		<TitleFormat>Today's Day of the Week</TitleFormat>
		<DisplayFormat>Today's Day of the Week</DisplayFormat>
	</Localization>
	<BrowserClass>Time</BrowserClass>
	<FunctionClasses>
		<FunctionClass>Objectless</FunctionClass>
	</FunctionClasses>
</FunctionInfo>
*/
public Day:CurrentDayOfWeek()
{
	return Day:GetDayOfWeek(GetTime());
}

/*
<FunctionInfo>
	<Localization Language="en">
		<DisplayName>Get Day of the Week</DisplayName>
		<Description>Reports the day of the week for the specified date.</Description>
		<TitleFormat>Day of the Week of Date</TitleFormat>
		<DisplayFormat>Day of the Week for [time]</DisplayFormat>
	</Localization>
	<BrowserClass>Time</BrowserClass>
	<FunctionClasses>
		<FunctionClass>Objectless</FunctionClass>
	</FunctionClasses>
	<Param Name="time">
		<Localization Language="en">
			<DisplayName>Date</DisplayName>
			<Description>The date whose day of the week is to be reported.</Description>
		</Localization>
	</Param>
</FunctionInfo>
*/
public Day:specificDayOfWeek(Time:time)
{
	return Day:GetDayOfWeek(time);
}

/*
<FunctionInfo>
	<Localization Language="en">
		<DisplayName>Current Month</DisplayName>
		<Description>Reports the current month.</Description>
		<TitleFormat>Current Month</TitleFormat>
		<DisplayFormat>The Current Month</DisplayFormat>
	</Localization>
	<BrowserClass>Time</BrowserClass>
</FunctionInfo>
*/
public Month:GetCurrentMonth()
{
	new garbage;
	new month;
	ParseTime(GetTime(), garbage, month, garbage, garbage, garbage, garbage);
	return Month:(month - 1);
}

/*
<FunctionInfo>
	<Localization Language="en">
		<DisplayName>Current Day of the Month</DisplayName>
		<Description>Reports the current day.</Description>
		<TitleFormat>Current Day</TitleFormat>
		<DisplayFormat>The Current Day of the Month</DisplayFormat>
	</Localization>
	<BrowserClass>Time</BrowserClass>
</FunctionInfo>
*/
public Number:GetCurrentDay()
{
	new garbage;
	new day;
	ParseTime(GetTime(), garbage, garbage, day, garbage, garbage, garbage);
	return Number:day;
}?>
    </Object>
    <Object>
      <Script VID="10167" Master="9722" MTime="">
        <Name>Query.inc</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Script</ObjectType>
      </Script>
      <?File / 
#if defined _Query_included
  #endinput
#endif

#define _Query_included

#include <load>
#include <button>
#include <buffer>

const QUERIES_ALL_ON = 0;
const QUERIES_ALL_OFF = 1;
const QUERIES_ANY_ON = 2;

/*
<EnumInfo>
	<Localization Language="en">
		<DisplayName>On/Off</DisplayName>
		<Description>Two state LED</Description>
		<Category>Standard</Category>
	</Localization>
	<IsLEDStyleType>false</IsLEDStyleType>
	<Localizable>false</Localizable>
	<UserVisible>false</UserVisible>
	<Enumerator Name="Query_On">
		<Localization Language="en">
			<DisplayName>On</DisplayName>
		</Localization>
	</Enumerator>
	<Enumerator Name="Query_Off">
		<Localization Language="en">
			<DisplayName>Off</DisplayName>
		</Localization>
	</Enumerator>
</EnumInfo>
*/
enum Query_OnOff
{
	Query_Off = 0,	
	Query_On = 1
};

// Return 1 if all the loads are at the specified level, otherwise return 0.
stock bool:AllLoadsAtLevel(Load:loads[], Level:level)
{
    
	new count = sizeof(loads);

	for (new i=0;i<count;i++)
	{
		if( Load_GetLevel(loads[i]) != level )
		{
			return false;
		}
	}
	
	return true;
}

// Return 1 if all loads are greater than zero, otherwise return 0.
stock bool:AllLoadsOn(Load:loads[])
{
	new count = sizeof(loads);
	for (new i=0;i<count;i++)
	{
		if( Load_GetLevel(loads[i]) == 0 )
		{
			return false;
		}
	}
		
	return true;
}

stock doStepQuery(query_state, &led_state, &bool:all_on, step_pos, bool:attached)
{
	if (attached == true && step_pos >= 0)
	{
	}
	
	if (!query_state)
	{
		all_on = false;
	}

	led_state = (query_state > led_state) ? query_state : led_state;
}

stock finalQueryState(mode, led_state, bool:all_on)
{
	if ((mode == QUERIES_ALL_ON && all_on) || mode == QUERIES_ANY_ON)
	{
		return led_state;
	}
	else if (mode == QUERIES_ALL_OFF && !led_state)
	{
		return 1;
	}

	return 0;
}

procedure dummyprocedure()
{
	new MemID:myID = GetMemID();
	LogMsg("This is useless %d", cell:myID);
}?>
    </Object>
    <Object>
      <Script VID="10168" Master="9722" MTime="">
        <Name>Lighting\LightingQueries.sma</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Script</ObjectType>
      </Script>
      <?File / 
/*
Lighting.sma - Lighting Procedure Library
Copyright (c) 2012, Vantage Controls, Inc.
Version 0.1

ENUMS:

FUNCTIONS:

PROCEDURES:
	
QUERIES:
	bool:LoadsAtLearnedLevels
	bool:LoadsOn
	bool:LoadsOff

*/

#if defined _LightingQueries_included
  #endinput
#endif

#define _LightingQueries_included

#include <load>
#include <buffer>

#include "..\Query"

#define MAXLEVEL Level:100000
#define MINLEVEL 0

/*
<FunctionInfo>
	<Localization Language="en">
		<DisplayName>All Loads at Learned Levels</DisplayName>
		<Description>Reports true if all loads are at the a scenes learned level.  If the scene is not learnable, this condition reports true if all loads are at the level to which they were originally set.</Description>
		<QueryDescription>The LED will be set to the Second State when ALL loads are at their learned level.  The LED will be set to the First State otherwise.</QueryDescription>
		<TitleFormat>All Loads at Learned Levels</TitleFormat>
		<DisplayFormat>Turn the LED On if [loads] [plural(loads,'are','is')] at [plural(loads,'their','its')] learned [plural(loads,'levels','level')].</DisplayFormat>
	</Localization>
	<QueryClass>LearnedLighting</QueryClass>
	<FunctionClasses>
		<FunctionClass>TrackLEDAction</FunctionClass>
	</FunctionClasses>	
	<Join>
		<Param>loads</Param>
		<Param>levels</Param>
	</Join>
	<RequiredMethods>
		<MethodName>Load_GetLevel</MethodName>		
	</RequiredMethods>
	<Param Name="loads">
		<Localization Language="en">
			<DisplayName>Loads</DisplayName>
			<Description>The loads whose levels are to be verified.</Description>
		</Localization>
	</Param>
	<Param Name="levels">
		<Localization Language="en">
			<DisplayName>Levels</DisplayName>
			<Description>The original levels of the loads.</Description>
		</Localization>
		<SystemDefault>Level</SystemDefault>
	</Param>
	<Param Name="bufferid">
		<Localization Language="en"/>
		<Visible>false</Visible>
	</Param>
</FunctionInfo>
*/
query bool:LoadsAtLearnedLevels(Load:loads[], Level:levels[], MemID:bufferid)
{
	sleep -50;
	new count = sizeof(loads);
	
	if (DoesBufferExist(bufferid))
	{
		for (new i = 0 ; i < count ; i++)
		{
			if (_:Load_GetLevel(loads[i]) != _:BufferGetAt(bufferid,i))
			{				
				return false;
			}
		}
	}
	else
	{		
		for (new i = 0 ; i < count ; i++)
		{
			if (_:Load_GetLevel(loads[i]) != _:levels[i])
			{
				return false;
			}
		}
	}
	return true;
}

/*
<FunctionInfo>
	<Localization Language="en">
		<DisplayName>All Loads On</DisplayName>
		<Description>Reports true if all of the specified loads are on.</Description>
		<QueryDescription>The LED will be set to the Second State if all specified loads are on.  It will be set to the First State otherwise.</QueryDescription>
		<TitleFormat>All Loads On</TitleFormat>
		<DisplayFormat>Turn the LED On if [plural(loads,'All','the')] [plural(loads,'loads','load')] [plural(loads,'are','is')] On</DisplayFormat>
	</Localization>
	<QueryClass>Lighting</QueryClass>
	<FunctionClasses>
		<FunctionClass>TrackLEDAction</FunctionClass>
	</FunctionClasses>
	<RequiredMethods>
		<MethodName>Load_GetLevel</MethodName>			
	</RequiredMethods>
	<Param Name="loads">
		<Localization Language="en">
			<DisplayName>Loads</DisplayName>
			<Description>The loads whose levels are to be verified.</Description>
		</Localization>
		<Visible>true</Visible>
	</Param>
</FunctionInfo>
*/
query bool:LoadsOn(Load:loads[])
{
	sleep -50;
	new count = sizeof(loads);

	for (new i=0;i<count;i++)
	{
		if (Load_GetLevel(loads[i]) == 0)
		{
			return false;
		}
	}

	return true;
}

/*
<FunctionInfo>
	<Localization Language="en">
		<DisplayName>All Loads Off</DisplayName>
		<Description>Reports true if all of the specified loads are off.</Description>
		<QueryDescription>The LED will be set to the Second State if all specified loads are off.  It will be set to the First State otherwise.</QueryDescription>
		<TitleFormat>All Loads Off</TitleFormat>
		<DisplayFormat>Turn the LED On if [plural(loads,'All','the')] [plural(loads,'loads','load')] [plural(loads,'are','is')] Off</DisplayFormat>
	</Localization>
	<QueryClass>Lighting</QueryClass>
	<RequiredMethods>
		<MethodName>Load_GetLevel</MethodName>			
	</RequiredMethods>
	<Param Name="loads">
		<Localization Language="en">
			<DisplayName>Loads</DisplayName>
			<Description>The loads whose levels are to be verified.</Description>
		</Localization>
		<Visible>true</Visible>
	</Param>
</FunctionInfo>
*/
query bool:LoadsOff(Load:loads[])
{
	sleep -50;
	new count = sizeof(loads);

	for (new i=0;i<count;i++)
	{
		if (Load_GetLevel(loads[i]) != 0)
		{
			return false;
		}
	}

	return true;
}

/*
<FunctionInfo>
	<Localization Language="en">
		<DisplayName>Any Loads On</DisplayName>
		<Description>Reports true if any of the specified loads are on.</Description>
		<QueryDescription>The LED will be set to the Second State if any of the specified loads are on.  It will be set to the First State otherwise.</QueryDescription>
		<TitleFormat>Any Loads On</TitleFormat>
		<DisplayFormat>Turn the LED On if [plural(loads,'Any','the')] [plural(loads,'loads','load')] [plural(loads,'are','is')] On</DisplayFormat>
	</Localization>
	<QueryClass>Lighting</QueryClass>
	<FunctionClasses>
		<FunctionClass>TrackLEDAction</FunctionClass>
	</FunctionClasses>
	<RequiredMethods>
		<MethodName>Load_GetLevel</MethodName>			
	</RequiredMethods>
	<Param Name="loads">
		<Localization Language="en">
			<DisplayName>Loads</DisplayName>
			<Description>The loads whose levels are to be verified.</Description>
		</Localization>
		<Visible>true</Visible>
	</Param>
</FunctionInfo>
*/
query bool:AnyLoadsOn(Load:loads[])
{
	sleep -50;
	new count = sizeof(loads);

	for (new i=0;i<count;i++)
	{
		if (Load_GetLevel(loads[i]) > 0)
		{
			return true;
		}
	}

	return false;
}

/*
<FunctionInfo>
	<Localization Language="en">
		<DisplayName>Any Loads Off</DisplayName>
		<Description>Reports true if any of the specified loads are off.</Description>
		<QueryDescription>The LED will be set to the Second State if any of the specified loads are off.  It will be set to the First State otherwise.</QueryDescription>
		<TitleFormat>Any Loads Off</TitleFormat>
		<DisplayFormat>Turn the LED On if [plural(loads,'Any','the')] [plural(loads,'loads','load')] [plural(loads,'are','is')] Off</DisplayFormat>
	</Localization>
	<QueryClass>Lighting</QueryClass>
	<RequiredMethods>
		<MethodName>Load_GetLevel</MethodName>			
	</RequiredMethods>
	<Param Name="loads">
		<Localization Language="en">
			<DisplayName>Loads</DisplayName>
			<Description>The loads whose levels are to be verified.</Description>
		</Localization>
		<Visible>true</Visible>
	</Param>
</FunctionInfo>
*/
query bool:AnyLoadsOff(Load:loads[])
{
	sleep -50;
	new count = sizeof(loads);

	for (new i=0;i<count;i++)
	{
		if (Load_GetLevel(loads[i]) == 0)
		{
			return true;
		}
	}

	return false;
}

/*
<FunctionInfo>
	<Localization Language="en">
		<DisplayName>All Loads Greater Than Level</DisplayName>
		<Description>Reports true if all of the loads are greater than the specified level.</Description>
		<QueryDescription>The LED will be set to the Second State if all of the loads are greater than the specified level.  It will be set to the First State otherwise.</QueryDescription>
		<TitleFormat>Any Loads Off</TitleFormat>
		<DisplayFormat>Turn the LED On if All Load's levels are Greater Than [level]</DisplayFormat>
	</Localization>
	<QueryClass>None</QueryClass>
	<FunctionClasses>
		<FunctionClass>TrackLEDAction</FunctionClass>
	</FunctionClasses>
	<RequiredMethods>
		<MethodName>Load_GetLevel</MethodName>			
	</RequiredMethods>
	<Param Name="loads">
		<Localization Language="en">
			<DisplayName>Loads</DisplayName>
			<Description>The loads whose levels are to be verified.</Description>
		</Localization>
		<Visible>true</Visible>
	</Param>
	<Param Name="level">
		<Localization Language="en">
			<DisplayName>Level</DisplayName>
			<Description>The level the loads need to exceed.</Description>
		</Localization>
		<SystemDefault>Level</SystemDefault>
	</Param>	
</FunctionInfo>
*/
query bool:AllLoadsGreaterThanLevel(Load:loads[],Level:level)
{
	sleep -50;
	new count = sizeof(loads);

	for (new i=0;i<count;i++)
	{
		if (Load_GetLevel(loads[i]) < level)
		{
			return false;
		}
	}

	return true;
}
?>
    </Object>
    <Object>
      <Script VID="10169" Master="9722" MTime="">
        <Name>Lighting\Toggle.sma</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Script</ObjectType>
      </Script>
      <?File / 
/*
Lighting.sma - Lighting Procedure Library
Copyright (c) 2012, Vantage Controls, Inc.
Version 0.1

ENUMS:
	ToggleStatus
	
FUNCTIONS:

PROCEDURES:
	Toggle
	ToggleWLearn
	On
	OnWLearn
	Off
	Momentary
	
QUERIES:
	ToggleStatus:ToggleQuery
	
*/

#if defined _Toggle_included
  #endinput
#endif

#define _Toggle_included

#include <load>
#include <button>
#include <buffer>
#include <task>
#include "LightingQueries.sma"

#define MINLOADLEVEL 0

#if !defined(Delay)
  #define Delay Fixed
#endif

/*
<EnumInfo>
	<Localization Language="en">
		<DisplayName>Toggle Status</DisplayName>
		<Description>The status of a Toggle Function.</Description>
		<Category>Lighting</Category>
	</Localization>
	<IsLEDStyleType>false</IsLEDStyleType>
	<Enumerator Name="ToggleStatus_On">
		<Localization Language="en">
			<DisplayName>Toggle is On</DisplayName>
		</Localization>
	</Enumerator>
	<Enumerator Name="ToggleStatus_Off">
		<Localization Language="en">
			<DisplayName>Toggle is Off</DisplayName>
		</Localization>
	</Enumerator>
</EnumInfo>
*/
enum ToggleStatus
{	
	ToggleStatus_Off,
	ToggleStatus_On,
	ToggleStatus_Learned
};

static ToggleStatus:gToggleStatus = ToggleStatus_Off;
static ToggleStatus:gPrevStatus = ToggleStatus_Off;

public MemID:FirstVariable = MemID:-1;

/*
<FunctionInfo>
	<Localization Language="en">
		<DisplayName>Toggle</DisplayName>
		<Description>Turns loads on if they are off, and off if they are on.</Description>
		<TitleFormat>[loads] Toggle</TitleFormat>
		<DisplayFormat>Toggle [loads] to specified [plural(loads,'levels','level')]</DisplayFormat>
	</Localization>
	<BrowserClass>Toggling</BrowserClass>
	<Supports>
		<QueryClass>Standard</QueryClass>
		<QueryClass>Lighting</QueryClass>
		<QueryClass>LearnedLighting</QueryClass>		
	</Supports>
	<DefaultQuery>LoadsOn</DefaultQuery>
	<AdjustProcedure>AdjustLoads</AdjustProcedure>
	<LevelProcedure>AverageLoadLevel</LevelProcedure>
	<Join>
		<Param>loads</Param>
		<Param>levels</Param>
	</Join>
	<RequiredMethods>
		<MethodName>Load_GetLevel</MethodName>
		<MethodName>Load_Ramp</MethodName>
	</RequiredMethods>
	<Param Name="loads">
		<Localization Language="en">
			<DisplayName>Loads</DisplayName>
			<Description>The loads to be controlled.</Description>
		</Localization>
		<Visible>true</Visible>
	</Param>
	<Param Name="levels">
		<Localization Language="en">
			<DisplayName>Levels</DisplayName>
			<Description>The levels to which the loads are to be set.</Description>
		</Localization>
		<SystemDefault>Level</SystemDefault>
		<Visible>true</Visible>
	</Param>
	<Param Name="rampTime">
		<Localization Language="en">
			<DisplayName>Ramp Time</DisplayName>
			<Description>The time in seconds a load takes to ramp on.</Description>
		</Localization>
		<SystemDefault>RampTime</SystemDefault>
		<Visible>true</Visible>
	</Param>
	<Param Name="fadeTime">
		<Localization Language="en">
			<DisplayName>Fade Time</DisplayName>
			<Description>The time in seconds a load takes to fade off.</Description>
		</Localization>
		<SystemDefault>FadeTime</SystemDefault>
		<Visible>true</Visible>
	</Param>
	<Param Name="trackLED">
		<Localization Language="en">
			<DisplayName>Track LED</DisplayName>
			<Description>Specifies whether the state of the Toggle will follow the LED State.
  (If the LED is off, the Toggle will turn on the loads and if the LED is on, the Toggle will turn them off)</Description>
		</Localization>
		<SystemDefault>TrackLED</SystemDefault>
		<Visible>true</Visible>
	</Param>
	<Param Name="learnable">
		<Localization Language="en">
			<DisplayName>Learnable</DisplayName>
			<Description>Specifies whether the value the loads are set can be remembered when a learn trigger is received.</Description>
		</Localization>
		<SystemDefault>Learnable</SystemDefault>
		<Visible>true</Visible>
	</Param>
	<Param Name="bufferid">
		<Localization Language="en">
			<DisplayName>Buffer ID</DisplayName>
			<Description>The Unique ID to be given to the buffer that stores the loads values.</Description>
		</Localization>
		<Visible>false</Visible>
	</Param>
</FunctionInfo>
*/
procedure Toggle(Load:loads[], Level:levels[], Seconds:rampTime, Seconds:fadeTime, bool:trackLED, bool:learnable, MemID:bufferid)
{
	new count = sizeof(loads);
	new i = 0;
	
	if (FirstVariable == MemID:-1)
	{
		FirstVariable = bufferid;
	}
	
	if (count > 0)
	{
		if (learnable && !DoesBufferExist(bufferid))
		{
			CreateBuffer(bufferid, count, true);
			BufferSetRange(bufferid, _:levels, 0, count);
		}				
		if (FirstVariable == bufferid)
		{
			if (gToggleStatus == ToggleStatus_On)
			{
				gToggleStatus = ToggleStatus_Off;
			}
			else
			{
				gToggleStatus = ToggleStatus_On;				
			}
		}
		if (GetEvent() == Event_Learn && learnable && LoadsOff(loads) == false)
		{
			for (i = 0 ; i < count ; i++)
			{
				BufferSetAt(bufferid, i, _:Load_GetLevel(loads[i]));
			}
		}
		else if (GetEvent() != Event_Learn)
		{
			if ( (trackLED && Task_GetState(GetCurrentTask()) > TaskState:0) || (!trackLED && gToggleStatus == ToggleStatus_Off) )
			{			
				BatchInvoke( Load_Ramp(Load:0, Load_RampType_Variable, fadeTime, Level:0), _:loads);
			}
			else
			{
				if (learnable)
				{
					for (i = 0 ; i < count ; i++)
					{
						Load_Ramp(loads[i], Load_RampType_Variable, rampTime, Level:BufferGetAt(bufferid, i));
					}
				}
				else
				{
					for (i = 0 ; i < count ; i++)
					{
						Load_Ramp(loads[i], Load_RampType_Variable, rampTime, levels[i]);
					}
				}
			}
		}		
	}
}

/*
<FunctionInfo>
	<Localization Language="en">
		<DisplayName>Toggle With Auto Off</DisplayName>
		<Description>Turns loads on if they are off, and off if they are on.  Turns loads off after a delay.  This is a blocking procedure.</Description>
		<TitleFormat>[loads] Toggle</TitleFormat>
		<DisplayFormat>Toggle [loads] to specified [plural(loads,'levels','level')]</DisplayFormat>
	</Localization>
	<BrowserClass>ExclusiveGreenToggling</BrowserClass>
	<Supports>
		<QueryClass>Standard</QueryClass>
		<QueryClass>Lighting</QueryClass>
		<QueryClass>LearnedLighting</QueryClass>		
	</Supports>
	<FunctionClasses>
		<FunctionClass>GoGreen</FunctionClass>
	</FunctionClasses>	
	<DefaultQuery>LoadsOn</DefaultQuery>
	<AdjustProcedure>AdjustLoads</AdjustProcedure>
	<LevelProcedure>AverageLoadLevel</LevelProcedure>
	<Join>
		<Param>loads</Param>
		<Param>levels</Param>
	</Join>
	<RequiredMethods>
		<MethodName>Load_GetLevel</MethodName>
		<MethodName>Load_Ramp</MethodName>
	</RequiredMethods>
	<Param Name="loads">
		<Localization Language="en">
			<DisplayName>Loads</DisplayName>
			<Description>The loads to be controlled.</Description>
		</Localization>
		<Visible>true</Visible>
	</Param>
	<Param Name="levels">
		<Localization Language="en">
			<DisplayName>Levels</DisplayName>
			<Description>The levels to which the loads are to be set.</Description>
		</Localization>
		<SystemDefault>Level</SystemDefault>
		<Visible>true</Visible>
	</Param>
	<Param Name="rampTime">
		<Localization Language="en">
			<DisplayName>Ramp Time</DisplayName>
			<Description>The time in seconds a load takes to ramp on.</Description>
		</Localization>
		<SystemDefault>RampTime</SystemDefault>
		<Visible>true</Visible>
	</Param>
	<Param Name="fadeTime">
		<Localization Language="en">
			<DisplayName>Fade Time</DisplayName>
			<Description>The time in seconds a load takes to fade off.</Description>
		</Localization>
		<SystemDefault>FadeTime</SystemDefault>
		<Visible>true</Visible>
	</Param>
	<Param Name="offDelay">
		<Localization Language="en">
			<DisplayName>Off Delay</DisplayName>
			<Description>The amount of time which should pass before automatically turning off the loads.</Description>
		</Localization>
		<SystemDefault>OffDelay</SystemDefault>
		<Visible>true</Visible>
	</Param>
	<Param Name="offFadeTime">
		<Localization Language="en">
			<DisplayName>Off Fade Time</DisplayName>
			<Description>The time in seconds a load takes to fade off with the Auto Off</Description>
		</Localization>
		<SystemDefault>FadeTime</SystemDefault>
		<Visible>true</Visible>
	</Param>
	<Param Name="trackLED">
		<Localization Language="en">
			<DisplayName>Track LED</DisplayName>
			<Description>Specifies whether the state of the Toggle will follow the LED State.
  (If the LED is off, the Toggle will turn on the loads and if the LED is on, the Toggle will turn them off)</Description>
		</Localization>
		<SystemDefault>TrackLED</SystemDefault>
		<Visible>true</Visible>
	</Param>
	<Param Name="learnable">
		<Localization Language="en">
			<DisplayName>Learnable</DisplayName>
			<Description>Specifies whether the value the loads are set can be remembered when a learn trigger is received.</Description>
		</Localization>
		<SystemDefault>Learnable</SystemDefault>
		<Visible>true</Visible>
	</Param>
	<Param Name="bufferid">
		<Localization Language="en">
			<DisplayName>Buffer ID</DisplayName>
			<Description>The Unique ID to be given to the buffer that stores the loads values.</Description>
		</Localization>
		<Visible>false</Visible>
	</Param>
</FunctionInfo>
*/
procedure ToggleWithAutoOff(Load:loads[], Level:levels[], Seconds:rampTime, Seconds:fadeTime, Delay:offDelay, Seconds:offFadeTime, bool:trackLED, bool:learnable, MemID:bufferid)
{
	new count = sizeof(loads);
	new i = 0;
	
	if (FirstVariable == MemID:-1)
	{
		FirstVariable = bufferid;
	}
	
	if (count > 0)
	{
		if (learnable && !DoesBufferExist(bufferid))
		{
			CreateBuffer(bufferid, count, true);
			BufferSetRange(bufferid, _:levels, 0, count);
		}				
		if (FirstVariable == bufferid)
		{
			if (gToggleStatus == ToggleStatus_On)
			{
				gToggleStatus = ToggleStatus_Off;
			}
			else
			{
				gToggleStatus = ToggleStatus_On;				
			}
		}
		if (GetEvent() == Event_Learn && learnable && LoadsOff(loads) == false)
		{
			for (i = 0 ; i < count ; i++)
			{
				BufferSetAt(bufferid, i, _:Load_GetLevel(loads[i]));
			}
		}
		else if (GetEvent() != Event_Learn)
		{
			if ( (trackLED && Task_GetState(GetCurrentTask()) > TaskState:0) || (!trackLED && gToggleStatus == ToggleStatus_Off) )
			{			
				BatchInvoke( Load_Ramp(Load:0, Load_RampType_Variable, fadeTime, Level:0), _:loads);
			}
			else
			{
				if (learnable)
				{
					for (i = 0 ; i < count ; i++)
					{
						Load_RampAutoOff(loads[i], Load_RampType_Variable, rampTime, Level:BufferGetAt(bufferid, i), Load_RampType_Variable, offFadeTime, Seconds:offDelay);
					}
				}
				else
				{
					for (i = 0 ; i < count ; i++)
					{
						Load_RampAutoOff(loads[i], Load_RampType_Variable, rampTime, levels[i], Load_RampType_Variable, offFadeTime, Seconds:offDelay);
					}
				}
			}
		}		
	}
}

/*
<FunctionInfo>
	<Localization Language="en">
		<DisplayName>Toggle With Auto Learn</DisplayName>
		<Description>Turns loads on if they are off, and off if they are on.  If the trigger is held for more than the given Learn Time, the loads levels are learned.</Description>
		<TitleFormat>[loads] Toggle W/ Auto Learn</TitleFormat>
		<DisplayFormat>Toggle [loads] to specified [plural(loads,'levels','level')].  Learn if held for [learnTime] seconds.</DisplayFormat>
	</Localization>
	<BrowserClass>Toggling</BrowserClass>
	<FunctionClasses>
		<FunctionClass>ILoveQLink</FunctionClass>
	</FunctionClasses>
	<Supports>
		<QueryClass>Standard</QueryClass>
		<QueryClass>Lighting</QueryClass>
		<QueryClass>LearnedLighting</QueryClass>
	</Supports>
	<DefaultQuery>LoadsAtLearnedLevels</DefaultQuery>
	<AdjustProcedure>AdjustLoads</AdjustProcedure>
	<LevelProcedure>AverageLoadLevel</LevelProcedure>
	<Event>Up</Event>
	<Event>Down</Event>	
	<Join>
		<Param>loads</Param>
		<Param>levels</Param>
	</Join>
	<RequiredMethods>
		<MethodName>Load_GetLevel</MethodName>
		<MethodName>Load_Ramp</MethodName>
	</RequiredMethods>
	<Param Name="loads">
		<Localization Language="en">
			<DisplayName>Loads</DisplayName>
			<Description>The loads to be controlled.</Description>
		</Localization>
		<Visible>true</Visible>
	</Param>
	<Param Name="levels">
		<Localization Language="en">
			<DisplayName>Levels</DisplayName>
			<Description>The levels to which the loads are to be set.</Description>
		</Localization>
		<SystemDefault>Level</SystemDefault>
		<Visible>true</Visible>
	</Param>
	<Param Name="rampTime">
		<Localization Language="en">
			<DisplayName>Ramp Time</DisplayName>
			<Description>The time in seconds a load takes to ramp on.</Description>
		</Localization>
		<SystemDefault>RampTime</SystemDefault>
		<Visible>true</Visible>
	</Param>
	<Param Name="fadeTime">
		<Localization Language="en">
			<DisplayName>Fade Time</DisplayName>
			<Description>The time in seconds a load takes to fade off.</Description>
		</Localization>
		<SystemDefault>FadeTime</SystemDefault>
		<Visible>true</Visible>
	</Param>
	<Param Name="trackLED">
		<Localization Language="en">
			<DisplayName>Track LED</DisplayName>
			<Description>Specifies whether the state of the Toggle will follow the LED State.
  (If the LED is off, the Toggle will turn on the loads and if the LED is on, the Toggle will turn them off)</Description>
		</Localization>
		<SystemDefault>TrackLED</SystemDefault>
		<Visible>true</Visible>
	</Param>
	<Param Name="learnTime">
		<Localization Language="en">
			<DisplayName>Learn Time</DisplayName>
			<Description>The time in seconds a trigger should be held before the Toggle learns its load levels.</Description>
		</Localization>
		<DefaultValue>
			<Constant Type="float">5.0</Constant>
		</DefaultValue>		
		<Visible>true</Visible>
	</Param>	
	<Param Name="bufferid">
		<Localization Language="en">
			<DisplayName>Buffer ID</DisplayName>
			<Description>The Unique ID to be given to the buffer that stores the loads values.</Description>
		</Localization>
		<Visible>false</Visible>
	</Param>
	<Param Name="minLearnedLevel">
		<Localization Language="en"></Localization>
		<Visible>false</Visible>
		<SystemDefault>MinimumLearnedLevel</SystemDefault>
	</Param>
</FunctionInfo>
*/
procedure ToggleWLearn(Load:loads[], Level:levels[], Seconds:rampTime, Seconds:fadeTime, Seconds:learnTime, bool:trackLED, MemID:bufferid, Level:minLearnedLevel)
{
	new count = sizeof(loads);
	new i = 0;
	
	if (FirstVariable == MemID:-1)
	{
		FirstVariable = bufferid;
	}
	
	if (count > 0)
	{
		if (!DoesBufferExist(bufferid))
		{
			CreateBuffer(bufferid, count, true);
			BufferSetRange(bufferid, _:levels, 0, count);
		}	
			
		if (GetEvent() == Event_ButtonDown)
		{
			Delay(learnTime);
			gPrevStatus = gToggleStatus;
			gToggleStatus = ToggleStatus_Learned;
			for (i = 0 ; i < count ; i++)
			{
				if (_:Load_GetLevel(loads[i]) < _:minLearnedLevel)
				{
					BufferSetAt(bufferid, i, _:minLearnedLevel);
				}
				else
				{
					BufferSetAt(bufferid, i, _:Load_GetLevel(loads[i]));
				}
			}
			sleep 250;
			new Task:object = GetCurrentTask();
			Task_SetState(object, TaskState:2);
			Delay(learnTime);	
		}
		else if (gToggleStatus == ToggleStatus_Learned)
		{
			gToggleStatus = gPrevStatus;
		}
		else
		{
			if (FirstVariable == bufferid)
			{
				if (gToggleStatus == ToggleStatus_On)
				{
					gToggleStatus = ToggleStatus_Off;
				}
				else if (gToggleStatus == ToggleStatus_Off)
				{
					gToggleStatus = ToggleStatus_On;				
				}
			}
		
			if ( (trackLED && Task_GetState(GetCurrentTask()) > TaskState:0) || (!trackLED && gToggleStatus == ToggleStatus_Off) )
			{			
				BatchInvoke( Load_Ramp(Load:0, Load_RampType_Variable, fadeTime, Level:0), _:loads);
			}
			else
			{
				for (i = 0 ; i < count ; i++)
				{
					Load_Ramp(loads[i], Load_RampType_Variable, rampTime, Level:BufferGetAt(bufferid, i));
				}
			}
		}		
	}
}

/*
<FunctionInfo>
	<Localization Language="en">
		<DisplayName>On</DisplayName>
		<Description>Turns loads on to the specified levels.</Description>
		<TitleFormat>[loads] On</TitleFormat>
		<DisplayFormat>Turn On [loads] to specified [plural(loads,'levels','level')]</DisplayFormat>
	</Localization>
	<BrowserClass>Toggling</BrowserClass>
	<Supports>
		<QueryClass>Standard</QueryClass>
		<QueryClass>Lighting</QueryClass>
		<QueryClass>LearnedLighting</QueryClass>		
	</Supports>
	<DefaultQuery>LoadsOn</DefaultQuery>
	<AdjustProcedure>AdjustLoads</AdjustProcedure>
	<LevelProcedure>AverageLoadLevel</LevelProcedure>
	<Join>
		<Param>loads</Param>
		<Param>levels</Param>
	</Join>
	<RequiredMethods>
		<MethodName>Load_GetLevel</MethodName>
		<MethodName>Load_Ramp</MethodName>
	</RequiredMethods>
	<Param Name="loads">
		<Localization Language="en">
			<DisplayName>Loads</DisplayName>
			<Description>The loads to be controlled.</Description>
		</Localization>
		<Visible>true</Visible>
	</Param>
	<Param Name="levels">
		<Localization Language="en">
			<DisplayName>Levels</DisplayName>
			<Description>The levels to which the loads are to be set.</Description>
		</Localization>
		<SystemDefault>Level</SystemDefault>
		<Visible>true</Visible>
	</Param>
	<Param Name="rampTime">
		<Localization Language="en">
			<DisplayName>Ramp Time</DisplayName>
			<Description>The time in seconds a load takes to ramp on.</Description>
		</Localization>
		<SystemDefault>RampTime</SystemDefault>
		<Visible>true</Visible>
	</Param>
	<Param Name="learnable">
		<Localization Language="en">
			<DisplayName>Learnable</DisplayName>
			<Description>Specifies whether the value the loads are set can be remembered when a learn trigger is received.</Description>
		</Localization>
		<SystemDefault>Learnable</SystemDefault>
		<Visible>true</Visible>
	</Param>
	<Param Name="bufferid">
		<Localization Language="en">
			<DisplayName>Buffer ID</DisplayName>
			<Description>The Unique ID to be given to the buffer that stores the loads values.</Description>
		</Localization>
		<Visible>false</Visible>
	</Param>
</FunctionInfo>
*/
procedure On(Load:loads[], Level:levels[], Seconds:rampTime, bool:learnable, MemID:bufferid)
{
	new count = sizeof(loads);
	new i = 0;

	// Don't create buffer if not needed - Separate it out....
	if (learnable && !DoesBufferExist(bufferid))
	{
		CreateBuffer(bufferid, count, true);
		BufferSetRange(bufferid, _:levels, 0, count);
	}
	
	if (GetEvent() == Event_Learn && learnable && LoadsOff(loads) == false)
	{
		for (i = 0 ; i < count ; i++)
		{
			BufferSetAt(MemID:bufferid, i, _:Load_GetLevel(loads[i]));
		}
	}
	else if (GetEvent() != Event_Learn)
	{
		if (learnable)
		{
			for (i = 0 ; i < count ; i++)
			{
				Load_Ramp(loads[i], Load_RampType_Variable, rampTime, Level:BufferGetAt(bufferid,i));
			}
		}
		else
		{
			for (i = 0 ; i < count ; i++)
			{
				Load_Ramp(loads[i], Load_RampType_Variable, rampTime, levels[i]);
			}			
		}
	}
}

/*
<FunctionInfo>
	<Localization Language="en">
		<DisplayName>On With Auto Off</DisplayName>
		<Description>Turns loads on to the specified levels, then off again after a specified delay.</Description>
		<TitleFormat>[loads] On With Auto Off</TitleFormat>
		<DisplayFormat>Turn On [loads] to specified [plural(loads,'levels','level')], then Off after [offDelay] [plural(loads,'seconds','second')]</DisplayFormat>
	</Localization>
	<BrowserClass>ExclusiveGreenToggling</BrowserClass>
	<Supports>
		<QueryClass>Standard</QueryClass>
		<QueryClass>Lighting</QueryClass>
		<QueryClass>LearnedLighting</QueryClass>		
	</Supports>
	<FunctionClasses>
		<FunctionClass>GoGreen</FunctionClass>
	</FunctionClasses>	
	<DefaultQuery>LoadsOn</DefaultQuery>
	<AdjustProcedure>AdjustLoads</AdjustProcedure>
	<LevelProcedure>AverageLoadLevel</LevelProcedure>
	<Join>
		<Param>loads</Param>
		<Param>levels</Param>
	</Join>
	<RequiredMethods>
		<MethodName>Load_GetLevel</MethodName>
		<MethodName>Load_Ramp</MethodName>
	</RequiredMethods>
	<Param Name="loads">
		<Localization Language="en">
			<DisplayName>Loads</DisplayName>
			<Description>The loads to be controlled.</Description>
		</Localization>
		<Visible>true</Visible>
	</Param>
	<Param Name="levels">
		<Localization Language="en">
			<DisplayName>Levels</DisplayName>
			<Description>The levels to which the loads are to be set.</Description>
		</Localization>
		<SystemDefault>Level</SystemDefault>
		<Visible>true</Visible>
	</Param>
	<Param Name="rampTime">
		<Localization Language="en">
			<DisplayName>Ramp Time</DisplayName>
			<Description>The time in seconds a load takes to ramp on.</Description>
		</Localization>
		<SystemDefault>RampTime</SystemDefault>
		<Visible>true</Visible>
	</Param>
	<Param Name="offDelay">
		<Localization Language="en">
			<DisplayName>Off Delay</DisplayName>
			<Description>The amount of time which should pass before automatically turning off the loads.</Description>
		</Localization>
		<SystemDefault>OffDelay</SystemDefault>
		<Visible>true</Visible>
	</Param>
	<Param Name="offFadeTime">
		<Localization Language="en">
			<DisplayName>Off Fade Time</DisplayName>
			<Description>The time in seconds a load takes to fade off with the Auto Off</Description>
		</Localization>
		<SystemDefault>FadeTime</SystemDefault>
		<Visible>true</Visible>
	</Param>
	<Param Name="learnable">
		<Localization Language="en">
			<DisplayName>Learnable</DisplayName>
			<Description>Specifies whether the value the loads are set can be remembered when a learn trigger is received.</Description>
		</Localization>
		<SystemDefault>Learnable</SystemDefault>
		<Visible>true</Visible>
	</Param>
	<Param Name="bufferid">
		<Localization Language="en">
			<DisplayName>Buffer ID</DisplayName>
			<Description>The Unique ID to be given to the buffer that stores the loads values.</Description>
		</Localization>
		<Visible>false</Visible>
	</Param>
</FunctionInfo>
*/
procedure OnWithAutoOff(Load:loads[], Level:levels[], Seconds:rampTime, Delay:offDelay, Seconds:offFadeTime, bool:learnable, MemID:bufferid)
{
	new count = sizeof(loads);
	new i = 0;

	// Don't create buffer if not needed - Separate it out....
	if (learnable && !DoesBufferExist(bufferid))
	{
		CreateBuffer(bufferid, count, true);
		BufferSetRange(bufferid, _:levels, 0, count);
	}
	
	if (GetEvent() == Event_Learn && learnable && LoadsOff(loads) == false)
	{
		for (i = 0 ; i < count ; i++)
		{
			BufferSetAt(MemID:bufferid, i, _:Load_GetLevel(loads[i]));
		}
	}
	else if (GetEvent() != Event_Learn)
	{
		if (learnable)
		{
			for (i = 0 ; i < count ; i++)
			{
				Load_RampAutoOff(loads[i], Load_RampType_Variable, rampTime, Level:BufferGetAt(bufferid,i), Load_RampType_Variable, offFadeTime, Seconds:offDelay);
			}
		}
		else
		{
			for (i = 0 ; i < count ; i++)
			{
				Load_RampAutoOff(loads[i], Load_RampType_Variable, rampTime, levels[i], Load_RampType_Variable, offFadeTime, Seconds:offDelay);
			}			
		}
	}
}

/*
<FunctionInfo>
	<Localization Language="en">
		<DisplayName>On With Auto Learn</DisplayName>
		<Description>Turns loads on to the specified levels.  Remember the load levels if triggered for the specified learn time.</Description>
		<TitleFormat>[loads] On W/ Auto Learn</TitleFormat>
		<DisplayFormat>Turn On [loads] to specified [plural(loads,'levels','level')].  Learn if held for [learnTime] seconds.</DisplayFormat>
	</Localization>
	<BrowserClass>Toggling</BrowserClass>
	<FunctionClasses>
		<FunctionClass>ILoveQLink</FunctionClass>
	</FunctionClasses>
	<Supports>
		<QueryClass>Standard</QueryClass>
		<QueryClass>Lighting</QueryClass>
		<QueryClass>LearnedLighting</QueryClass>		
	</Supports>
	<DefaultQuery>LoadsAtLearnedLevels</DefaultQuery>
	<AdjustProcedure>AdjustLoads</AdjustProcedure>
	<LevelProcedure>AverageLoadLevel</LevelProcedure>
	<Event>Up</Event>
	<Event>Down</Event>	
	<Join>
		<Param>loads</Param>
		<Param>levels</Param>
	</Join>
	<RequiredMethods>
		<MethodName>Load_GetLevel</MethodName>
		<MethodName>Load_Ramp</MethodName>
	</RequiredMethods>
	<Param Name="loads">
		<Localization Language="en">
			<DisplayName>Loads</DisplayName>
			<Description>The loads to be controlled.</Description>
		</Localization>
		<Visible>true</Visible>
	</Param>
	<Param Name="levels">
		<Localization Language="en">
			<DisplayName>Levels</DisplayName>
			<Description>The levels to which the loads are to be set.</Description>
		</Localization>
		<SystemDefault>Level</SystemDefault>
		<Visible>true</Visible>
	</Param>
	<Param Name="rampTime">
		<Localization Language="en">
			<DisplayName>Ramp Time</DisplayName>
			<Description>The time in seconds a load takes to ramp on.</Description>
		</Localization>
		<SystemDefault>RampTime</SystemDefault>
		<Visible>true</Visible>
	</Param>
	<Param Name="learnTime">
		<Localization Language="en">
			<DisplayName>Learn Time</DisplayName>
			<Description>The time in seconds a trigger should be held before the On learns its load levels.</Description>
		</Localization>
		<DefaultValue>
			<Constant Type="float">5.0</Constant>
		</DefaultValue>		
		<Visible>true</Visible>
	</Param>	
	<Param Name="bufferid">
		<Localization Language="en">
			<DisplayName>Buffer ID</DisplayName>
			<Description>The Unique ID to be given to the buffer that stores the loads values.</Description>
		</Localization>
		<Visible>false</Visible>
	</Param>
	<Param Name="minLearnedLevel">
		<Localization Language="en"></Localization>
		<Visible>false</Visible>
		<SystemDefault>MinimumLearnedLevel</SystemDefault>		
	</Param>
</FunctionInfo>
*/
procedure OnWLearn(Load:loads[], Level:levels[], Seconds:rampTime, Seconds:learnTime, MemID:bufferid, Level:minLearnedLevel)
{
	new count = sizeof(loads);
	new i = 0;

	if (!DoesBufferExist(bufferid))
	{
		CreateBuffer(bufferid, count, true);
		BufferSetRange(bufferid, _:levels, 0, count);
	}
	
	if (GetEvent() == Event_ButtonDown )
	{
		Delay(learnTime);
		for (i = 0 ; i < count ; i++)
		{
			if (_:Load_GetLevel(loads[i]) < _:minLearnedLevel)
			{
				BufferSetAt(bufferid, i, _:minLearnedLevel);
			}
			else
			{
				BufferSetAt(MemID:bufferid, i, _:Load_GetLevel(loads[i]));
			}
		}
		sleep 250;
		new Task:object = GetCurrentTask();
		Task_SetState(object, TaskState:2);
		Delay(learnTime);
	}
	else
	{
		for (i = 0 ; i < count ; i++)
		{
			Load_Ramp(loads[i], Load_RampType_Variable, rampTime, Level:BufferGetAt(bufferid,i));
		}
	}
}

/*
<FunctionInfo>
	<Localization Language="en">
		<DisplayName>Off</DisplayName>
		<Description>Turns loads off.</Description>
		<TitleFormat>[loads] Off</TitleFormat>
		<DisplayFormat>Turn Off [loads]</DisplayFormat>
	</Localization>
	<BrowserClass>GreenToggling</BrowserClass>
	<Supports>
		<QueryClass>Standard</QueryClass>
		<QueryClass>Lighting</QueryClass>
	</Supports>
	<FunctionClasses>
		<FunctionClass>GoGreen</FunctionClass>
	</FunctionClasses>
	<DefaultQuery>LoadsOff</DefaultQuery>
	<RequiredMethods>
		<MethodName>Load_Ramp</MethodName>
	</RequiredMethods>
	<Param Name="loads">
		<Localization Language="en">
			<DisplayName>Loads</DisplayName>
			<Description>The loads to be controlled.</Description>
		</Localization>
		<Visible>true</Visible>
	</Param>
	<Param Name="rampTime">
		<Localization Language="en">
			<DisplayName>Fade Time</DisplayName>
			<Description>The time in seconds a load takes to fade off.</Description>
		</Localization>
		<SystemDefault>FadeTime</SystemDefault>
		<Visible>true</Visible>
	</Param>
</FunctionInfo>
*/
procedure Off(Load:loads[], Seconds:rampTime)
{
	BatchInvoke( Load_Ramp(Load:0, Load_RampType_Variable, rampTime, Level:0), _:loads);
}

/*
<FunctionInfo>
	<Localization Language="en">
		<DisplayName>Momentary</DisplayName>
		<Description>Turns loads on when pressed, and off when released.</Description>
		<TitleFormat>[loads] Momentary</TitleFormat>
		<DisplayFormat>Turn On [loads] when pressed and off when released</DisplayFormat>
	</Localization>
	<BrowserClass>Toggling</BrowserClass>
	<Supports>
		<QueryClass>Standard</QueryClass>
		<QueryClass>Lighting</QueryClass>
		<QueryClass>LearnedLighting</QueryClass>		
	</Supports>
	<DefaultQuery>LoadsOn</DefaultQuery>
	<Join>
		<Param>loads</Param>
		<Param>levels</Param>
	</Join>
	<Event>Up</Event>
	<Event>Down</Event>
	<RequiredMethods>
		<MethodName>Load_GetLevel</MethodName>
		<MethodName>Load_Ramp</MethodName>
	</RequiredMethods>
	<Param Name="loads">
		<Localization Language="en">
			<DisplayName>Loads</DisplayName>
			<Description>The loads to be controlled.</Description>
		</Localization>
		<Visible>true</Visible>
	</Param>
	<Param Name="levels">
		<Localization Language="en">
			<DisplayName>Levels</DisplayName>
			<Description>The levels to which the loads are to be set.</Description>
		</Localization>
		<SystemDefault>Level</SystemDefault>
		<Visible>true</Visible>
	</Param>
	<Param Name="rampTime">
		<Localization Language="en">
			<DisplayName>Ramp Time</DisplayName>
			<Description>The time in seconds a load takes to ramp on.</Description>
		</Localization>
		<SystemDefault>RampTime</SystemDefault>
		<Visible>true</Visible>
	</Param>
	<Param Name="fadeTime">
		<Localization Language="en">
			<DisplayName>Fade Time</DisplayName>
			<Description>The time in seconds a load takes to fade off.</Description>
		</Localization>
		<SystemDefault>FadeTime</SystemDefault>
		<Visible>true</Visible>
	</Param>    
	<Param Name="restorelevels">
		<Localization Language="en">
			<DisplayName>Restore Load levels</DisplayName>
			<Description>If true, the load(s) will be turned to their previous value rather than off when the button is released.</Description>
		</Localization>
		<SystemDefault>RestoreLevels</SystemDefault>
	</Param>    
</FunctionInfo>
*/
procedure Momentary(Load:loads[], Level:levels[], Seconds:rampTime, Seconds:fadeTime, bool:restorelevels)
{
	new count = sizeof(loads);
	new i = 0;
	new const MemID:bufferid = GetMemID();

	if (GetEvent() == Event_ButtonDown)
	{
		if (restorelevels)
		{
			if (!DoesBufferExist(bufferid))
			{
				CreateBuffer(bufferid, count, false);
			}
			for (i = 0 ; i < count ; i++)
			{
				BufferSetAt(bufferid, i, _:Load_GetLevel(loads[i]));
			}
		}
		for (i = 0 ; i < count ; i++)
		{
			Load_Ramp(loads[i], Load_RampType_Variable, rampTime, levels[i]);
		}
	}
	else if (GetEvent() == Event_ButtonUp)
	{
		if (DoesBufferExist(bufferid))
		{
			for (i = 0 ; i < count ; i++)
			{
				Load_Ramp(loads[i], Load_RampType_Variable, fadeTime, Level:BufferGetAt(bufferid,i));
			}
			DestroyBuffer(bufferid);
		}
		else
		{
			BatchInvoke( Load_Ramp(Load:0, Load_RampType_Variable, fadeTime, Level:0), _:loads);
		}
	}
}

/*
<FunctionInfo>
	<Localization Language="en">
		<DisplayName>Flash</DisplayName>
		<Description>Flashes the loads.  A maximum of 100 loads can be used per Flash procedure.  This is a blocking procedure.</Description>
		<TitleFormat>[loads] Flash</TitleFormat>
		<DisplayFormat>Flash [loads].</DisplayFormat>
	</Localization>
	<BrowserClass>Toggling</BrowserClass>
	<FunctionClasses>
		<FunctionClass>Blocking</FunctionClass>
	</FunctionClasses>	
	<Supports>
		<QueryClass>Standard</QueryClass>
		<QueryClass>Lighting</QueryClass>
	</Supports>
	<DefaultQuery>LoadsOn</DefaultQuery>
	<Join>
		<Param>loads</Param>
		<Param>levels</Param>
	</Join>
	<RequiredMethods>
		<MethodName>Load_GetLevel</MethodName>
		<MethodName>Load_Ramp</MethodName>
	</RequiredMethods>
	<Param Name="loads">
		<Localization Language="en">
			<DisplayName>Loads</DisplayName>
			<Description>The loads to be controlled.</Description>
		</Localization>
		<Visible>true</Visible>
		<ValidRange>
			<UpperBound Type="int">100</UpperBound>
		</ValidRange>
	</Param>
	<Param Name="levels">
		<Localization Language="en">
			<DisplayName>Levels</DisplayName>
			<Description>The levels to which the loads are to be set.</Description>
		</Localization>
		<SystemDefault>Level</SystemDefault>
		<Visible>true</Visible>
	</Param>
	<Param Name="rampTime">
		<Localization Language="en">
			<DisplayName>Ramp Time</DisplayName>
			<Description>The time in seconds a load takes to ramp on.</Description>
		</Localization>
		<SystemDefault>RampTime</SystemDefault>
		<Visible>true</Visible>
	</Param>
	<Param Name="fadeTime">
		<Localization Language="en">
			<DisplayName>Fade Time</DisplayName>
			<Description>The time in seconds a load takes to fade off.</Description>
		</Localization>
		<SystemDefault>FadeTime</SystemDefault>
		<Visible>true</Visible>
	</Param>
 	<Param Name="flashRate">
		<Localization Language="en">
			<DisplayName>Flash Rate</DisplayName>
			<Description>The rate at which the loads will turn on or off.</Description>
		</Localization>
		<Visible>true</Visible>
		<DefaultValue>
			<Constant Type="float">1.0</Constant>
		</DefaultValue>
	</Param>
 	<Param Name="restoreLevels">
		<Localization Language="en">
			<DisplayName>Restore Load levels</DisplayName>
			<Description>If true, the load(s) will be turned to their previous value rather than off when the flash is stopped.</Description>
		</Localization>
		<Visible>true</Visible>
		<SystemDefault>RestoreLevels</SystemDefault>
	</Param>
</FunctionInfo>
*/
procedure Flash(Load:loads[], Level:levels[], Delay:flashRate, Seconds:rampTime, Seconds:fadeTime, bool:restoreLevels)
{	
	new initialEventCount = GetEventCount();
	new count = sizeof(loads);
	if (count > 100)
	{
		count = 100;
	}

	new Level:prevLevels[100];
	new Seconds:tempRate = 0;
	new bool:flashRunning = true;
	new bool:loadsOn = false;

	if (restoreLevels)
	{
		for (new i = 0 ; i < count ; i++)
		{
			prevLevels[i] = Load_GetLevel(loads[i]);
		}
	}

	if (flashRate < Delay:50)
	{
		flashRate = Delay:50;
	}

	while (flashRunning)
	{
		tempRate = Seconds:flashRate; // We need to reassign this each cycle because WaitForEvent sets it to 0.
		WaitForEvent(Seconds:tempRate);

		if (initialEventCount != GetEventCount())
		{
			flashRunning = false;
			GetNextEvent();
		}

		if (flashRunning)
		{
			if (loadsOn)
			{
				loadsOn=false;
				BatchInvoke( Load_Ramp(Load:0, Load_RampType_Variable, fadeTime, Level:0), _:loads);
			}
			else
			{
				loadsOn=true;
				for (new i = 0 ; i < count ; i++)
				{
					Load_Ramp(loads[i],Load_RampType_Variable,rampTime,levels[i]);
				}
			}
		}
		else
		{
			if (restoreLevels)
			{
				for (new i = 0 ; i < count ; i++)
				{
					Load_Ramp(loads[i],Load_RampType_Variable,fadeTime,prevLevels[i]);
				}
			}
			else
			{
				BatchInvoke( Load_Ramp(Load:0, Load_RampType_Variable, rampTime, Level:0), _:loads);
			}
		}
	}		
}?>
    </Object>
    <Object>
      <Script VID="10170" Master="9722" MTime="">
        <Name>Programming\MiscTasks.sma</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Script</ObjectType>
      </Script>
      <?File / 
/*
MiscTasks.sma - Task Procedure Library
Copyright (c) 2012, Vantage Controls, Inc.
Version 0.5

ENUMS:
	MEventType

FUNCTIONS:
	MEventType:GetEventType

PROCEDURES:
	StopTasks
	LockTasks
	UnlockTasks

QUERIES:
	bool:TaskIsRunning
	bool:TaskIsNotRunning

*/

#if defined _MiscTasks_included
  #endinput
#endif

#define _MiscTasks_included

#include <task>
#include <vantage>
#include <fixed>
#include <object>

#define NOTHING 0

/*
<EnumInfo>
	<Localization Language="en">
		<DisplayName>Trigger Type</DisplayName>
		<Description>The type of trigger that can launch a task.</Description>
		<Category>None</Category>
	</Localization>
	<IsLEDStyleType>False</IsLEDStyleType>
	<Localizable>false</Localizable>
    <Enumerator Name="ButtonRelease">
        <Localization Language="en">
            <DisplayName>Button Release</DisplayName>
        </Localization>
    </Enumerator>
    <Enumerator Name="ButtonPress">
        <Localization Language="en">
            <DisplayName>Button Press</DisplayName>
        </Localization>
    </Enumerator>
    <Enumerator Name="ButtonHold">
        <Localization Language="en">
            <DisplayName>Button Hold</DisplayName>
        </Localization>
    </Enumerator>
    <Enumerator Name="InRange">
        <Localization Language="en">
            <DisplayName>In Range</DisplayName>
        </Localization>
    </Enumerator>
    <Enumerator Name="OutOfRange">
        <Localization Language="en">
            <DisplayName>Out Of Range</DisplayName>
        </Localization>
    </Enumerator>
    <Enumerator Name="DayMode">
        <Localization Language="en">
            <DisplayName>Day Mode</DisplayName>
        </Localization>
    </Enumerator>
    <Enumerator Name="FanMode">
        <Localization Language="en">
            <DisplayName>Fan Mode</DisplayName>
        </Localization>
    </Enumerator>
	<Enumerator Name="OperationMode">
        <Localization Language="en">
            <DisplayName>Operation Mode</DisplayName>
        </Localization>
    </Enumerator>
	<Enumerator Name="Tap">
        <Localization Language="en">
            <DisplayName>Tap</DisplayName>
        </Localization>
    </Enumerator>
	<Enumerator Name="TapRelease">
        <Localization Language="en">
            <DisplayName>Tap Release</DisplayName>
        </Localization>
    </Enumerator>
	<Enumerator Name="TT_Learn">
        <Localization Language="en">
            <DisplayName>Learn</DisplayName>
        </Localization>
    </Enumerator>
	<Enumerator Name="Write">
        <Localization Language="en">
            <DisplayName>Write</DisplayName>
        </Localization>
    </Enumerator>
	<Enumerator Name="OverTemp">
        <Localization Language="en">
            <DisplayName>OverTemp</DisplayName>
        </Localization>
    </Enumerator>
	<Enumerator Name="OverloadLine">
        <Localization Language="en">
            <DisplayName>Overload Line</DisplayName>
        </Localization>
    </Enumerator>
	<Enumerator Name="OverloadModule">
        <Localization Language="en">
            <DisplayName>Overload Module</DisplayName>
        </Localization>
    </Enumerator>
	<Enumerator Name="MissingLine">
        <Localization Language="en">
            <DisplayName>Missing Line</DisplayName>
        </Localization>
    </Enumerator>
	<Enumerator Name="Adjust">
        <Localization Language="en">
            <DisplayName>Adjust</DisplayName>
        </Localization>
    </Enumerator>
	<Enumerator Name="Activate">
        <Localization Language="en">
            <DisplayName>Activate</DisplayName>
        </Localization>
    </Enumerator>
</EnumInfo>
*/
enum TriggerType
{
	Cancel			= -2,
	None			= -1,
	ButtonRelease	= 0,
	ButtonPress		= 1,
	ButtonHold		= 2,
	Timer			= 3,
	Data			= 4,
	Position		= 5,
	InRange			= 6,
	OutOfRange		= 7,
	Temperature		= 8,
	DayMode			= 9,
	FanMode			= 10,
	OperationMode	= 11,
	TT_Learn		= 15,
	Tap				= 16,
	TapRelease		= 17,
	Write			= 18,
	Adjust			= 19,
	Activate		= 20,
	OverTemp		= 40960,
	//OverloadLoad	= 40961,
	OverloadLine	= 40962,
	OverloadModule	= 40963,
	MissingLine		= 40964//,
	//BulbChange		= 40965
};

/*
<EnumInfo>
	<Localization Language="en">
		<DisplayName>LED Cycle Direction</DisplayName>
		<Description>The direction a Cycle LED State procedure will perform.</Description>
		<Category>None</Category>
	</Localization>
	<IsLEDStyleType>False</IsLEDStyleType>
    <Enumerator Name="CycleDirection_Increasing">
        <Localization Language="en">
            <DisplayName>Increasing</DisplayName>
        </Localization>
    </Enumerator>
    <Enumerator Name="CycleDirection_Decreasing">
        <Localization Language="en">
            <DisplayName>Decreasing</DisplayName>
        </Localization>
    </Enumerator>
</EnumInfo>
*/
enum CycleDirection
{
	CycleDirection_Increasing,
	CycleDirection_Decreasing
};

/*
<FunctionInfo>
	<Localization Language="en">
		<DisplayName>Set LED State</DisplayName>
		<Description>Sets the LED state of the task in which the procedure resides.</Description>
		<TitleFormat>Set LED State</TitleFormat>
		<DisplayFormat>Set LED State to [state]</DisplayFormat>
	</Localization>
	<BrowserClass>LEDInterface</BrowserClass>
	<FunctionClasses>
		<FunctionClass>Objectless</FunctionClass>
	</FunctionClasses>
	<DefaultQuery>None</DefaultQuery>
	<RequiredMethods>
		<MethodName>Task_SetState</MethodName>
	</RequiredMethods>
	<Param Name="state">
		<Localization Language="en">
			<DisplayName>State</DisplayName>
			<Description>The New LED State.</Description>
		</Localization>
		<DefaultValue>
			<Constant>1</Constant>
		</DefaultValue>
		<ValidRange>
			<LowerBound>1</LowerBound>
		</ValidRange>
	</Param>
</FunctionInfo>
*/
procedure SetTheLEDState(Number:state)
{
	sleep 250;
	new tempState = _:state - 1;
	if (tempState == -1) tempState = 0;
	new Task:object = GetCurrentTask();
	Task_SetState(object, TaskState:tempState);
}

/*
<FunctionInfo>
	<Localization Language="en">
		<DisplayName>Set Task LED State</DisplayName>
		<Description>Sets the LED state of the specified tasks.</Description>
		<TitleFormat>Set LED State</TitleFormat>
		<DisplayFormat>Set LED State of [objects] to [state]</DisplayFormat>
	</Localization>
	<BrowserClass>LEDInterface</BrowserClass>
	<DefaultQuery>None</DefaultQuery>
	<RequiredMethods>
		<MethodName>Task_SetState</MethodName>
	</RequiredMethods>
	<Param Name="objects">
		<Localization Language="en">
			<DisplayName>Tasks</DisplayName>
			<Description>The tasks to be modified.</Description>
		</Localization>
	</Param>
	<Param Name="state">
		<Localization Language="en">
			<DisplayName>State</DisplayName>
			<Description>The New LED State.</Description>
		</Localization>
		<DefaultValue>
			<Constant>1</Constant>
		</DefaultValue>
		<ValidRange>
			<LowerBound>1</LowerBound>
		</ValidRange>
	</Param>
</FunctionInfo>
*/
procedure SetTaskLEDState(Task:objects[], Number:state)
{
	sleep 250;
	new tempState = _:state - 1;
	if (tempState == -1)
	{
		tempState = 0;
	}

	new count = sizeof(objects);
	for (new i = 0; i < count ; i++)
	{
		Task_SetState(objects[i], TaskState:tempState);
	}
}

/*
<FunctionInfo>
	<Localization Language="en">
		<DisplayName>Stop Tasks</DisplayName>
		<Description>This procedure stops the specified tasks if they are running.</Description>
		<TitleFormat>[tasks] Stop</TitleFormat>
		<DisplayFormat>Stop [tasks]</DisplayFormat>
	</Localization>
	<BrowserClass>Tasks</BrowserClass>
	<Supports>
		<QueryClass>Standard</QueryClass>
		<QueryClass>Tasks</QueryClass>
	</Supports>
	<DefaultQuery>TaskIsRunning</DefaultQuery>
	<RequiredMethods>
		<MethodName>Task_Stop</MethodName>
	</RequiredMethods>
	<Param Name="tasks">
		<Localization Language="en">
			<DisplayName>Tasks</DisplayName>
			<Description>The tasks to be stopped.</Description>
		</Localization>
	</Param>
</FunctionInfo>
*/
procedure StopTasks(Task:tasks[])
{
    new count = sizeof(tasks);
    for (new i = 0; i < count ; i++)
    {
        Task_Stop(tasks[i]);
    }
}

/*
<FunctionInfo>
	<Localization Language="en">
		<DisplayName>Lock Tasks</DisplayName>
		<Description>This procedure locks the tasks and stops them from being executed.</Description>
		<TitleFormat>[objects] Lock</TitleFormat>
		<DisplayFormat>Lock [objects]</DisplayFormat>
	</Localization>
	<BrowserClass>None</BrowserClass>
	<FunctionClasses>
		<FunctionClass>Retired</FunctionClass>
    </FunctionClasses>
	<Supports>
		<QueryClass>Standard</QueryClass>
		<QueryClass>Tasks</QueryClass>
	</Supports>
	<DefaultQuery>TaskIsRunning</DefaultQuery>
	<Param Name="objects">
		<Localization Language="en">
			<DisplayName>Tasks</DisplayName>
			<Description>The tasks to lock.</Description>
		</Localization>
	</Param>
</FunctionInfo>
*/
procedure LockTasks(Task:objects[])
{
    new count = sizeof(objects);

    for (new i = 0 ; i < count ; i++)
    {
        LockObject(VID:objects[i]);
    }
}

/*
<FunctionInfo>
	<Localization Language="en">
		<DisplayName>Is Task Locked</DisplayName>
		<Description>Reports 'True' if the task is locked and 'False' otherwise.</Description>
		<QueryDescription>LED is On if the button is locked and Off otherwise.</QueryDescription>
		<TitleFormat>Is Task Locked</TitleFormat>
		<DisplayFormat>Is [object] locked</DisplayFormat>
	</Localization>
	<BrowserClass>None</BrowserClass>
	<FunctionClasses>
		<FunctionClass>Retired</FunctionClass>
    </FunctionClasses>
	<Param Name="object">
		<Localization Language="en">
			<DisplayName>Task</DisplayName>
			<Description>The task to check.</Description>
		</Localization>
		<Visible>true</Visible>
	</Param>
</FunctionInfo>
*/
public bool:TaskIsLocked(Task:object)
{
    return IsObjectLocked(VID:object);
}

/*
<FunctionInfo>
	<Localization Language="en">
		<DisplayName>Unlock Tasks</DisplayName>
		<Description>This procedure unlocks the tasks and allows them to be executed.</Description>
		<TitleFormat>[objects] Unlock</TitleFormat>
		<DisplayFormat>Unlock [objects]</DisplayFormat>
	</Localization>
	<BrowserClass>None</BrowserClass>
	<FunctionClasses>
		<FunctionClass>Retired</FunctionClass>
    </FunctionClasses>
	<Supports>
		<QueryClass>Standard</QueryClass>
		<QueryClass>Tasks</QueryClass>
	</Supports>
	<DefaultQuery>TaskIsRunning</DefaultQuery>
	<Param Name="objects">
		<Localization Language="en">
			<DisplayName>Tasks</DisplayName>
			<Description>The Tasks to unlock.</Description>
		</Localization>
	</Param>
</FunctionInfo>
*/
procedure UnlockTasks(Task:objects[])
{
    new count = sizeof(objects);

    for (new i = 0 ; i < count ; i++)
    {
        UnlockObject(VID:objects[i]);
    }
}

/*
<FunctionInfo>
	<Localization Language="en">
		<DisplayName>Blocking Task is Active</DisplayName>
		<Description>Reports true if the specified task is currently running.</Description>
		<QueryDescription>LED is on when the task is Active.  LED is off for all other cases.</QueryDescription>
		<TitleFormat>Task is Active</TitleFormat>
		<DisplayFormat>[objects] Is Active.</DisplayFormat>
	</Localization>
	<QueryClass>Tasks</QueryClass>
	<RequiredMethods>
		<MethodName>Task_IsRunning</MethodName>
	</RequiredMethods>
	<Param Name="objects">
		<Localization Language="en">
			<DisplayName>Tasks</DisplayName>
			<Description>The tasks whose states are to be verified.</Description>
		</Localization>
	</Param>
</FunctionInfo>
*/
query bool:TaskIsRunning(Task:objects[])
{
	new count = sizeof(objects);
	new Task:object = GetCurrentTask();

	if (count > 0)
	{
		for (new i = 0 ; i < count ; i++)
		{
			if (!Task_IsRunning(objects[i]))
			{
				return false;
			}
		}
		return true;
	}
	return Task_IsRunning(object);
}

/*
<FunctionInfo>
	<Localization Language="en">
		<DisplayName>Task is Not Active</DisplayName>
		<Description>Reports true if the specified task is not currently running.</Description>
		<QueryDescription>LED is on when the task is not active.  LED is off for all other cases.</QueryDescription>
		<TitleFormat>Task is Not Active</TitleFormat>
		<DisplayFormat>LED Will Be On when [objects] Is Not Active.</DisplayFormat>
	</Localization>
	<QueryClass>Tasks</QueryClass>
	<RequiredMethods>
		<MethodName>Task_IsRunning</MethodName>
	</RequiredMethods>
	<Param Name="objects">
		<Localization Language="en">
			<DisplayName>Tasks</DisplayName>
			<Description>The tasks whose states are to be verified.</Description>
		</Localization>
	</Param>
</FunctionInfo>
*/
query bool:TaskIsNotRunning(Task:objects[])
{
	return !Task_IsRunning(objects[0]);
}

/*
<FunctionInfo>
	<Localization Language="en">
		<DisplayName>Task LED State</DisplayName>
		<Description>Reports the LED state a task is reporting.</Description>
		<TitleFormat>Task LED State</TitleFormat>
		<DisplayFormat>The LED state of [object]</DisplayFormat>
	</Localization>
	<BrowserClass>Tasks</BrowserClass>
	<CompareInfo>
		<IsStrict>false</IsStrict>
	</CompareInfo>
	<RequiredMethods>
		<MethodName>Task_GetState</MethodName>
	</RequiredMethods>
	<Param Name="object">
		<Localization Language="en">
			<DisplayName>Task </DisplayName>
			<Description>The task whose state is to be reported.</Description>
		</Localization>
		<Visible>true</Visible>
	</Param>
	<Return>
		<ValidRange>
			<LowerBound Type="int">0</LowerBound>
			<UpperBound Type="int">100</UpperBound>
		</ValidRange>
	</Return>
</FunctionInfo>
*/
stock Number:TaskLEDState(Task:object)
{
	return (Number:Task_GetState(object) + Number:1);
}

/*
<FunctionInfo>
	<Localization Language="en">
			<DisplayName>Cycle LED State</DisplayName>
			<Description>Cycles the led states through the given range.</Description>
			<TitleFormat>Cycle LED State</TitleFormat>
			<DisplayFormat>Cycle the LED through [stateCount] states</DisplayFormat>
	</Localization>
	<BrowserClass>Tasks</BrowserClass>
	<FunctionClasses>
		<FunctionClass>Objectless</FunctionClass>
	</FunctionClasses>
	<RequiredMethods>
		<MethodName>Task_GetState</MethodName>
		<MethodName>Task_SetState</MethodName>
	</RequiredMethods>
	<Param Name="stateCount">
		<Localization Language="en">
			<DisplayName>State Count</DisplayName>
			<Description>The number of states through which to cycle.</Description>
		</Localization>
		<DefaultValue>
			<Constant Type="int">2</Constant>
		</DefaultValue>
		<ValidRange>
			<LowerBound Type="int">2</LowerBound>
			<UpperBound Type="int">256</UpperBound>
		</ValidRange>
	</Param>
	<Param Name="cycleDirection">
		<Localization Language="en">
			<DisplayName>Direction</DisplayName>
			<Description>The direction of the cycle.</Description>
		</Localization>
	</Param>
</FunctionInfo>
*/
procedure CycleLEDState(Number:stateCount, CycleDirection:cycleDirection)
{
	new Number:currentState = Number:Task_GetState(Task:GetCurrentTask());
	if (cycleDirection == CycleDirection_Increasing)
	{
		currentState += Number:1;
		if (currentState >= stateCount)
		{
			currentState = Number:0;
		}
	}
	else
	{
		currentState -= Number:1;
		if (currentState < Number:0)
		{
			currentState = stateCount - Number:1;
		}
	}
	Task_SetState(Task:GetCurrentTask(), TaskState:currentState);
}

/*
<FunctionInfo>
	<Localization Language="en">
		<DisplayName>Task State</DisplayName>
		<Description>Reports the LED state of the specified task.</Description>
		<QueryDescription>LED state of this task will be set to the LED state of the specified task.</QueryDescription>
		<TitleFormat>LED State of Task</TitleFormat>
		<DisplayFormat>LED will be set to the state of [objects].</DisplayFormat>
	</Localization>
	<QueryClass>Tasks</QueryClass>
	<RequiredMethods>
		<MethodName>Task_GetState</MethodName>
	</RequiredMethods>
	<Param Name="objects">
		<Localization Language="en">
			<DisplayName>Tasks</DisplayName>
			<Description>The tasks whose states are to be used.</Description>
		</Localization>
	</Param>
</FunctionInfo>
*/
query Number:TaskQueryState(Task:objects[])
{
	return Number:Task_GetState(objects[0]);
}

/*
<FunctionInfo>
	<Localization Language="en">
		<DisplayName>Trigger Type</DisplayName>
		<Description>Reports the trigger that triggered the task.</Description>
		<QueryDescription>LED will correspond with the current trigger type.</QueryDescription>
		<TitleFormat>Trigger Type</TitleFormat>
		<DisplayFormat>Trigger Type</DisplayFormat>
	</Localization>
	<RequiredMethods>
		<MethodName>Task_GetState</MethodName>
	</RequiredMethods>
	<FunctionClasses>
		<FunctionClass>TriggerCheck</FunctionClass>
		<FunctionClass>CreatesTrigger</FunctionClass>
	</FunctionClasses>
	<BrowserClass>Tasks</BrowserClass>
</FunctionInfo>
*/
stock TriggerType:GetEventType()
{
	return TriggerType:GetEvent();
}

/*
<FunctionInfo>
	<Localization Language="en">
		<DisplayName>Trigger Param 1</DisplayName>
		<Description>Reports the value of the first trigger parameter passed to the task.</Description>
		<QueryDescription>Task Param 1</QueryDescription>
		<TitleFormat>Task Param 1</TitleFormat>
		<DisplayFormat>Task Param 1</DisplayFormat>
	</Localization>
	<BrowserClass>Tasks</BrowserClass>
</FunctionInfo>
*/
stock Number:Wrapper_GetEventParam1()
{
	return Number:GetEventParam1();
}

/*
<FunctionInfo>
	<Localization Language="en">
		<DisplayName>Trigger Param 2</DisplayName>
		<Description>Reports the value of the second trigger parameter passed to the task.</Description>
		<QueryDescription>Task Param 2</QueryDescription>
		<TitleFormat>Task Param 2</TitleFormat>
		<DisplayFormat>Task Param 2</DisplayFormat>
	</Localization>
	<BrowserClass>Tasks</BrowserClass>
</FunctionInfo>
*/
stock Number:Wrapper_GetEventParam2()
{
	return GetEventParam2();
}

/*
<FunctionInfo>
	<Localization Language="en">
		<DisplayName>Task Trigger Source</DisplayName>
		<Description>Reports the object which launched this task.</Description>
		<QueryDescription>Task Trigger Source</QueryDescription>
		<TitleFormat>Task Trigger Source</TitleFormat>
		<DisplayFormat>Task Trigger Source</DisplayFormat>
	</Localization>
	<BrowserClass>Tasks</BrowserClass>
</FunctionInfo>
*/
stock Button:Wrapper_GetEventSource()
{
	return GetEventSource();
}

/*
<FunctionInfo>
	<Localization Language="en">
		<DisplayName>Refresh Memory</DisplayName>
		<Description>Refreshes the value of any variable used in the task.</Description>
		<TitleFormat>Refresh Memory</TitleFormat>
		<DisplayFormat>Refresh Memory</DisplayFormat>
	</Localization>
	<BrowserClass>None</BrowserClass>
</FunctionInfo>
*/
procedure RefreshTaskMemory()
{
	FetchMemory();
}

/*
<FunctionInfo>
	<Localization Language="en">
		<DisplayName>Commit Memory</DisplayName>
		<Description>Commits the value of any variable used in the task to memory.</Description>
		<TitleFormat>Commit Memory</TitleFormat>
		<DisplayFormat>Commit Memory</DisplayFormat>
	</Localization>
	<BrowserClass>None</BrowserClass>
</FunctionInfo>
*/
procedure CommitTaskMemory()
{
	CommitMemory();
}

/*
<FunctionInfo>
	<Localization Language="en">
		<DisplayName>Use Button Down Event</DisplayName>
		<Description>Ensures that the task will be sent the Button Down Event.</Description>
		<QueryDescription></QueryDescription>
		<TitleFormat>Use The Button Down Event</TitleFormat>
		<DisplayFormat>Use The Button Down Event</DisplayFormat>
	</Localization>
	<BrowserClass>None</BrowserClass>
	<FunctionClasses>
		<FunctionClass>Objectless</FunctionClass>
		<FunctionClass>CreatesTrigger</FunctionClass>
	</FunctionClasses>
	<Event>Down</Event>
</FunctionInfo>
*/
procedure UseButtonDownEvent()
{
}

/*
<FunctionInfo>
	<Localization Language="en">
		<DisplayName>Use Button Up Event</DisplayName>
		<Description>Ensures that the task will be sent the Button Up Event.</Description>
		<QueryDescription></QueryDescription>
		<TitleFormat>Use The Button Up Event</TitleFormat>
		<DisplayFormat>Use The Button Up Event</DisplayFormat>
	</Localization>
	<BrowserClass>None</BrowserClass>
	<FunctionClasses>
		<FunctionClass>Objectless</FunctionClass>
		<FunctionClass>CreatesTrigger</FunctionClass>
	</FunctionClasses>
	<Event>Up</Event>
</FunctionInfo>
*/
procedure UseButtonUpEvent()
{
}

/*
<FunctionInfo>
	<Localization Language="en">
		<DisplayName>Use Button Hold Event</DisplayName>
		<Description>Ensures that the task will be sent the Button Hold Event.</Description>
		<QueryDescription></QueryDescription>
		<TitleFormat>Use The Button Hold Event</TitleFormat>
		<DisplayFormat>Use The Button Hold Event</DisplayFormat>
	</Localization>
	<BrowserClass>None</BrowserClass>
	<FunctionClasses>
		<FunctionClass>Objectless</FunctionClass>
		<FunctionClass>CreatesTrigger</FunctionClass>
	</FunctionClasses>
	<Event>Hold</Event>
</FunctionInfo>
*/
procedure UseButtonHoldEvent()
{
}

/*
<FunctionInfo>
	<Localization Language="en">
		<DisplayName>Use Timer Event</DisplayName>
		<Description>Ensures that the task will be sent the Timer Event.</Description>
		<QueryDescription></QueryDescription>
		<TitleFormat>Use The Timer Event</TitleFormat>
		<DisplayFormat>Use The Timer Event</DisplayFormat>
	</Localization>
	<BrowserClass>None</BrowserClass>
	<FunctionClasses>
		<FunctionClass>Objectless</FunctionClass>
		<FunctionClass>CreatesTrigger</FunctionClass>
	</FunctionClasses>
	<Event>Timer</Event>
</FunctionInfo>
*/
procedure UseTimerEvent()
{
}

/*
<FunctionInfo>
	<Localization Language="en">
		<DisplayName>Lock</DisplayName>
		<Description>Locks the specified Object</Description>
		<QueryDescription/>
		<TitleFormat>[objects] Lock</TitleFormat>
		<DisplayFormat>[objects] Lock</DisplayFormat>
		<QueryDisplayFormat/>
	</Localization>
	<BrowserClass>Object</BrowserClass>
	<Supports>
		<QueryClass>Object</QueryClass>
	</Supports>
	<Param Name="objects">
		<Localization Language="en">
			<DisplayName>Objects</DisplayName>
			<Description>The objects to be locked</Description>
		</Localization>
		<Visible>true</Visible>
		<ContainsResult>false</ContainsResult>
	</Param>
</FunctionInfo>
*/
procedure LockObjects(Object:objects[])
{
	BatchInvoke(Object_Lock(Object:0), _:objects);
}

/*
<FunctionInfo>
	<Localization Language="en">
		<DisplayName>Unlock</DisplayName>
		<Description>Unlocks the specified Object</Description>
		<TitleFormat>[objects] Unlock</TitleFormat>
		<DisplayFormat>[objects] Unlock</DisplayFormat>
	</Localization>
	<BrowserClass>Object</BrowserClass>
	<Supports>
		<QueryClass>Object</QueryClass>
	</Supports>
	<Param Name="objects">
		<Localization Language="en">
			<DisplayName>Objects</DisplayName>
			<Description>The objects to be unlocked</Description>
		</Localization>
		<Visible>true</Visible>
		<ContainsResult>false</ContainsResult>
	</Param>
</FunctionInfo>
*/
procedure UnlockObjects(Object:objects[])
{
	BatchInvoke(Object_Unlock(Object:0), _:objects);
}?>
    </Object>
    <Object>
      <Script VID="10171" Master="9722" MTime="">
        <Name>Programming\LaunchTasks.sma</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Script</ObjectType>
      </Script>
      <?File / 
/*
LaunchTasks.sma - Task Procedure Library
Copyright (c) 2012, Vantage Controls, Inc.
Version 0.4

ENUMS:
	
FUNCTIONS:
	
PROCEDURES:
	LaunchTask
	LaunchTaskWithCurrentEvent
	PressAndHold
	Hold
	MultiPress
	ToggleScenes
	
QUERIES:
	
*/

#if defined _LaunchTasks_included
  #endinput
#endif

#define _LaunchTasks_included

#include <task>
#include "MiscTasks.sma"

#define NOTHING 0

/*
<FunctionInfo>
	<Localization Language="en">
		<DisplayName>Launch Tasks With Specified Trigger</DisplayName>
		<Description>Launches preexisting tasks with the specified trigger.</Description>
		<TitleFormat>[tasks] Launch Tasks</TitleFormat>
		<DisplayFormat>Launch [tasks] with the [eventType] Trigger</DisplayFormat>
	</Localization>
	<BrowserClass>Tasks</BrowserClass>
	<FunctionClasses>
		<FunctionClass>TaskLoopCandidate</FunctionClass>
	</FunctionClasses>		
	<Supports>
		<QueryClass>Standard</QueryClass>
		<QueryClass>Tasks</QueryClass>
	</Supports>				
	<DefaultQuery>TaskQueryState</DefaultQuery>
	<RequiredMethods>
		<MethodName>Task_Start</MethodName>
	</RequiredMethods>
	<Param Name="tasks">
		<Localization Language="en">
			<DisplayName>Tasks</DisplayName>
			<Description>The tasks to be launched.</Description>
		</Localization>
	</Param>
	<Param Name="eventType">
		<Localization Language="en">
			<DisplayName>Trigger Type</DisplayName>
			<Description>The trigger to be used when launching the tasks.</Description>
		</Localization>
		<SystemDefault>TriggerType</SystemDefault>
	</Param>
	<Param Name="param1">
		<Localization Language="en">
			<DisplayName>Trigger Parameter</DisplayName>
			<Description>The parameter associated with the trigger type.
  For the Button Pressed, Button Hold and Button Released triggers, this is the press count.
  For the Timer trigger, this is the type of timer.
  For the Day Mode trigger, this is the current day mode.
  For the Fan Mode trigger, this is the current fan mode.
  For the Operation Mode trigger, this is the current operation mode.
  For the Timer trigger, this is the type of timer, 0 for standard and 1 for task.</Description>
		</Localization>
	</Param>
</FunctionInfo>
*/
procedure LaunchTask(Task:tasks[], TriggerType:eventType, param1)
{
	new count = sizeof(tasks);
	new sourceObject = GetEventSource();
	
	for (new i = 0 ; i < count ; i++)
	{
		Task_Start(tasks[i], sourceObject, _:eventType, param1, NOTHING);
	}
}

/*
<FunctionInfo>
	<Localization Language="en">
		<DisplayName>Launch Tasks</DisplayName>
		<Description>Launches preexisting tasks with the trigger received by the launching task.</Description>
		<TitleFormat>[tasks] Launch Tasks With Current Trigger</TitleFormat>
		<DisplayFormat>Launch [tasks]</DisplayFormat>
	</Localization>
	<BrowserClass>Tasks</BrowserClass>
	<FunctionClasses>
		<FunctionClass>TaskLoopCandidate</FunctionClass>
	</FunctionClasses>		
	<Supports>
		<QueryClass>Standard</QueryClass>
		<QueryClass>Tasks</QueryClass>
	</Supports>				
	<DefaultQuery>TaskQueryState</DefaultQuery>
	<RequiredMethods>
		<MethodName>Task_Start</MethodName>
	</RequiredMethods>
	<Param Name="tasks">
		<Localization Language="en">
			<DisplayName>Tasks</DisplayName>
			<Description>The tasks to be launched.</Description>
		</Localization>
	</Param>
</FunctionInfo>
*/
procedure LaunchTaskWithCurrentEvent(Task:tasks[])
{
	new count = sizeof(tasks);
	new sourceObject = GetEventSource();
	
	for (new i = 0 ; i < count ; i++)
	{
		Task_Start(tasks[i], sourceObject, _:GetEvent(), GetEventParam1(), GetEventParam2());
	}
}

/*
<FunctionInfo>
	<Localization Language="en">
		<DisplayName>Press and Hold</DisplayName>
		<Description>Launches specific preexisting tasks when the button is pressed and released, and other preexisting tasks when the button pressed and held for one second.</Description>
		<TitleFormat>Launch [pressTasks] On Press And [holdTasks] On Hold</TitleFormat>
		<DisplayFormat>Launch [pressTasks] when Pressed and [holdTasks] when Held for 1 second.</DisplayFormat>
	</Localization>
	<BrowserClass>Tasks</BrowserClass>
	<FunctionClasses>
		<FunctionClass>TaskLoopCandidate</FunctionClass>
	</FunctionClasses>		
	<Supports>
		<QueryClass>Standard</QueryClass>
		<QueryClass>Tasks</QueryClass>
	</Supports>
	<DefaultQuery>TaskQueryState</DefaultQuery>
	<Event>Hold</Event>
	<Event>Up</Event>
	<Event>Down</Event>
	<RequiredMethods>
		<MethodName>Task_Start</MethodName>
	</RequiredMethods>
	<Param Name="pressTasks">
		<Localization Language="en">
			<DisplayName>Press Tasks</DisplayName>
			<Description>The tasks to be launched when the button is pressed and released.</Description>
		</Localization>
	</Param>
	<Param Name="holdTasks">
		<Localization Language="en">
			<DisplayName>Hold Tasks</DisplayName>
			<Description>The tasks to be launched when the button is pressed and held.</Description>
		</Localization>
	</Param>
	<Param Name="pressEventType">
		<Localization Language="en">
			<DisplayName>Press Trigger Type</DisplayName>
			<Description>The trigger to be used when launching the press tasks.</Description>
		</Localization>
		<SystemDefault>TriggerType</SystemDefault>
	</Param>
	<Param Name="holdEventType">
		<Localization Language="en">
			<DisplayName>Hold Trigger Type</DisplayName>
			<Description>The trigger to be used when launching the hold tasks.</Description>
		</Localization>
		<SystemDefault>TriggerType</SystemDefault>
	</Param>
</FunctionInfo>
*/
procedure PressAndHold(Task:pressTasks[],Task:holdTasks[], TriggerType:pressEventType, TriggerType:holdEventType)
{
	new pressCount = sizeof(pressTasks);
	new holdCount = sizeof(holdTasks);
	new sourceObject = GetEventSource();
	static bool:holdOccurred =  false;
	
	if (GetEvent() == Event_ButtonHold)
	{
		holdOccurred = true;
		for (new i = 0 ; i < holdCount ; i++)
		{
			Task_Start(holdTasks[i], sourceObject, _:holdEventType, NOTHING, NOTHING);
		}
	}
	else if (GetEvent() == Event_ButtonUp)
	{
		if (holdOccurred)
		{
			holdOccurred = false;
		}
		else
		{
			for (new i = 0 ; i < pressCount ; i++)
			{
				Task_Start(pressTasks[i], sourceObject, _:pressEventType, NOTHING, NOTHING);
			}
		}
	}
}


/*
<FunctionInfo>
	<Localization Language="en">
		<DisplayName>Hold</DisplayName>
		<Description>Launches specific preexisting tasks when the button is pressed and held.</Description>
		<TitleFormat>[tasks] Launch On Hold</TitleFormat>
		<DisplayFormat>Launch [tasks] if held for [holdTime] seconds.</DisplayFormat>
	</Localization>
	<BrowserClass>Tasks</BrowserClass>
	<FunctionClasses>
		<FunctionClass>TaskLoopCandidate</FunctionClass>
	</FunctionClasses>		
	<Supports>
		<QueryClass>Standard</QueryClass>
		<QueryClass>Tasks</QueryClass>
	</Supports>
	<DefaultQuery>TaskQueryState</DefaultQuery>		
	<Event>Down</Event>
	<Event>Up</Event>
	<RequiredMethods>
		<MethodName>Task_Start</MethodName>
	</RequiredMethods>
	<Param Name="tasks">
		<Localization Language="en">
			<DisplayName>Tasks</DisplayName>
			<Description>The tasks to be launched.</Description>
		</Localization>
	</Param>
	<Param Name="eventType">
		<Localization Language="en">
			<DisplayName>Trigger Type</DisplayName>
			<Description>The trigger to be used when launching the tasks.</Description>
		</Localization>
		<SystemDefault>TriggerType</SystemDefault>
	</Param>		
	<Param Name="holdTime">
		<Localization Language="en">
			<DisplayName>Hold Time</DisplayName>
			<Description>The time in seconds the button must be held to be considered a press and hold.</Description>
		</Localization>
		<SystemDefault>HoldTime</SystemDefault>
	</Param>
</FunctionInfo>
*/
procedure Hold(Task:tasks[],TriggerType:eventType, Seconds:holdTime)
{
	new sourceObject = GetEventSource();
	new count = sizeof(tasks);
	
	if (GetEvent() == Event_ButtonDown)
	{
		Delay(holdTime);
		for (new i = 0 ; i < count ; i++)
		{
			Task_Start(tasks[i], sourceObject, _:eventType, NOTHING, NOTHING);
		}		
	}
}

/*
<FunctionInfo>
	<Localization Language="en">
		<DisplayName>MultiPress</DisplayName>
		<Description>This procedure launches the specified preexisting tasks when the button is pressed the given number of times.</Description>
		<TitleFormat>[tasks] Launch On MultiPress</TitleFormat>
		<DisplayFormat>Launch [tasks] if pressed [presses] times.</DisplayFormat>
	</Localization>
	<BrowserClass>Tasks</BrowserClass>
	<FunctionClasses>
		<FunctionClass>TaskLoopCandidate</FunctionClass>
	</FunctionClasses>		
	<Supports>
		<QueryClass>Standard</QueryClass>
		<QueryClass>Tasks</QueryClass>
	</Supports>
	<DefaultQuery>TaskQueryState</DefaultQuery>
	<Event>Down</Event>
	<RequiredMethods>
		<MethodName>Task_Start</MethodName>
	</RequiredMethods>
	<Param Name="tasks">
		<Localization Language="en">
			<DisplayName>Tasks</DisplayName>
			<Description>The tasks to be launched.</Description>
		</Localization>
	</Param>
	<Param Name="presses">
		<Localization Language="en">
			<DisplayName>Presses</DisplayName>
			<Description>The number of presses required to launch the tasks.</Description>
		</Localization>
		<SystemDefault>Presses</SystemDefault>
	</Param>
	<Param Name="eventType">
		<Localization Language="en">
			<DisplayName>Trigger Type</DisplayName>
			<Description>The trigger to be used when launching the tasks.</Description>
		</Localization>
		<SystemDefault>TriggerType</SystemDefault>
	</Param>		
</FunctionInfo>
*/
procedure MultiPress(Task:tasks[], Steps:presses, TriggerType:eventType)
{
	new sourceObject = GetEventSource();    
	new count = sizeof(tasks);
	
	if (GetEvent() == Event_ButtonDown && GetEventParam1() == _:presses)
	{
		for (new i = 0 ; i < count ; i++)
		{
			Task_Start(tasks[i], sourceObject, _:eventType, NOTHING, NOTHING);
		}				
	}
}

/*
<FunctionInfo>
	<Localization Language="en">
		<DisplayName>Advanced MultiPress</DisplayName>
		<Description>This procedure launches the specified preexisting tasks when the button is pressed the number of times specified for each task.</Description>
		<TitleFormat>[tasks] Launch On MultiPress</TitleFormat>
		<DisplayFormat>Launch [tasks] if pressed appropriate number of times.</DisplayFormat>
	</Localization>
	<BrowserClass>Tasks</BrowserClass>
	<FunctionClasses>
		<FunctionClass>TaskLoopCandidate</FunctionClass>
	</FunctionClasses>		
	<Supports>
		<QueryClass>Standard</QueryClass>
		<QueryClass>Tasks</QueryClass>
	</Supports>
	<DefaultQuery>TaskQueryState</DefaultQuery>
	<Event>Down</Event>
	<RequiredMethods>
		<MethodName>Task_Start</MethodName>
	</RequiredMethods>
	<Join>
		<Param>tasks</Param>
		<Param>presses</Param>
		<Param>eventTypes</Param>
	</Join>
	<Param Name="tasks">
		<Localization Language="en">
			<DisplayName>Tasks</DisplayName>
			<Description>The tasks to be launched.</Description>
		</Localization>
	</Param>
	<Param Name="presses">
		<Localization Language="en">
			<DisplayName>Presses</DisplayName>
			<Description>The number of presses required to launch the task.</Description>
		</Localization>
		<SystemDefault>Presses</SystemDefault>
	</Param>
	<Param Name="eventTypes">
		<Localization Language="en">
			<DisplayName>Trigger Type</DisplayName>
			<Description>The trigger to be used when launching the task.</Description>
		</Localization>
		<SystemDefault>TriggerType</SystemDefault>
	</Param>
	<Param Name="withinTime">
		<Localization Language="en">
			<DisplayName>Time Window</DisplayName>
			<Description>The number of seconds to wait for an additional press before launching a task.</Description>
		</Localization>
		<DefaultValue>
			<Constant Type="float">0.8</Constant>
		</DefaultValue>
		<ValidRange>
			<LowerBound Type="float">0.3</LowerBound>
			<UpperBound Type="float">1.0</UpperBound>
		</ValidRange>
	</Param>
</FunctionInfo>
*/
procedure MultiCountPress(Task:tasks[], Steps:presses[], TriggerType:eventTypes[], Seconds:withinTime)
{
	new sourceObject = GetEventSource();    
	new count = sizeof(tasks);
	new pressedCount = GetEventParam1();

	if (GetEvent() == Event_ButtonDown)
	{
		Delay(Seconds:withinTime);
		for (new i = 0 ; i < count ; i++)
		{
			if (pressedCount == _:presses[i])
			{
				Task_Start(tasks[i], sourceObject, _:eventTypes[i], NOTHING, NOTHING);
			}
		}
	}
}

/*
<FunctionInfo>
	<Localization Language="en">
		<DisplayName>Cycle Tasks</DisplayName>
		<Description>Cycles through up to 50 tasks.
  The tasks will launch sequentially in the order specified. The sequence will advance each time the task is triggered.
		</Description>
		<TitleFormat>[tasks] Cycle</TitleFormat>
		<DisplayFormat>Cycle Through [tasks]</DisplayFormat>
	</Localization>
	<BrowserClass>Tasks</BrowserClass>
	<FunctionClasses>
		<FunctionClass>TaskLoopCandidate</FunctionClass>
	</FunctionClasses>
	<Supports>
		<QueryClass>Standard</QueryClass>
		<QueryClass>Tasks</QueryClass>
	</Supports>
	<DefaultQuery>TaskQueryState</DefaultQuery>
	<Join>
		<Param>tasks</Param>
		<Param>orders</Param>
	</Join>
	<RequiredMethods>
		<MethodName>Task_Start</MethodName>
	</RequiredMethods>
	<Param Name="tasks">
		<Localization Language="en">
			<DisplayName>Task List</DisplayName>
			<Description>The tasks to be cycled.</Description>
		</Localization>
		<ValidRange>
			<UpperBound Type="int">50</UpperBound>
		</ValidRange>
	</Param>
	<Param Name="orders">
		<Localization Language="en">
			<DisplayName>Order</DisplayName>
			<Description>The order the task will be executed.</Description>
		</Localization>
		<DefaultValue>
			<Constant>1</Constant>
		</DefaultValue>
		<ValidRange>
			<UpperBound>50</UpperBound>
			<LowerBound>0</LowerBound>
		</ValidRange>
	</Param>
	<Param Name="eventType">
		<Localization Language="en">
			<DisplayName>Trigger Type</DisplayName>
			<Description>The trigger to be used when launching the task.</Description>
		</Localization>
		<SystemDefault>TriggerType</SystemDefault>
	</Param>		
</FunctionInfo>
*/
procedure CycleTasks(Task:tasks[], Number:orders[], TriggerType:eventType)
{
	static taskIndex = 0;
	static lowOrder = 50;
	static highOrder = 0;
	new sourceObject = GetEventSource();
	new taskCount = sizeof(tasks);
	
	if (taskCount > 0)
	{
		if(highOrder == 0)
		{
			lowOrder = 50;
			for(new i = 0; i < _:taskCount; i++)
			{
				if(orders[i] < Number:lowOrder)
				{
					lowOrder = _:orders[i];
				}
				if(orders[i] > Number:highOrder)
				{
					highOrder = _:orders[i];
				}
			}
			taskIndex = lowOrder;
		}	
		for(new i = 0; i < _:taskCount; i++){
			if(orders[i] == Number:taskIndex){
				Task_Start(tasks[i], sourceObject, _:eventType, NOTHING, NOTHING);
			}
		}
		new tempIndex = (highOrder + 1);
		for(new i = 0; i < _:taskCount; i++){
			if(orders[i] > Number:taskIndex && orders[i] < Number:tempIndex)
				tempIndex = _:orders[i];
		}
		if(_:taskIndex != _:highOrder)
			taskIndex = tempIndex;
		else
			taskIndex = lowOrder;		
	}
}

/*
<FunctionInfo>
	<Localization Language="en">
		<DisplayName>Unoccupied Launch</DisplayName>
		<Description>For use with motion detectors.  Launches tasks when no motion has been detected for the specified amount of time.</Description>
		<TitleFormat>[tasks] Unoccupied</TitleFormat>
		<DisplayFormat>Launch [tasks] when unoccupied for [delay(unoccupiedDelay)]</DisplayFormat>
	</Localization>
	<BrowserClass>Tasks</BrowserClass>
	<FunctionClasses>
		<FunctionClass>TaskLoopCandidate</FunctionClass>
	</FunctionClasses>
	<Supports>
		<QueryClass>Standard</QueryClass>
		<QueryClass>Tasks</QueryClass>
	</Supports>
	<DefaultQuery>TaskQueryState</DefaultQuery>
	<Event>Down</Event>
	<Event>Up</Event>
	<RequiredMethods>
		<MethodName>Task_Start</MethodName>
	</RequiredMethods>
	<Param Name="tasks">
		<Localization Language="en">
			<DisplayName>Tasks</DisplayName>
			<Description>The tasks to launch.</Description>
		</Localization>
		<Visible>true</Visible>
	</Param>
	<Param Name="eventType">
		<Localization Language="en">
			<DisplayName>Trigger Type</DisplayName>
			<Description>The trigger to be used when launching the task.</Description>
		</Localization>
		<SystemDefault>TriggerType</SystemDefault>
	</Param>	
	<Param Name="unoccupiedDelay">
		<Localization Language="en">
			<DisplayName>Unoccupied Delay</DisplayName>
			<Description>The delay to wait before launching a task when the contact releases.</Description>
		</Localization>
		<SystemDefault>Delay</SystemDefault>
		<Visible>true</Visible>
	</Param>
</FunctionInfo>
*/
procedure UnoccupiedLaunch(Task:tasks[], TriggerType:eventType, Delay:unoccupiedDelay)
{
	if (GetEvent() == Event_ButtonUp)
	{
		Delay(Seconds:unoccupiedDelay);
		
		for (new i = 0 ; i < sizeof(tasks) ; i++)
		{
			Task_Start(tasks[i], GetEventSource(), _:eventType, NOTHING, NOTHING);		
		}
	}
}
?>
    </Object>
    <Object>
      <Script VID="10172" Master="9722" MTime="">
        <Name>QueryHolder.sma</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Script</ObjectType>
      </Script>
      <?File / 
/*
QueryHolder.sma - Query Library
Copyright (c) 2012, Vantage Controls, Inc.
Version 0.2

ENUMS:
	
FUNCTIONS:

PROCEDURES:

QUERIES:
	bool:AlwaysOn
	bool:AlwaysOff
	Number:AtCustomStep

*/

#if defined _QueryHolder_included
  #endinput
#endif

#define _QueryHolder_included

#include "Query.inc"

/*
<EnumInfo>
	<Localization Language="en">
		<DisplayName>Variable Type</DisplayName>
		<Description>The type of variable to be used as an LED action.</Description>
		<Category>None</Category>
	</Localization>
	<IsLEDStyleType>false</IsLEDStyleType>
	<Localizable>false</Localizable>
	<UserVisible>false</UserVisible>
    <Enumerator Name="Boolean">
        <Localization Language="en">
            <DisplayName>Boolean</DisplayName>
        </Localization>
    </Enumerator>
    <Enumerator Name="Number">
        <Localization Language="en">
            <DisplayName>Number</DisplayName>
        </Localization>
    </Enumerator>
</EnumInfo>
*/
enum QueryVariableType
{
	Boolean,
	Number
};

/*
<FunctionInfo>
	<Localization Language="en">
		<DisplayName>LED Always ON</DisplayName>
		<Description>Reports true always.</Description>
		<QueryDescription>The LED will always remain on.</QueryDescription>			
		<TitleFormat>LED Always ON</TitleFormat>
		<DisplayFormat>LED will Always remain on</DisplayFormat>
	</Localization>
	<BrowserClass>Standard</BrowserClass>
	<QueryClass>Standard</QueryClass>
	<FunctionClasses>
		<FunctionClass>Objectless</FunctionClass>
	</FunctionClasses>
</FunctionInfo>
*/
query bool:AlwaysOn()
{
    return true;
}

/*
<FunctionInfo>
	<Localization Language="en">
		<DisplayName>LED Always OFF</DisplayName>
		<Description>Reports false always.</Description>
		<QueryDescription>The LED will always remain off.</QueryDescription>			
		<TitleFormat>LED Always OFF</TitleFormat>
		<DisplayFormat>LED will Always remain off</DisplayFormat>
	</Localization>
	<BrowserClass>Standard</BrowserClass>
	<QueryClass>Standard</QueryClass>
	<FunctionClasses>
		<FunctionClass>Objectless</FunctionClass>
	</FunctionClasses>
</FunctionInfo>
*/
query bool:AlwaysOff()
{
    return false;
}

/*
<FunctionInfo>
	<Localization Language="en">
		<DisplayName>LED At Variable Value</DisplayName>
		<Description>Reports the value of the Variable.</Description>
		<QueryDescription>The LED's active state will be set to the value of the specified variable.</QueryDescription>
		<TitleFormat>LED At Variable Value</TitleFormat>
		<DisplayFormat>LED State will be Set to the Value of [variable]</DisplayFormat>
	</Localization>
	<BrowserClass>Standard</BrowserClass>
	<QueryClass>Standard</QueryClass>
	<Param Name="variable">
		<Localization Language="en">
			<DisplayName>Variable</DisplayName>
			<Description>The Variable to which the LED will be set.</Description>
		</Localization>
	</Param>
	<Param Name="varType">
		<Localization Language="en">
			<DisplayName>Variable Type</DisplayName>
			<Description>Either Boolean or Number depending on the chosen variable.</Description>
		</Localization>
	</Param>
</FunctionInfo>
*/
query Number:SetToVariable(GMem:variable, QueryVariableType:varType)
{
	if (varType == Boolean)
	{
		return Number:(variable);
	}
	else
	{
		return Number:(variable)-Number:1;
	}
	return Number:1;
}

/*
<FunctionInfo>
	<Localization Language="en">
		<DisplayName>Variable Contains Specified Value</DisplayName>
		<Description>Reports 1 if the variable is at the value, and 0 otherwise.  This condition must use a variable of type Number.</Description>
		<QueryDescription>The LED will be set to the second state if the Number Variable is at the specified value.  It will be set to the first state otherwise.  
This led action must use a variable of type Number.</QueryDescription>
		<TitleFormat>Variable Contains Specified Value</TitleFormat>
		<DisplayFormat>LED will be On if the Variable's Value is [value]</DisplayFormat>
	</Localization>
	<BrowserClass>Standard</BrowserClass>
	<QueryClass>Standard</QueryClass>
	<Param Name="variable">
		<Localization Language="en">
			<DisplayName>Variable</DisplayName>
			<Description>The Variable which will be checked.</Description>
		</Localization>
	</Param>
	<Param Name="value">
		<Localization Language="en">
			<DisplayName>Value</DisplayName>
			<Description>The value the variable needs to equal in order to use the second state.</Description>
		</Localization>
	</Param>
</FunctionInfo>
*/
query Number:VariableAtSpecifiedValue(GMem:variable, Number:value)
{
	if (Number:(variable) == value)
	{
		return Number:1;
	}
	return Number:0;
}

/*
<FunctionInfo>
	<Localization Language="en">
		<DisplayName>Variable Contains Specified Object</DisplayName>
		<Description>Reports 1 if the variable contains the object, and 0 otherwise.  This condition must use a variable of type Object.</Description>
		<QueryDescription>The LED will be set to the second state if the variable contains the specified object.  It will be set to the first state otherwise.
This led action must use an object type variable.</QueryDescription>
		<TitleFormat>Variable Contains Specified Value</TitleFormat>
		<DisplayFormat>LED will be On if the Variable's Value is [object]</DisplayFormat>
	</Localization>
	<BrowserClass>Standard</BrowserClass>
	<QueryClass>Standard</QueryClass>
	<Param Name="variable">
		<Localization Language="en">
			<DisplayName>Variable</DisplayName>
			<Description>The Variable which will be checked.</Description>
		</Localization>
	</Param>
	<Param Name="object">
		<Localization Language="en">
			<DisplayName>Object</DisplayName>
			<Description>The object the variable needs to contain in order to use the second state.</Description>
		</Localization>
	</Param>
</FunctionInfo>
*/
query Number:VariableEqualsObject(GMem:variable, VID:object)
{
	if (_:variable == _:object)
	{
		return Number:1;
	}
	return Number:0;
}

/*
<FunctionInfo>
	<Localization Language="en">
		<DisplayName>LED At Specified State</DisplayName>
		<Description>Reports the same value specified in the state parameter.</Description>
		<QueryDescription>The LED will be set to the value specified in the state parameter.</QueryDescription>
		<TitleFormat>LED At Specified State</TitleFormat>
		<DisplayFormat>LED State [state] Will Become the Active State</DisplayFormat>
	</Localization>
	<BrowserClass>Standard</BrowserClass>
	<QueryClass>Standard</QueryClass>
	<FunctionClasses>
		<FunctionClass>Objectless</FunctionClass>
	</FunctionClasses>
	<Param Name="state">
		<Localization Language="en">
			<DisplayName>State</DisplayName>
			<Description>The state to which the LED will be set.</Description>
		</Localization>
	</Param>
	<ValidRange>
		<UpperBound>16</UpperBound>
		<LowerBound>1</LowerBound>
	</ValidRange>
</FunctionInfo>
*/
query Number:AtCustomStep(Number:state)
{	
	return state - Number:1;
}?>
    </Object>
    <Object>
      <Script VID="10173" Master="9722" MTime="">
        <Name>Lighting\Misc.sma</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Script</ObjectType>
      </Script>
      <?File / 
/*
Misc.sma - Misc Procedure Library
Copyright (c) 2012, Vantage Controls, Inc.
Version 0.1

ENUMS:

FUNCTIONS:

PROCEDURES:
	Memory
	Learn
	Increment
	Decrement
	StepUp
	StepDown
	LightAndFan
	
QUERIES:
	cell:LoadAtStep
*/

#if defined _Misc_included
  #endinput
#endif

#define _Misc_included

#include <load>
#include <button>
#include <buffer>
#include <lightsensor>
#include <blind>
#include <adjust>

#include "..\Query"

#define MAXLEVEL Level:100000
#define MISC_MINLEVEL Level:0
#define MAXSTEPS 100

#if !defined(Delay)
  #define Delay Fixed
#endif

#if !defined(Footcandles)
  #define Footcandles Fixed
#endif


/*
<FunctionInfo>
	<Localization Language="en">
		<DisplayName>Loads At Step</DisplayName>
		<Description>Reports the step the scene's loads are at.</Description>
		<QueryDescription>The LED will be set to the state corresponding to the step the loads are on.</QueryDescription>
		<TitleFormat>Loads At Step</TitleFormat>
		<DisplayFormat>The LED will be set to the state equivalent to the step the [plural(loads,'loads','load')] [plural(loads,'are','is')] at.</DisplayFormat>
	</Localization>
	<QueryClass>Retired</QueryClass>
	<RequiredMethods>
		<MethodName>Load_GetLevel</MethodName>			
	</RequiredMethods>
	<Param Name="loads">
		<Localization Language="en">
			<DisplayName>Loads</DisplayName>
			<Description>The loads whose step are to be reported.</Description>
		</Localization>
		<Visible>true</Visible>
	</Param>
	<Param Name="steps">
		<Localization Language="en">
			<DisplayName>Steps</DisplayName>
			<Description>The number of steps.</Description>
		</Localization>
		<Visible>true</Visible>
		<ValidRange>
			<LowerBound>2</LowerBound>
			<UpperBound>100</UpperBound>
		</ValidRange>
		<SystemDefault>Steps</SystemDefault>
	</Param>    
</FunctionInfo>
*/
query Number:LoadAtStep(Load:loads[],steps)
{
	new retval = 0;

	new count = sizeof(loads);
	new Level:AverageLoadLevel2;
	new StepSize;
	
	if (steps > 1) StepSize = MAXSTEPS / (steps - 1);
	
	for (new i = 0 ; i < count ; i++)
	{
		AverageLoadLevel2 += Load_GetLevel(loads[i]);
	}
	
	if (count > 0) AverageLoadLevel2 /= fixed(count);
	
	if (StepSize > 0) retval = fround(AverageLoadLevel2/StepSize, fround_floor);

	return Number:retval;
}

/*
<FunctionInfo>
	<Localization Language="en">
		<DisplayName>Loads At Step</DisplayName>
		<Description>Reports the step the scene's loads are at.</Description>
		<QueryDescription>The LED will be set to the state corresponding to the step the loads are on.</QueryDescription>
		<TitleFormat>Loads At Step</TitleFormat>
		<DisplayFormat>The LED will be set to the state equivalent to the step the [plural(loads,'loads','load')] [plural(loads,'are','is')] at.</DisplayFormat>
	</Localization>
	<QueryClass>Step</QueryClass>
	<RequiredMethods>
		<MethodName>Load_GetLevel</MethodName>			
	</RequiredMethods>
	<Param Name="loads">
		<Localization Language="en">
			<DisplayName>Loads</DisplayName>
			<Description>The loads whose step are to be reported.</Description>
		</Localization>
		<Visible>true</Visible>
	</Param>
	<Param Name="steps">
		<Localization Language="en">
			<DisplayName>Steps</DisplayName>
			<Description>The number of steps.</Description>
		</Localization>
		<Visible>true</Visible>
		<ValidRange>
			<LowerBound>2</LowerBound>
			<UpperBound>100</UpperBound>
		</ValidRange>
		<SystemDefault>Steps</SystemDefault>
	</Param>    
</FunctionInfo>
*/
query Number:LoadAtStep2(Load:loads[],steps)
{
	new retval = 0;

	new count = sizeof(loads);
	new Level:AverageLoadLevel2;
	new StepSize;
	
	if (steps > 1) StepSize = MAXSTEPS / (steps - 1);
	
	for (new i = 0 ; i < count ; i++)
	{
		AverageLoadLevel2 += Load_GetLevel(loads[i]);
	}
	
	if (count > 0) AverageLoadLevel2 /= fixed(count);
	
	if (StepSize > 0) retval = fround(AverageLoadLevel2/StepSize, fround_ceil);

	return Number:retval;
}

/*
<EnumInfo>
	<Localization Language="en">
		<DisplayName>Toggle State</DisplayName>
		<Description>The state of a toggle procedure.</Description>
		<Category>Lighting</Category>
	</Localization>
	<IsLEDStyleType>false</IsLEDStyleType>
	<Localizable>false</Localizable>
	<UserVisible>false</UserVisible>
	<Enumerator Name="ToggleState_None">
		<Localization Language="en">
			<DisplayName>None</DisplayName>
		</Localization>
	</Enumerator>
	<Enumerator Name="ToggleState_On">
		<Localization Language="en">
			<DisplayName>Toggle On</DisplayName>
		</Localization>
	</Enumerator>
	<Enumerator Name="ToggleState_Off">
		<Localization Language="en">
			<DisplayName>Toggle Off</DisplayName>
		</Localization>
	</Enumerator>
</EnumInfo>
*/
enum ToggleState
{
	ToggleState_Off,
	ToggleState_On,
	ToggleState_None
};

/*
<FunctionInfo>
	<Localization Language="en">
		<DisplayName>Memory</DisplayName>
		<Description>Remembers the levels of the given loads and sets them to new levels with the first button press.  Returns the loads to their previous levels with the second button press.</Description>
		<TitleFormat>[loads] Memorize</TitleFormat>
		<DisplayFormat>Memorize [loads]</DisplayFormat>
	</Localization>
	<BrowserClass>Memory</BrowserClass>
	<Supports>
		<QueryClass>Standard</QueryClass>
		<QueryClass>Lighting</QueryClass>
		<QueryClass>LearnedLighting</QueryClass>		
	</Supports>
	<DefaultQuery>LoadsOn</DefaultQuery>
	<Join>
		<Param>loads</Param>
		<Param>levels</Param>
	</Join>
	<RequiredMethods>
		<MethodName>Load_GetLevel</MethodName>
		<MethodName>Load_Ramp</MethodName>
	</RequiredMethods>
	<Param Name="loads">
		<Localization Language="en">
			<DisplayName>Loads</DisplayName>
			<Description>The loads to be controlled.</Description>
		</Localization>
		<SystemDefault>Levels</SystemDefault>
		<Visible>true</Visible>
	</Param>
	<Param Name="levels">
		<Localization Language="en">
			<DisplayName>Levels</DisplayName>
			<Description>The levels to set the loads.</Description>
		</Localization>
		<SystemDefault>Level</SystemDefault>
		<Visible>true</Visible>
	</Param>
	<Param Name="rampTime">
		<Localization Language="en">
			<DisplayName>Ramp Time</DisplayName>
			<Description>The time in seconds a load takes to ramp on.</Description>
		</Localization>
		<SystemDefault>RampTime</SystemDefault>
		<Visible>true</Visible>
	</Param>
	<Param Name="fadeTime">
		<Localization Language="en">
			<DisplayName>Fade Time</DisplayName>
			<Description>The time in seconds a load takes to fade to its previous level.</Description>
		</Localization>
		<SystemDefault>FadeTime</SystemDefault>
		<Visible>true</Visible>
	</Param>	
	<Param Name="changeLevels">
		<Localization Language="en">
			<DisplayName>Change Levels</DisplayName>
			<Description>Specifies whether the loads will turn to new levels after being memorized on the first press. </Description>
		</Localization>
		<Visible>true</Visible>
	</Param>
	<Param Name="bufferid">
		<Localization Language="en">
			<DisplayName/>
			<Description></Description>
		</Localization>
		<Visible>false</Visible>
	</Param>
</FunctionInfo>
*/
procedure Memory(Load:loads[], Level:levels[], Seconds:rampTime, Seconds:fadeTime, bool:changeLevels, MemID:bufferid)
{
	new count = sizeof(loads);
	new i;
		
	if (DoesBufferExist(bufferid))
	{
		for (i = 0 ; i < count ; i++)
		{
			Load_Ramp(loads[i], Load_RampType_Variable, fadeTime, Level:BufferGetAt(bufferid, i));
		}
		DestroyBuffer(bufferid);
	}
	else
	{
		CreateBuffer(bufferid, count, true);
		
		for (i = 0 ; i < count ; i++)
		{
			BufferSetAt(bufferid, i, _:Load_GetLevel(loads[i]));
		}
		
		if (changeLevels)
		{
			for (i = 0; i < count ; i++)
			{
				Load_Ramp(loads[i], Load_RampType_Variable, rampTime, levels[i]); 
			}
		}
	}
}

/*
<FunctionInfo>
	<Localization Language="en">
		<DisplayName>Learn</DisplayName>
		<Description>Forces a learnable task to use the current levels of the task's loads as the learned levels for that task. 
  WARNING:  This will send a Learn trigger to the task.  If this is a multi-step task, this could cause some procedures to launch unexpectedly.</Description>
		<TitleFormat>[tasks] Learn</TitleFormat>
		<DisplayFormat>Force [tasks] to learn the current loads levels'</DisplayFormat>
	</Localization>
	<BrowserClass>Memory</BrowserClass>
	<Supports>
		<QueryClass>Standard</QueryClass>
	</Supports>
	<DefaultQuery>LoadsOn</DefaultQuery>
	<Param Name="tasks">
		<Localization Language="en">
			<DisplayName>Tasks</DisplayName>
			<Description>The tasks to be included in the learn procedure.</Description>
		</Localization>
		<Visible>true</Visible>
	</Param>
</FunctionInfo>
*/
procedure Learn(Task:tasks[])
{
	if (GetEvent() != Event_Learn)
	{
		new count = sizeof(tasks);

		for (new i = 0 ; i < count ; i++)
		{
			SendEvent(_:tasks[i],Event_Learn);
		}
	}    
}

/*
<FunctionInfo>
	<Localization Language="en">
		<DisplayName>Increment</DisplayName>
		<Description>Increments loads by the specified amounts.</Description>
		<TitleFormat>[loads] Increment</TitleFormat>
		<DisplayFormat>Increment [loads] by [addAmount] percent.</DisplayFormat>
	</Localization>
	<BrowserClass>Adjusting</BrowserClass>
	<Supports>
		<QueryClass>Standard</QueryClass>
		<QueryClass>Lighting</QueryClass>
		<QueryClass>Step</QueryClass>		
	</Supports>
	<DefaultQuery>LoadsOn</DefaultQuery>
	<RequiredMethods>
		<MethodName>Load_GetLevel</MethodName>
		<MethodName>Load_Ramp</MethodName>
	</RequiredMethods>
	<Param Name="loads">
		<Localization Language="en">
			<DisplayName>Loads</DisplayName>
			<Description>The loads to be controlled.</Description>
		</Localization>
		<Visible>true</Visible>
	</Param>
	<Param Name="addAmount">
		<Localization Language="en">
			<DisplayName>Amount</DisplayName>
			<Description>The amount to increment the load's levels.</Description>
		</Localization>
		<SystemDefault>ChangeAmount</SystemDefault>
		<Visible>true</Visible>
	</Param>
	<Param Name="rampTime">
		<Localization Language="en">
			<DisplayName>Ramp Time</DisplayName>
			<Description>The time in seconds a load takes to ramp on or fade off.</Description>
		</Localization>
		<SystemDefault>RampTime</SystemDefault>
		<Visible>true</Visible>
	</Param>
	<Param Name="wrapAround">
		<Localization Language="en">
			<DisplayName>Wrap Around</DisplayName>
			<Description>Specifies whether the loads will wrap around to off when incremented at full on.</Description>
		</Localization>
		<SystemDefault>WrapAround</SystemDefault>
		<Visible>true</Visible>
	</Param>
</FunctionInfo>
*/
procedure Increment(Load:loads[], Level:addAmount, Seconds:rampTime, bool:wrapAround)
{
	new count = sizeof(loads);
	new i ;
	new Level:tempLevel = MISC_MINLEVEL;
	new Level:FinalLevel;
	
	for (i = 0 ; i < count ; i++)
	{
		tempLevel = Load_GetLevel(loads[i]);
		if (fround(tempLevel) == fround(MAXLEVEL) && wrapAround)
		{
			FinalLevel = MISC_MINLEVEL;
		}
		else if (tempLevel + (addAmount) < MAXLEVEL)
		{
			FinalLevel = tempLevel + (addAmount);
		}
		else
		{
			FinalLevel = MAXLEVEL;
		}
		
		Load_Ramp(loads[i], Load_RampType_Variable, rampTime, FinalLevel);
	}
}

/*
<FunctionInfo>
	<Localization Language="en">
		<DisplayName>Decrement</DisplayName>
		<Description>Decrements loads by the specified amounts.</Description>
		<TitleFormat>[loads] Decrement</TitleFormat>
		<DisplayFormat>Decrement [loads] by [addAmount] percent.</DisplayFormat>
	</Localization>
	<BrowserClass>Adjusting</BrowserClass>
	<Supports>
		<QueryClass>Standard</QueryClass>
		<QueryClass>Lighting</QueryClass>
		<QueryClass>Step</QueryClass>
	</Supports>
	<DefaultQuery>LoadsOn</DefaultQuery>
	<RequiredMethods>
		<MethodName>Load_GetLevel</MethodName>
		<MethodName>Load_Ramp</MethodName>
	</RequiredMethods>
	<Param Name="loads">
		<Localization Language="en">
			<DisplayName>Loads</DisplayName>
			<Description>The loads to be controlled.</Description>
		</Localization>
		<Visible>true</Visible>
	</Param>
	<Param Name="addAmount">
		<Localization Language="en">
			<DisplayName>Amount</DisplayName>
			<Description>The amount to decrement the load's levels.</Description>
		</Localization>
		<SystemDefault>ChangeAmount</SystemDefault>
		<Visible>true</Visible>
	</Param>
	<Param Name="rampTime">
		<Localization Language="en">
			<DisplayName>Ramp Time</DisplayName>
			<Description>The time in seconds a load takes to ramp on or fade off.</Description>
		</Localization>
		<SystemDefault>RampTime</SystemDefault>
		<Visible>true</Visible>
	</Param>
	<Param Name="wrapAround">
		<Localization Language="en">
			<DisplayName>Wrap Around</DisplayName>
			<Description>Specifies whether the loads will wrap around to full on when decremented at off.</Description>
		</Localization>
		<SystemDefault>WrapAround</SystemDefault>
		<Visible>true</Visible>
	</Param>
</FunctionInfo>
*/
procedure Decrement(Load:loads[], Level:addAmount, Seconds:rampTime, bool:wrapAround)
{
	new count = sizeof(loads);
	new i ;
	new Level:tempLevel = MISC_MINLEVEL;
	new Level:FinalLevel;
	
	for (i = 0 ; i < count ; i++)
	{
		tempLevel = Load_GetLevel(loads[i]);
		if (fround(tempLevel) == fround(MISC_MINLEVEL) && wrapAround)
		{
			FinalLevel = MAXLEVEL;
		}
		else if (tempLevel - (addAmount) > MISC_MINLEVEL)
		{
			FinalLevel = tempLevel - (addAmount);
		}
		else
		{
			FinalLevel = MISC_MINLEVEL;
		}
		
		Load_Ramp(loads[i], Load_RampType_Variable, rampTime, FinalLevel);
	}
}

/*
<FunctionInfo>
	<Localization Language="en">
		<DisplayName>Step Up</DisplayName>
		<Description>Steps incrementally through the loads' levels with the specified number of steps.  Zero is included as a step.  For example, if 4 steps were given, the load level would be set to 33.3%, 66.6%, 100% then 0%.</Description>
		<TitleFormat>[loads] Step Up</TitleFormat>
		<DisplayFormat>Step incrementally through the levels of [loads] with [steps] steps. </DisplayFormat>
	</Localization>
	<BrowserClass>Adjusting</BrowserClass>
	<Supports>
		<QueryClass>Step</QueryClass>
		<QueryClass>Standard</QueryClass>
		<QueryClass>Lighting</QueryClass>
	</Supports>
	<DefaultQuery>LoadAtStep2</DefaultQuery>
	<RequiredMethods>
		<MethodName>Load_GetLevel</MethodName>
		<MethodName>Load_Ramp</MethodName>
	</RequiredMethods>
	<Param Name="loads">
		<Localization Language="en">
			<DisplayName>Loads</DisplayName>
			<Description>The loads to be controlled.</Description>
		</Localization>
		<Visible>true</Visible>
	</Param>
	<Param Name="steps">
		<Localization Language="en">
			<DisplayName>Steps</DisplayName>
			<Description>The number of steps to step through.</Description>
		</Localization>
		<Visible>true</Visible>
		<ValidRange>
			<LowerBound>2</LowerBound>
			<UpperBound>100</UpperBound>
		</ValidRange>
		<SystemDefault>Steps</SystemDefault>
	</Param>
	<Param Name="rampTime">
		<Localization Language="en">
			<DisplayName>Ramp Time</DisplayName>
			<Description>The time in seconds a load takes to fade to the specified level.</Description>
		</Localization>
		<SystemDefault>RampTime</SystemDefault>
		<Visible>true</Visible>
	</Param>
</FunctionInfo>
*/
procedure StepUp(Load:loads[], Steps:steps, Seconds:rampTime)
{
	new StepSize;
	new Level:FinalLevel;
	
	if (_:steps > 1) StepSize = MAXSTEPS / (_:steps - 1);
	
	FinalLevel = fixed(StepSize * (_:LoadAtStep(loads,_:steps)+1));
	
	if (FinalLevel > MAXLEVEL) FinalLevel = MISC_MINLEVEL;
	
	BatchInvoke( Load_Ramp(Load:0, Load_RampType_Variable, rampTime, FinalLevel), _:loads);
}

/*
<FunctionInfo>
	<Localization Language="en">
		<DisplayName>Step Down</DisplayName>
		<Description>Steps decrementally through the loads' levels with the specified number of steps. Zero is included as a step.  For example, if 4 steps were given, the load level would be set to 100%, 66.6%, 33.3% then 0%.</Description>
		<TitleFormat>[loads] Step Down</TitleFormat>
		<DisplayFormat>Step decrementally through the levels of [loads] with [steps] steps. </DisplayFormat>
	</Localization>
	<BrowserClass>Adjusting</BrowserClass>
	<Supports>
		<QueryClass>Step</QueryClass>
		<QueryClass>Standard</QueryClass>
		<QueryClass>Lighting</QueryClass>
	</Supports>	
	<DefaultQuery>LoadAtStep2</DefaultQuery>
	<RequiredMethods>
		<MethodName>Load_GetLevel</MethodName>
		<MethodName>Load_Ramp</MethodName>
	</RequiredMethods>
	<Param Name="loads">
		<Localization Language="en">
			<DisplayName>Loads</DisplayName>
			<Description>The loads to be controlled.</Description>
		</Localization>
		<Visible>true</Visible>
	</Param>
	<Param Name="steps">
		<Localization Language="en">
			<DisplayName>Steps</DisplayName>
			<Description>The number of steps to step through.</Description>
		</Localization>
		<Visible>true</Visible>
		<ValidRange>
			<LowerBound>2</LowerBound>
			<UpperBound>100</UpperBound>
		</ValidRange>
		<SystemDefault>Steps</SystemDefault>
	</Param>
	<Param Name="rampTime">
		<Localization Language="en">
			<DisplayName>Ramp Time</DisplayName>
			<Description>The time in seconds a load takes to fade to the specified level.</Description>
		</Localization>
		<SystemDefault>RampTime</SystemDefault>
		<Visible>true</Visible>
	</Param>
</FunctionInfo>
*/
procedure StepDown(Load:loads[], Steps:steps, Seconds:rampTime)
{
	new StepSize;
	new Level:FinalLevel;
	
	if (_:steps > 1) StepSize = MAXSTEPS / (_:steps - 1);

	FinalLevel = fixed(StepSize * (_:LoadAtStep(loads,_:steps)-1));

	if (FinalLevel < MISC_MINLEVEL) FinalLevel = MAXLEVEL;

	BatchInvoke( Load_Ramp(Load:0, Load_RampType_Variable, rampTime, FinalLevel), _:loads);
}

/*
<FunctionInfo>
	<Localization Language="en">
		<DisplayName>Track Light Sensor</DisplayName>
		<Description>Sets the level of the specified loads to correspond with the level the light sensor is reading.  If the light level is high, the loads' levels are low, if the light level is low, the loads' levels are high.</Description>
		<TitleFormat>[loads] Track Light Sensor To [lightSensor]</TitleFormat>
		<DisplayFormat>Set the Level of [loads] to Correspond with the Light Level of [lightSensor]</DisplayFormat>
	</Localization>
	<BrowserClass>Scenarios</BrowserClass>
	<Supports>
		<QueryClass>Standard</QueryClass>
	</Supports>
	<DefaultQuery>none</DefaultQuery>
	<Event>Time</Event>
	<Join>
		<Param>loads</Param>
		<Param>minimum</Param>
	</Join>
	<RequiredMethods>
		<MethodName>LightSensor_GetLevelHW</MethodName>
	</RequiredMethods>
	<Param Name="lightSensor">
		<Localization Language="en">
			<DisplayName>Light Sensor</DisplayName>
			<Description>The sensor which will report the light level.</Description>
		</Localization>
		<Visible>true</Visible>
	</Param>
	<Param Name="loads">
		<Localization Language="en">
			<DisplayName>Loads</DisplayName>
			<Description>The loads whose levels are to be modified.</Description>
		</Localization>
		<Visible>true</Visible>
	</Param>
	<Param Name="minimum">
		<Localization Language="en">
			<DisplayName>Minimum Levels</DisplayName>
			<Description>The mimimum level the light sensor can set the load.</Description>
		</Localization>
		<Visible>true</Visible>
	</Param>
	<Param Name="loadOffValue">
		<Localization Language="en">
			<DisplayName>Load Off Level</DisplayName>
			<Description>The light level in foot candles at which a load's level should be completely off.</Description>
		</Localization>
		<DefaultValue>
			<Constant Type="float">10.0</Constant>
		</DefaultValue>
		<Visible>true</Visible>
	</Param>
	<Param Name="loadOnValue">
		<Localization Language="en">
			<DisplayName>Load On Level</DisplayName>
			<Description>The light level in foot candles at which a load's level should be completely on.</Description>
		</Localization>
		<DefaultValue>
			<Constant Type="float">0.0</Constant>
		</DefaultValue>
		<Visible>true</Visible>
	</Param>
	<Param Name="fadeTime">
		<Localization Language="en">
			<DisplayName>Ramp Time</DisplayName>
			<Description>The time a load will take to ramp to its new level. With this procedure, a longer time might be desirable to allow the load level to ignore temporary lighting changes.</Description>
		</Localization>
		<SystemDefault>RampTime</SystemDefault>
		<Visible>true</Visible>
	</Param>
</FunctionInfo>
*/
procedure TrackLightSensor(LightSensor:lightSensor, Load:loads[], Level:minimum[], Footcandles:loadOffValue, Footcandles:loadOnValue, Seconds:fadeTime)
{
	if (GetEvent() == Event_Timer)
	{
		new SensorValue = _:(LightSensor_GetLevelHW(lightSensor));
		new count = sizeof(loads);
		new finalLevel;
		
		new endLoadValue = _:(loadOffValue - loadOnValue) / 100;
		
		if (endLoadValue > 0)
		{
			new numerator = (SensorValue - _:loadOnValue) * 100;
			new denominator = _:loadOffValue - _:loadOnValue;
			finalLevel = _:(numerator / denominator);
		}
		else
		{
			finalLevel = SensorValue;
		}
		
		if (finalLevel > 100)
		{
			finalLevel = 100;
		}
		if (finalLevel < 1)
		{
			finalLevel = 0;
		}
		
		finalLevel = 100 - finalLevel;

		for (new i = 0 ; i < count ; i++)
		{
			if (fixed(finalLevel) >= minimum[i])
			{
				Load_Ramp(loads[i], Load_RampType_Variable, fadeTime, fixed(finalLevel));
			}
			else
			{
				Load_Ramp(loads[i], Load_RampType_Variable, fadeTime, minimum[i]);
			}
		}
	}
}

/*
<FunctionInfo>
	<Localization Language="en">
		<DisplayName>Set Area Level</DisplayName>
		<Description>Maintains the rooms light level as far as is possible.  This procedure requires a light sensor.</Description>
		<TitleFormat>Set the Area Level to [level]</TitleFormat>
		<DisplayFormat>Set the Area Level to [level]</DisplayFormat>
	</Localization>
	<BrowserClass>GreenScenarios</BrowserClass>
	<FunctionClasses>
		<FunctionClass>GoGreen</FunctionClass>
	</FunctionClasses>
	<Supports>
		<QueryClass>Standard</QueryClass>
	</Supports>
	<DefaultQuery>none</DefaultQuery>
	<RequiredMethods>
		<MethodName>LightSensor_GetLevelHW</MethodName>
	</RequiredMethods>
	<Event>Time</Event>
	<Param Name="lightSensor">
		<Localization Language="en">
			<DisplayName>Light Sensor</DisplayName>
			<Description>The sensor which will report the light level.</Description>
		</Localization>
		<Visible>true</Visible>
	</Param>
	<Param Name="loads">
		<Localization Language="en">
			<DisplayName>Loads</DisplayName>
			<Description>The loads whose levels are to be modified.</Description>
		</Localization>
		<Visible>true</Visible>
	</Param>
	<Param Name="level">
		<Localization Language="en">
			<DisplayName>Light Level</DisplayName>
			<Description>The light level in foot candles at which the room should remain.</Description>
		</Localization>
		<Visible>true</Visible>
	</Param>
</FunctionInfo>
*/
procedure SetRoomLevel(LightSensor:lightSensor, Load:loads[], Footcandles:level)
{
	new Footcandles:sensorValue = Footcandles:(LightSensor_GetLevelHW(lightSensor));
	new count = sizeof(loads);
	new Footcandles:newLevel;

	if (sensorValue > level + Level:0.1)
	{
		for (new i = 0 ; i < count ; i++)
		{
			newLevel = Load_GetLevel(loads[i]) - Level:1.0;
			if (newLevel < Level:1)
			{
				newLevel = Level:0;
			}

			Load_Ramp(loads[i], Load_RampType_Variable, Seconds:5.0, newLevel);
		}
	}
	else if (sensorValue < level - 0.1)
	{
		for (new i = 0 ; i < count ; i++)
		{
			newLevel = Load_GetLevel(loads[i]) + Level:1.0;
			if (newLevel > Level:100.0)
			{
				newLevel = Level:100.0;
			}

			Load_Ramp(loads[i], Load_RampType_Variable, Seconds:5.0, newLevel);
		}
	}
}

/*
<FunctionInfo>
	<Localization Language="en">
		<DisplayName>Set Area Level with Blind Control</DisplayName>
		<Description>Maintains the rooms light level as far as is possible.  This procedure requires a light sensor.</Description>
		<TitleFormat>Set Area Level to [level] With Lights and Blinds</TitleFormat>
		<DisplayFormat>Set the Area Level to [level] using Lighting and Blinds</DisplayFormat>
	</Localization>
	<BrowserClass>GreenScenarios</BrowserClass>
	<FunctionClasses>
		<FunctionClass>GoGreen</FunctionClass>
	</FunctionClasses>
	<Supports>
		<QueryClass>Standard</QueryClass>
	</Supports>
	<DefaultQuery>none</DefaultQuery>
	<RequiredMethods>
		<MethodName>LightSensor_GetLevelHW</MethodName>
	</RequiredMethods>
	<Event>Time</Event>
	<Param Name="lightSensor">
		<Localization Language="en">
			<DisplayName>Light Sensor</DisplayName>
			<Description>The sensor which will report the light level.</Description>
		</Localization>
		<Visible>true</Visible>
	</Param>
	<Param Name="blinds">
		<Localization Language="en">
			<DisplayName>Blinds</DisplayName>
			<Description>The blinds whose positions are to be modified.</Description>
		</Localization>
		<Visible>true</Visible>
	</Param>
	<Param Name="loads">
		<Localization Language="en">
			<DisplayName>Loads</DisplayName>
			<Description>The loads whose levels are to be modified.</Description>
		</Localization>
		<Visible>true</Visible>
	</Param>
	<Param Name="blindControlEnabled">
		<Localization Language="en">
			<DisplayName>Blind Control Enabled</DisplayName>
			<Description>If enabled, the blinds will be the first priority in lightening or darkening an area.</Description>
		</Localization>
		<Visible>true</Visible>
	</Param>
	<Param Name="level">
		<Localization Language="en">
			<DisplayName>Light Level</DisplayName>
			<Description>The light level in foot candles at which the room should remain.</Description>
		</Localization>
		<Visible>true</Visible>
	</Param>
</FunctionInfo>
*/
procedure AdvancedSetRoomLevel(LightSensor:lightSensor, Blind:blinds[], Load:loads[], bool:blindControlEnabled, Footcandles:level)
{
	new bool:priority;
	new loadCount = sizeof(loads);
	new blindCount = sizeof(blinds);
	new Level:newLevel;

	new Level:blindLevel;
	new Footcandles:lightDistance = Footcandles:(LightSensor_GetLevelHW(lightSensor)) - level;		
	
	if (lightDistance > 0.2)
	{
		for (new i = 0 ; i < loadCount ; i++)
		{
			newLevel = Load_GetLevel(loads[i]) - Level:1.0;
			if (newLevel < Level:1) 
			{
				newLevel = Level:0;
			}
			else
			{
				Load_Ramp(loads[i], Load_RampType_Variable, Seconds:5.0, newLevel);
				priority = true;
			}
		}

		if (!priority && blindControlEnabled)
		{
			for (new i = 0 ; i < blindCount ; i++)
			{
				blindLevel = Blind_GetPosition(blinds[i]);
				if (blindLevel > 0)
				{
					if (blindLevel - Level:5.0 < Level:0.0)
					{
						Blind_SetPosition(blinds[i], Level:0.0);
					}
					else
					{
						Blind_SetPosition(blinds[i], blindLevel - Level:5.0);
					}
					priority = true;
				}
			}
		}
	}
	else if (lightDistance < 0.2)
	{
		if (blindControlEnabled)
		{
			for (new i = 0 ; i < blindCount ; i++)
			{
				blindLevel = Blind_GetPosition(blinds[i]);
				if (blindLevel < Level:100.0)
				{
					if (blindLevel + Level:5.0 > Level:99.0)
					{
						Blind_SetPosition(blinds[i], Level:100.0);
					}
					else
					{
						Blind_SetPosition(blinds[i], blindLevel + Level:5.0);
					}
					priority = true;
				}
			}
		}
		if (!priority)
		{
			for (new i = 0 ; i < loadCount ; i++)
			{
				newLevel = Load_GetLevel(loads[i]) + Level:1.0;
				if (newLevel > Level:100.0) newLevel = Level:100.0;
				Load_Ramp(loads[i], Load_RampType_Variable, Seconds:5.0, newLevel);
			}
		}
	}
}

/*
<FunctionInfo>
	<Localization Language="en">
		<DisplayName>Light and Fan</DisplayName>
		<Description>When first triggered this procedure turns on lights and after a delay fans.  The next time it is triggered it turns off lights and after a delay fans.</Description>
		<TitleFormat>Toggle [lightLoads] and set [fanLoads]</TitleFormat>
		<DisplayFormat>Toggle [lightLoads] and after a delay set [fanLoads] to the same state</DisplayFormat>
	</Localization>
	<BrowserClass>Scenarios</BrowserClass>
	<DefaultQuery>LoadsOn</DefaultQuery>
	<Supports>
		<QueryClass>Standard</QueryClass>
		<QueryClass>Lighting</QueryClass>
	</Supports>
	<Join>
		<Param>lightLoads</Param>
		<Param>levels</Param>
	</Join>
	<RequiredMethods>
		<MethodName>Load_GetLevel</MethodName>
		<MethodName>Load_SetLevel</MethodName>
		<MethodName>Load_Ramp</MethodName>
	</RequiredMethods>
	<Param Name="lightLoads">
		<Localization Language="en">
			<DisplayName>Lighting Loads</DisplayName>
			<Description>The lighting loads to be controlled.</Description>
		</Localization>
		<Visible>true</Visible>
	</Param>
	<Param Name="fanLoads">
		<Localization Language="en">
			<DisplayName>Fan Loads</DisplayName>
			<Description>The fan loads to be controlled.</Description>
		</Localization>
		<Visible>true</Visible>
	</Param>
	<Param Name="levels">
		<Localization Language="en">
			<DisplayName>Lighting Levels</DisplayName>
			<Description>The level the lighting loads will be set to when turned on.</Description>
		</Localization>
		<SystemDefault>Level</SystemDefault>
		<Visible>true</Visible>
	</Param>
	<Param Name="rampTime">
		<Localization Language="en">
			<DisplayName>Ramp Time</DisplayName>
			<Description>The time in seconds a load takes to ramp on.</Description>
		</Localization>
		<SystemDefault>RampTime</SystemDefault>
		<Visible>true</Visible>
	</Param>
	<Param Name="fadeTime">
		<Localization Language="en">
			<DisplayName>Fade Time</DisplayName>
			<Description>The time in seconds a load takes to fade off.</Description>
		</Localization>
		<SystemDefault>FadeTime</SystemDefault>
		<Visible>true</Visible>
	</Param>
	<Param Name="fanOnDelay">
		<Localization Language="en">
			<DisplayName>Fan On Delay</DisplayName>
			<Description>The time in seconds to delay before turning the fan loads on.</Description>
		</Localization>
		<SystemDefault>Delay</SystemDefault>
		<Visible>true</Visible>
	</Param>
	<Param Name="fanOffDelay">
		<Localization Language="en">
			<DisplayName>Fan Off Delay</DisplayName>
			<Description>The time in seconds to delay before turning the fan loads off.</Description>
		</Localization>
		<SystemDefault>OffDelay</SystemDefault>
		<Visible>true</Visible>
	</Param>	
</FunctionInfo>
*/
procedure LightAndFan(Load:lightLoads[], Load:fanLoads[], Level:levels[], Seconds:rampTime, Seconds:fadeTime, Delay:fanOnDelay, Delay:fanOffDelay)
{
	new lightCount = sizeof(lightLoads);
	new fanCount = sizeof(fanLoads);
	new i;
	
	if (lightCount > 0 && fanCount > 0)
	{
		new bool:funcOn = false;
		for (i = 0 ; i < lightCount ; i++)
		{
			if (Load_GetLevel(lightLoads[i]) > 0)
			{
				funcOn = true;
				break;
			}
		}
		if (funcOn)
		{
			BatchInvoke( Load_Ramp(Load:0, Load_RampType_Variable, fadeTime, MISC_MINLEVEL), _:lightLoads);
			Delay(Seconds:fanOffDelay);
			BatchInvoke( Load_SetLevel(Load:0, MISC_MINLEVEL), _:fanLoads);
		}
		else
		{
			for (i = 0 ; i < lightCount ; i++)
			{
				Load_Ramp(lightLoads[i], Load_RampType_Variable, rampTime, levels[i]);
			}
			Delay(Seconds:fanOnDelay);
			BatchInvoke( Load_SetLevel(Load:0, MAXLEVEL), _:fanLoads);
		}
	}
}

/*
<FunctionInfo>
	<Localization Language="en">
		<DisplayName>Adjust Loads</DisplayName>
		<Description>For Internal Use Only.</Description>
		<TitleFormat>Adjust Loads - For Internal Use Only</TitleFormat>
		<DisplayFormat>Adjust Loads - For Internal Use Only</DisplayFormat>
	</Localization>
	<BrowserClass>None</BrowserClass>
	<RequiredMethods>
		<MethodName>Load_GetLevel</MethodName>
		<MethodName>Load_Ramp</MethodName>
	</RequiredMethods>
	<Param Name="loads">
		<Localization Language="en">
			<DisplayName>Loads</DisplayName>
			<Description>The lighting loads to be controlled.</Description>
		</Localization>
		<Visible>true</Visible>
	</Param>
	<Param Name="rampRate">
		<Localization Language="en">
			<DisplayName>Ramp Rate</DisplayName>
			<Description>The amount of time it takes to ramp from 0 to 100 percent.</Description>
		</Localization>
		<SystemDefault>AdjustRate</SystemDefault>
		<Visible>true</Visible>
	</Param>
	<Param Name="bumpPercentage">
		<Localization Language="en">
			<DisplayName>bumpPercentage</DisplayName>
			<Description>The load level percentage the lighting loads will jump when bumped.</Description>
		</Localization>
		<SystemDefault>BumpPercentage</SystemDefault>
		<Visible>true</Visible>
	</Param>
</FunctionInfo>
*/
public Number:AdjustLoads(Load:loads[], Seconds:rampRate, Level:bumpPercentage)
{
	if (GetEvent() == Event_Adjust)
	{
		if (Adjust_Type:GetEventParam2() == Adjust_Type_Raise)
		{
			switch (AdjustActionType:GetEventParam1())
			{
			case AdjustAction_Start:
				{
					BatchInvoke( Load_Ramp(Load:0, Load_RampType_Adjust, rampRate, MAXLEVEL), _:loads);
					return Number:(rampRate / 100);
				}
			case AdjustAction_Stop:
				{
					BatchInvoke( Load_Ramp(Load:0, Load_RampType_Stop, rampRate, MAXLEVEL), _:loads);
				}
			case AdjustAction_Bump:
				{
					Increment(loads, bumpPercentage, Seconds:0.5, false);
				}
			}
		}
		else if (Adjust_Type:GetEventParam2() == Adjust_Type_Lower)
		{
			switch (AdjustActionType:GetEventParam1())
			{
			case AdjustAction_Start:
				{
					BatchInvoke( Load_Ramp(Load:0, Load_RampType_Adjust, rampRate, MISC_MINLEVEL), _:loads);
					return Number:(-1 * (rampRate / 100));
				}
			case AdjustAction_Stop:
				{
					BatchInvoke( Load_Ramp(Load:0, Load_RampType_Stop, rampRate, MISC_MINLEVEL), _:loads);
				}
			case AdjustAction_Bump:
				{
					Decrement(loads, bumpPercentage, Seconds:0.5, false);
				}
			}
		}
	}
	return Number:0;
}

/*
<FunctionInfo>
	<Localization Language="en">
		<DisplayName>Adjust Scene Loads</DisplayName>
		<Description>For Internal Use Only.</Description>
		<TitleFormat>Adjust Loads - For Internal Use Only</TitleFormat>
		<DisplayFormat>Adjust Loads - For Internal Use Only</DisplayFormat>
	</Localization>
	<BrowserClass>None</BrowserClass>
	<RequiredMethods>
		<MethodName>Load_GetLevel</MethodName>
		<MethodName>Load_Ramp</MethodName>
	</RequiredMethods>
	<Param Name="loads">
		<Localization Language="en">
			<DisplayName>Loads</DisplayName>
			<Description>The lighting loads to be controlled.</Description>
		</Localization>
		<Visible>true</Visible>
	</Param>
	<Param Name="rampRate">
		<Localization Language="en">
			<DisplayName>Ramp Rate</DisplayName>
			<Description>The amount of time it takes to ramp from 0 to 100 percent.</Description>
		</Localization>
		<SystemDefault>AdjustRate</SystemDefault>
		<Visible>true</Visible>
	</Param>
	<Param Name="bumpPercentage">
		<Localization Language="en">
			<DisplayName>bumpPercentage</DisplayName>
			<Description>The load level percentage the lighting loads will jump when bumped.</Description>
		</Localization>
		<SystemDefault>BumpPercentage</SystemDefault>
		<Visible>true</Visible>
	</Param>
</FunctionInfo>
*/
public Number:AdjustSceneLoads(Load:loads[], Seconds:rampRate, Level:bumpPercentage)
{
	new MemID:initialValue = GetMemID();
	new count = sizeof(loads);
	new Level:maxLevel;
	new Level:currentLevel;

	if (GetEvent() == Event_Adjust)
	{
		if (Adjust_Type:GetEventParam2() == Adjust_Type_Raise)
		{
			switch (AdjustActionType:GetEventParam1())
			{
			case AdjustAction_Start:
				{	
					if (DoesBufferExist(initialValue) || CreateBuffer(initialValue, count, false))
					{
						for (new i = 0 ; i < count ; i++)
						{
							currentLevel = Load_GetLevel(loads[i]);
							BufferSetAt(initialValue, i, _:currentLevel);
							if (maxLevel < currentLevel) maxLevel = currentLevel;
						}
						for (new i = 0 ; i < count ; i++)
						{
							Load_Ramp(loads[i], Load_RampType_Adjust, rampRate, MAXLEVEL - (maxLevel - Level:BufferGetAt(MemID:initialValue, i)));
						}
					}
					return Number:(rampRate / 100);
				}
			case AdjustAction_Stop:
				{
					BatchInvoke( Load_Ramp(Load:0, Load_RampType_Stop, rampRate, MAXLEVEL), _:loads);
					
					if (DoesBufferExist(initialValue))
					{
						for (new i = 0 ; i < count ; i++)
						{
							currentLevel = Load_GetLevel(loads[i]) - Level:BufferGetAt(initialValue, i);
							if (currentLevel > maxLevel) maxLevel = currentLevel;
						}
						for (new i = 0 ; i < count ; i++)
						{
							Load_Ramp(loads[i], Load_RampType_Variable, Seconds:0.5, Level:BufferGetAt(initialValue, i) + maxLevel);
						}
					}
				}
			case AdjustAction_Bump:
				{
					for (new i = 0 ; i < count ; i++)
					{
						currentLevel = Load_GetLevel(loads[i]);
						if (maxLevel < currentLevel) maxLevel = currentLevel;
					}
									
					Increment(loads, ((maxLevel + bumpPercentage) > MAXLEVEL) ? (MAXLEVEL - maxLevel) : bumpPercentage, Seconds:0.5, false);
				}
			}
		}
		else if (Adjust_Type:GetEventParam2() == Adjust_Type_Lower)
		{
			maxLevel = Level:100.0;
			switch (AdjustActionType:GetEventParam1())
			{
			case AdjustAction_Start:
				{	
					if (DoesBufferExist(initialValue) || CreateBuffer(initialValue, count, false))
					{
						for (new i = 0 ; i < count ; i++)
						{
							currentLevel = Load_GetLevel(loads[i]);
							BufferSetAt(initialValue, i, _:currentLevel);
							if (maxLevel > currentLevel) maxLevel = currentLevel;
						}
						for (new i = 0 ; i < count ; i++)
						{
							Load_Ramp(loads[i], Load_RampType_Adjust, rampRate, MISC_MINLEVEL + (Level:BufferGetAt(MemID:initialValue, i) - maxLevel));
						}
					}
					return Number:(-1 * (rampRate / 100));
				}
			case AdjustAction_Stop:
				{
					maxLevel = Level:0.0;
					BatchInvoke( Load_Ramp(Load:0, Load_RampType_Stop, rampRate, MISC_MINLEVEL), _:loads);
					
					if (DoesBufferExist(initialValue))
					{
						for (new i = 0 ; i < count ; i++)
						{
							currentLevel = Level:BufferGetAt(initialValue, i) - Load_GetLevel(loads[i]);
							if (currentLevel > maxLevel) maxLevel = currentLevel;
						}
						for (new i = 0 ; i < count ; i++)
						{
							Load_Ramp(loads[i], Load_RampType_Variable, Seconds:0.5, Level:BufferGetAt(initialValue, i) - maxLevel);
						}
					}
				}
			case AdjustAction_Bump:
				{
					maxLevel = Level:100.0;
					for (new i = 0 ; i < count ; i++)
					{
						currentLevel = Load_GetLevel(loads[i]);
						if (maxLevel > currentLevel) maxLevel = currentLevel;
					}
									
					Decrement(loads, ((maxLevel - bumpPercentage) < MISC_MINLEVEL) ?  (maxLevel) : bumpPercentage, Seconds:0.5, false);
				}
			}
		}
	}
	return Number:0;
}

/*
<FunctionInfo>
	<Localization Language="en">
		<DisplayName>Average Load Level</DisplayName>
		<Description>For Internal Use Only.</Description>
		<TitleFormat>Adjust Loads - For Internal Use Only</TitleFormat>
		<DisplayFormat>Adjust Loads - For Internal Use Only</DisplayFormat>
	</Localization>
	<BrowserClass>None</BrowserClass>
	<RequiredMethods>
		<MethodName>Load_GetLevel</MethodName>
	</RequiredMethods>
	<Param Name="loads">
		<Localization Language="en">
			<DisplayName>Loads</DisplayName>
			<Description>The lighting loads to be examined.</Description>
		</Localization>
		<Visible>true</Visible>
	</Param>
	<Return>
		<ValidRange>
			<UpperBound Type="int">100</UpperBound>
		</ValidRange>
	</Return>
</FunctionInfo>
*/
public Number:AverageLoadLevel(Load:loads[])
{
	new count = sizeof(loads);
	new sum = 0;
	for (new i = 0 ; i < count ; i++)
	{
		sum += _:Load_GetLevel(loads[i]);
	}
	
	return Number:(sum / (count * 1000));
}

/*
<FunctionInfo>
	<Localization Language="en">
		<DisplayName>Scene Load Level</DisplayName>
		<Description>For Internal Use Only.</Description>
		<TitleFormat>Adjust Loads - For Internal Use Only</TitleFormat>
		<DisplayFormat>Adjust Loads - For Internal Use Only</DisplayFormat>
	</Localization>
	<BrowserClass>None</BrowserClass>
	<RequiredMethods>
		<MethodName>Load_GetLevel</MethodName>
	</RequiredMethods>
	<Param Name="loads">
		<Localization Language="en">
			<DisplayName>Loads</DisplayName>
			<Description>The lighting loads to be examined.</Description>
		</Localization>
		<Visible>true</Visible>
	</Param>
	<Return>
		<ValidRange>
			<UpperBound Type="int">100</UpperBound>
		</ValidRange>
	</Return>
</FunctionInfo>
*/
public Number:SceneLoadLevel(Load:loads[])
{
	new count = sizeof(loads);
	if (count > 0)
	{
		new Level:highLevel = Level:0;
		new Level:lowLevel = Level:100.0;
		new Level:temp;
		
		for (new i = 0 ; i < count ; i++)
		{
			temp = Load_GetLevel(loads[i]);
			if (temp > highLevel) highLevel = temp;
			if (temp < lowLevel) lowLevel = temp;
		}

		return Number:fround(fdiv(Level:100.0, Level:100.0 - (highLevel - lowLevel)) * (lowLevel));
	}
	return Number:0;
}?>
    </Object>
    <Object>
      <Script VID="10174" Master="9722" MTime="">
        <Name>Enums.sma</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Script</ObjectType>
      </Script>
      <?File / 
/*
Enums.sma - Enumeration Library
Copyright (c) 2012, Vantage Controls, Inc.
Version 0.1

ENUMS:
FunctionDirection
TwoState
ThreeState
FourState
FiveState
TenState

FUNCTIONS:

PROCEDURES:

QUERIES:

*/

#if defined _Enums_included
  #endinput
#endif

#define _Enums_included

/*
<EnumInfo>
	<Localization Language="en">
		<DisplayName>Direction</DisplayName>
		<Description>The direction of a function.</Description>
		<Category>None</Category>
	</Localization>
	<IsLEDStyleType>false</IsLEDStyleType>
	<Localizable>false</Localizable>
    <Enumerator Name="Up">
        <Localization Language="en">
            <DisplayName>Up</DisplayName>
        </Localization>
    </Enumerator>
    <Enumerator Name="Down">
        <Localization Language="en">
            <DisplayName>Down</DisplayName>
        </Localization>
    </Enumerator>
		<Enumerator Name="NoDirection">
				<Localization Language="en">
            <DisplayName>No Direction</DisplayName>
        </Localization>
    </Enumerator>    
</EnumInfo>
*/
enum FunctionDirection
{
	Up = 1,	
	Down = 0,
	NoDirection = 2
};

/*
<EnumInfo>
	<Localization Language="en">
		<DisplayName>CompareType</DisplayName>
		<Description>A type of comparison that can be performed.</Description>
		<Category>None</Category>
	</Localization>
	<IsLEDStyleType>false</IsLEDStyleType>
	<Localizable>false</Localizable>
    <Enumerator Name="Equal">
        <Localization Language="en">
            <DisplayName>Equals</DisplayName>
        </Localization>
    </Enumerator>
    <Enumerator Name="NotEqual">
        <Localization Language="en">
            <DisplayName>Does Not Equal</DisplayName>
        </Localization>
    </Enumerator>
    <Enumerator Name="Greater">
        <Localization Language="en">
            <DisplayName>Is Greater Than</DisplayName>
        </Localization>
    </Enumerator>
    <Enumerator Name="Less">
        <Localization Language="en">
            <DisplayName>Is Less Than</DisplayName>
        </Localization>
    </Enumerator>
    <Enumerator Name="GreaterOrEqual">
        <Localization Language="en">
            <DisplayName>Is Greater or Equal To</DisplayName>
        </Localization>
    </Enumerator>    
	<Enumerator Name="LessOrEqual">
        <Localization Language="en">
            <DisplayName>Is Less Than or Equal To</DisplayName>
        </Localization>
    </Enumerator>
</EnumInfo>
*/
enum CompareType
{
	Equal,
	NotEqual,
	Greater,
	Less,
	GreaterOrEqual,
	LessOrEqual
};

/*
<EnumInfo>
	<Localization Language="en">
		<DisplayName>One State</DisplayName>
		<Description>An LED Style with one state.</Description>
		<Category>Standard</Category>
	</Localization>
	<IsLEDStyleType>True</IsLEDStyleType>
    <Enumerator Name="SingleState">
        <Localization Language="en">
            <DisplayName>Single State</DisplayName>
        </Localization>
    </Enumerator>
</EnumInfo>
*/
enum OneState
{
	SingleState
};


/*
<EnumInfo>
	<Localization Language="en">
		<DisplayName>Two State</DisplayName>
		<Description>An LED Style with two states.</Description>
		<Category>Standard</Category>
	</Localization>
	<IsLEDStyleType>True</IsLEDStyleType>
</EnumInfo>
*/
enum TwoState
{
	First,
	Second
};

/*
<EnumInfo>
	<Localization Language="en">
		<DisplayName>Three State</DisplayName>
		<Description>An LED Style with three states.</Description>
		<Category>Standard</Category>
	</Localization>
	<IsLEDStyleType>True</IsLEDStyleType>
</EnumInfo>
*/
enum ThreeState
{
	First,
	Second,
	Third
};

/*
<EnumInfo>
	<Localization Language="en">
		<DisplayName>Four State</DisplayName>
		<Description>An LED Style with four states.</Description>
		<Category>Standard</Category>
	</Localization>
	<IsLEDStyleType>True</IsLEDStyleType>
</EnumInfo>
*/
enum FourState
{
	First,
	Second,
	Third,
	Fourth
};

/*
<EnumInfo>
	<Localization Language="en">
		<DisplayName>Five State</DisplayName>
		<Description>An LED Style with four states.</Description>
		<Category>Standard</Category>
	</Localization>
	<IsLEDStyleType>True</IsLEDStyleType>
</EnumInfo>
*/
enum FiveState
{
	First,
	Second,
	Third,
	Fourth,
	Fifth
};

/*
<EnumInfo>
	<Localization Language="en">
		<DisplayName>Ten State</DisplayName>
		<Description>An LED Style with four states.</Description>
		<Category>Standard</Category>
	</Localization>
	<IsLEDStyleType>True</IsLEDStyleType>
</EnumInfo>
*/
enum TenState
{
	First,
	Second,
	Third,
	Fourth,
	Fifth,
	Sixth,
	Seventh,
	Eighth,
	Ninth,
	Tenth
};

/*
<EnumInfo>
	<Localization Language="en">
		<DisplayName>Fifty State</DisplayName>
		<Description>An LED Style with 10 states representing values from 0 to 50.</Description>
		<Category>Standard</Category>
	</Localization>
	<IsLEDStyleType>True</IsLEDStyleType>
</EnumInfo>
*/
enum FiftyState
{
	Five = 5,
	Ten = 10,
	Fifteen = 15,
	Twenty = 20,
	TwentyFive = 25,
	Thirty = 30,
	ThirtyFive = 35,
	Fourty = 40,
	FourtyFive = 45,
	Fifty = 50
};

/*
<EnumInfo>
	<Localization Language="en">
		<DisplayName>One Hundred State</DisplayName>
		<Description>An LED Style with 10 states representing values from 0 to 100.</Description>
		<Category>Standard</Category>
	</Localization>
	<IsLEDStyleType>True</IsLEDStyleType>
</EnumInfo>
*/
enum OneHundredState
{
	Ten = 10,
	Twenty = 20,
	Thirty = 30,
	Fourty = 40,
	Fifty = 50,
	Sixty = 60,
	Seventy = 70,
	Eighty = 80,
	Ninety = 90,
	OneHundred = 100
};?>
    </Object>
    <Object>
      <Script VID="10175" Master="9722" MTime="">
        <Name>Lighting\Dim.sma</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Script</ObjectType>
      </Script>
      <?File / 
/*
Dim.sma - Dim Procedure Library
Copyright (c) 2012, Vantage Controls, Inc.
Version 0.4

ENUMS:
	DimType
	HoldOrRelease

FUNCTIONS:
	SetLoadsToLowestValues
	HoldOrRelease:GetHoldOrRelease
	TheRampStart
	Level:GetLargestLoadLevel
	Level:GetSmallestLoadLevel
	FunctionDirection:GetDirection
	SetDirection
	SaveLearnedLevels
	DimToggle
	Level:GetGreatestChange
	CreateDirectionBuffer
	RampLoadsToLevel
	RampLoadsToBuffer
	
PROCEDURES:
	Dim
	Dim Scene
	Dim Cycle
	Default Dimmer
	OnRaise
	OffLower
	Raise
	Lower

QUERIES:
*/

#if defined _Dim_included
  #endinput
#endif

#define _Dim_included

#include <load>
#include <button>
#include <buffer>
#include <time>
#include <task>
#include <core>

#include "..\Query"
#include "..\Enums"

#define DIM_MAXLEVEL 100.0
#define DIM_MINLEVEL 0.0
#define RAMPEDDIM_MINLEVEL 1.0
#define DIM_ADJUSTTIME 0.5
#define DEFAULT_RAMP_TIME 1.5
#define DEFAULT_FADE_TIME 5.0
#define UNAVAILABLE_LOAD -1

/*
<EnumInfo>
	<Localization Language="en">
		<DisplayName>Dim Type</DisplayName>
		<Description>The action to perform when a press and hold is used on a Dim Function.</Description>
		<Category>Lighting</Category>
	</Localization>
	<IsLEDStyleType>false</IsLEDStyleType>
	<Localizable>false</Localizable>
	<Enumerator Name="DimStatus_On">
		<Localization Language="en">
			<DisplayName>Dim is On</DisplayName>
		</Localization>
	</Enumerator>
	<Enumerator Name="DimStatus_Off">
		<Localization Language="en">
			<DisplayName>Dim is Off</DisplayName>
		</Localization>
	</Enumerator>
	<Enumerator Name="DimStatus_Ramping">
		<Localization Language="en">
			<DisplayName>Dim is Ramping</DisplayName>
		</Localization>
	</Enumerator>
</EnumInfo>
*/
enum DimStatus
{
	DimStatus_Off,
	DimStatus_On,
	DimStatus_Ramping
};

static DimStatus:gDimStatus = DimStatus_Off;
public MemID:g_firstDim = MemID:-1;
static s_taskState = 0; 
static s_direction = 0;

/*
<FunctionInfo>
	<Localization Language="en">
		<Description>Ramps a number of loads to a single level.</Description>
	</Localization>
</FunctionInfo>
*/
RampLoadsToLevel(Load:loads[], Load_RampType:rampCommand, Seconds:rampRate, Level:level, count)
{
	#pragma unused count
	BatchInvoke( Load_Ramp(Load:0, rampCommand, rampRate, level), _:loads);
}

RampLoadsToLevelAutoOff(Load:loads[], Load_RampType:cmd, Seconds:ramptime, Level:finallevel, Load_RampType:offcmd, Seconds:offramptime, Seconds:offtimeout, count)
{
	#pragma unused count
	BatchInvoke( Load_RampAutoOff(Load:0, cmd, ramptime, finallevel, offcmd, offramptime, offtimeout), _:loads);
}

/*
<FunctionInfo>
	<Localization Language="en">
		<Description>Ramps a number of loads to the corresponding value contained in a buffer.</Description>
	</Localization>
</FunctionInfo>
*/
RampLoadsToBuffer(Load:loads[], Load_RampType:rampCommand, Seconds:rampRate, Level:levels[], MemID:bufferid, count)
{
	if (DoesBufferExist(bufferid))
	{
		for (new i = 0 ; i < count ; i++)
		{
			Load_Ramp(loads[i], rampCommand, rampRate, Level:BufferGetAt(MemID:bufferid, i));
		}
	}
	else
	{
		for (new i = 0 ; i < count ; i++)
		{
			Load_Ramp(loads[i], rampCommand, rampRate, Level:levels[i]);
		}
	}
}

RampLoadsToBufferAutoOff(Load:loads[], Load_RampType:rampCommand, Seconds:rampRate, Level:levels[], MemID:bufferid, Load_RampType:offcmd, Seconds:offramptime, Seconds:offtimeout, count)
{
	if (DoesBufferExist(bufferid))
	{
		for (new i = 0 ; i < count ; i++)
		{
			Load_RampAutoOff(loads[i], rampCommand, rampRate, Level:BufferGetAt(MemID:bufferid, i), offcmd, offramptime, offtimeout);
		}
	}
	else
	{
		for (new i = 0 ; i < count ; i++)
		{
			Load_RampAutoOff(loads[i], rampCommand, rampRate, Level:levels[i], offcmd, offramptime, offtimeout);
		}
	}
}

/*
<FunctionInfo>
	<Localization Language="en">
		<Description>Starts loads ramping to their maximum values.</Description>
	</Localization>
	<Param Name="loads">
		<Localization Language="en">
			<Description>The loads to be controlled.</Description>
		</Localization>
	</Param>
	<Param Name="direction">
		<Localization Language="en">
			<Description>The direction to ramp the loads.</Description>
		</Localization>
	</Param>
	<Param Name="rate">
		<Localization Language="en">
			<Description>The rate in seconds at which the loads will be ramped.</Description>
		</Localization>
	</Param>
</FunctionInfo>
*/
TheRampStart(Load:loads[], FunctionDirection:direction, Seconds:rate)
{
	new count = sizeof(loads);			// The number of loads we are examining

	if (direction == Up)
	{
		RampLoadsToLevel(loads, Load_RampType_Adjust, rate, DIM_MAXLEVEL, count);
	}
	else
	{
		RampLoadsToLevel(loads, Load_RampType_Adjust, rate, RAMPEDDIM_MINLEVEL, count);
	}
}

/*
<FunctionInfo>
	<Localization Language="en">
		<Description>Reports the lowest load level in the specified group of loads.</Description>
	</Localization>
	<Param Name="loads">
		<Localization Language="en">
			<Description>The loads whose levels are to be compared.</Description>
		</Localization>
	</Param>	
</FunctionInfo>
*/
Level:GetSmallestLoadLevel(Load:loads[])
{
	new count = sizeof(loads);		// The number of loads we are examining
	new Level:retVal = DIM_MAXLEVEL;	// The value the function will return

	for (new i = 0 ; i < count ; i++)
	{
		new Level:loadLevel = Load_GetLevel(loads[i]);
		if (loadLevel < retVal)
		{
			retVal = loadLevel;
		}
	}

	return retVal;
}

/*
<FunctionInfo>
	<Localization Language="en">
		<Description>Reports the lowest load level in the specified levels array.</Description>
	</Localization>
	<Param Name="levels">
		<Localization Language="en">
			<Description>The levels to be compared.</Description>
		</Localization>
	</Param>	
</FunctionInfo>
*/
Level:GetSmallestLevel(Level:levels[])
{
	new count = sizeof(levels);
	new Level:retVal = DIM_MAXLEVEL;
	
	for (new i = 0 ; i < count ; i++)
	{
		if (levels[i] < retVal)
		{
			retVal = levels[i];
		}
	}
	return retVal;
}

Level:GetSmallestBufferLevel(MemID:learnedLevels, size)
{
	new Level:retVal = DIM_MAXLEVEL;
	new Level:tempLevel = Level:0.0;
	
	for (new i = 0 ; i < size ; i++)
	{
		tempLevel = Level:BufferGetAt(MemID:learnedLevels, i);
		if (tempLevel < retVal)
		{
			retVal = tempLevel;
		}
	}
	
	return retVal;
}

/*
<FunctionInfo>
	<Localization Language="en">
		<Description>Reports the highest load level in the specified group of loads.</Description>
	</Localization>
	<Param Name="loads">
		<Localization Language="en">
			<Description>The loads whose levels are to be compared.</Description>
		</Localization>
	</Param>	
</FunctionInfo>
*/
Level:GetLargestLoadLevel(Load:loads[])
{
	new count = sizeof(loads);		// The number of loads we are examining
	new Level:retVal = DIM_MINLEVEL;	// The value the function will return
	new Level:currentLevel;			// The current level of the load being examined

	for (new i = 0 ; i < count ; i++)
	{
		currentLevel = Load_GetLevel(loads[i]);
		if (currentLevel > retVal)
		{
			retVal = currentLevel;
		}
	}

	return retVal;
}

/*
<FunctionInfo>
	<Localization Language="en">
		<Description>Reports the direction stored in the buffer with the specified ID.</Description>
	</Localization>
	<Param Name="directionid">
		<Localization Language="en">
			<Description>The ID of the buffer storing the direction.</Description>
		</Localization>
	</Param>	
</FunctionInfo>
*/
FunctionDirection:GetDirection(MemID:directionid)
{
	new FunctionDirection:retValue = FunctionDirection:NoDirection;	// The value the function will return

	if (DoesBufferExist(directionid))
	{
		retValue = FunctionDirection:BufferGetAt(directionid, 0);
	}

	return retValue;
}

/*
<FunctionInfo>
	<Localization Language="en">
		<Description>Sets the direction stored in the buffer to that given.</Description>
	</Localization>
	<Param Name="directionid">
		<Localization Language="en">
			<Description>The ID of the buffer storing the direction.</Description>
		</Localization>
	</Param>
	<Param Name="direction">
		<Localization Language="en">
			<Description>The new direction to store.</Description>
		</Localization>
	</Param>	
</FunctionInfo>
*/
SetDirection(MemID:directionid, FunctionDirection:direction)
{
	if (DoesBufferExist(directionid))
	{
		BufferSetAt(directionid, 0, _:direction);
	}
}

/*
<FunctionInfo>
	<Localization Language="en">
		<Description>Saves the current levels of the loads to the buffer with the specified id.</Description>
	</Localization>
	<Param Name="learnedid">
		<Localization Language="en">
			<Description>The ID of the buffer storing the levels.</Description>
		</Localization>
	</Param>
	<Param Name="loads">
		<Localization Language="en">
			<Description>The loads whose levels are to be read.</Description>
		</Localization>
	</Param>	
	<Param Name="minLearnedLevel">
		<Localization Language="en"></Localization>
	</Param>
</FunctionInfo>
*/
SaveLearnedLevels(MemID:learnedid, Load:loads[], Level:minLearnedLevel, count)
{
	if (DoesBufferExist(learnedid))
	{
		new Level:loadLevel;
		for (new i = 0 ; i < count ; i++)
		{
			loadLevel = Load_GetLevel(loads[i]);
			if (loadLevel < minLearnedLevel)
				BufferSetAt(learnedid, i, _:minLearnedLevel);
			else
				BufferSetAt(learnedid, i, _:loadLevel);
		}
	}
}

/*
<FunctionInfo>
	<Localization Language="en">
		<Description>Saves the current levels of the loads to the buffer with the specified id.</Description>
	</Localization>
	<Param Name="minLearnedLevel">
		<Localization Language="en"></Localization>
	</Param>
</FunctionInfo>
*/
SaveSceneLearnedLevels(MemID:learnedid, Load:loads[], Level:minLearnedLevel)
{
	new count = sizeof(loads);		// The number of loads that want to be saved
	if (DoesBufferExist(learnedid))
	{
		new Level:largestLoadLevel = (GetLargestLoadLevel(loads));
		if (largestLoadLevel < minLearnedLevel)
		{
			new Level:changeAmount = minLearnedLevel - largestLoadLevel;
			for (new i = 0 ; i < count ; i++)
			{
				BufferSetAt(learnedid, i, _:(Load_GetLevel(loads[i])+changeAmount));
			}
		}
		else
		{
			for (new i = 0 ; i < count ; i++)
			{
				BufferSetAt(learnedid, i, _:Load_GetLevel(loads[i]));
			}			
		}
	}	
}

/*
<FunctionInfo>
	<Localization Language="en">
		<Description>Toggles loads from off to their learned levels and vice versa.</Description>
	</Localization>
	<Param Name="loads">
		<Localization Language="en">
			<Description>The loads to toggle.</Description>
		</Localization>
	</Param>
	<Param Name="direction">
		<Localization Language="en">
			<Description>The ID of the buffer where the ramp direction is stored.</Description>
		</Localization>
	</Param>
	<Param Name="learnedLevels">
		<Localization Language="en">
			<Description>The ID of the buffer where the learned levels are stored.</Description>
		</Localization>
	</Param>
	<Param Name="rampTime">
		<Localization Language="en">
			<Description>The time in seconds it will take to toggle the loads to their new levels.</Description>
		</Localization>
		<SystemDefault>Ramp Time</SystemDefault>
	</Param>
	<Param Name="fadeTime">
		<Localization Language="en">
			<Description>The time in seconds it will take to toggle the loads to their new levels.</Description>
		</Localization>
		<SystemDefault>FadeTime</SystemDefault>
	</Param>	
	<Param Name="levels">
		<Localization Language="en">
			<Description>The levels the loads will be toggled to or from.</Description>
		</Localization>
	</Param>
</FunctionInfo>
*/
DimToggle(Load:loads[], MemID:direction, MemID:learnedLevels, Seconds:rampTime, Seconds:fadeTime, Level:levels[], bool:TrackLED)
{
	new count = sizeof(loads);
	if ((TrackLED && Task_GetState(GetCurrentTask()) > TaskState:0) || (!TrackLED && !AllLoadsAtLevel(loads, DIM_MINLEVEL)))
	{
		RampLoadsToLevel(loads, Load_RampType_Variable, fadeTime, DIM_MINLEVEL, count);
		SetDirection(direction, Up);
		
		gDimStatus = DimStatus_Off;
	}
	else
	{
		RampLoadsToBuffer(loads, Load_RampType_Variable, rampTime, levels, learnedLevels, count);
		SetDirection(direction, Down);
		gDimStatus = DimStatus_On;
	}
}

/*
<FunctionInfo>
	<Localization Language="en">
		<Description>Reports the level of the load which has changed the most with the last ramp.</Description>
	</Localization>
	<Param Name="loads">
		<Localization Language="en">
			<Description>The loads whose changes are to be compared.</Description>
		</Localization>
	</Param>
	<Param Name="initialvalue">
		<Localization Language="en">
			<Description>The ID of the buffer where the initial load levels are stored.</Description>
		</Localization>
	</Param>
	<Param Name="direction">
		<Localization Language="en">
			<Description>The ID of the buffer where the direction is stored.</Description>
		</Localization>
	</Param>
</FunctionInfo>
*/
Level:GetGreatestChange(Load:loads[], MemID:initialvalue, MemID:direction)
{
	new count = sizeof(loads);				// The number of loads to be examined
	new i;											// The incrementor
	new Level:tempChange = 0;	// The value to be returned

	if (DoesBufferExist(initialvalue))
	{
		new Level:tempFinal;
		new Level:tempInitial;
		new Level:changeAmount;
		
		// FIND THE LEVEL WHICH CHANGED THE MOST
		for (i = 0 ; i < count ; i++)
		{
			tempFinal = Load_GetLevel(loads[i]);
			tempInitial = Level:BufferGetAt(initialvalue, i);
			if (_:tempInitial > -1)
			{
				changeAmount = tempFinal - tempInitial;
				// If the direction is now down and was up when dimming
				if (GetDirection(direction) == Down)
				{
					// If the level change is greater than tempChange, then save it over tempLevel.
					if ((changeAmount) > tempChange)
					{
						tempChange = changeAmount;
					}
				}
				else
				{
					// If the  level changel is less than tempChange, then save it over tempLevel.
					if ((changeAmount) < tempChange)
					{
						tempChange = changeAmount;
					}
				}
			}
		}
	}
	
	// Return the value of the largest change
	return tempChange;
}


/*
<FunctionInfo>
	<Localization Language="en">
		<Description>Creates and populates a buffer used to store the procedures learned levels.</Description>
	</Localization>
	<Param Name="loads">
		<Localization Language="en">
			<Description>The loads whose changes are to be compared.</Description>
		</Localization>
	</Param>
	<Param Name="levels">
		<Localization Language="en">
			<Description>The levels used to set the buffer.</Description>
		</Localization>
	</Param>
	<Param Name="learnedLevels">
		<Localization Language="en">
			<Description>The ID of the buffer where the levels are stored.</Description>
		</Localization>
	</Param>
</FunctionInfo>
*/
CreateLearnedLevelsBuffer(Load:loads[], Level:levels[], MemID:learnedLevels)
{
	new count = sizeof(loads);
	if (!DoesBufferExist(learnedLevels) && CreateBuffer(learnedLevels, count, true))
	{
		BufferSetRange(learnedLevels, _:levels, 0, count);
	}
}

/*
<FunctionInfo>
	<Localization Language="en">
		<Description>Creates and populates a buffer used to store the initial levels.</Description>
	</Localization>
	<Param Name="loads">
		<Localization Language="en">
			<Description>The loads whose changes are to be compared.</Description>
		</Localization>
	</Param>
	<Param Name="learnedLevels">
		<Localization Language="en">
			<Description>The ID of the buffer where the levels are stored.</Description>
		</Localization>
	</Param>
</FunctionInfo>
*/
CreateInitialLevelBuffer(Load:loads[], MemID:initialValue)
{
	new count = sizeof(loads);
	if (DoesBufferExist(initialValue) || CreateBuffer(initialValue, count, false))
	{
		for (new i = 0 ; i < count ; i++)
		{
			BufferSetAt(initialValue, i, _:Load_GetLevel(loads[i]));
		}
	}
}

/*
<FunctionInfo>
	<Localization Language="en">
		<Description>Creates and populates a buffer used to store the direction of the next ramp.</Description>
	</Localization>
</FunctionInfo>
*/
CreateDirectionBuffer(MemID:direction, Load:loads[])
{
	if (!DoesBufferExist(direction))
	{
		if (AllLoadsAtLevel(loads, DIM_MINLEVEL))
		{
			CreateBuffer(direction, 1, true);
			SetDirection(direction, Up);
		}
		else
		{
			CreateBuffer(direction, 1, true);
			SetDirection(direction, Down);
		}
	}
}

SetHoldOccurredBuffer(MemID:hold, bool:value)
{
	if (!DoesBufferExist(hold))
	{
		CreateBuffer(hold, 1, false);
	}

	BufferSetAt(hold, 0, _:value);
}

GetHoldOccurredBuffer(MemID:hold)
{
	if (DoesBufferExist(hold))
	{
		return BufferGetAt(hold, 0);
	}

	return 0;
}


/*
<FunctionInfo>
	<Localization Language="en">
		<DisplayName>Dim</DisplayName>
		<Description>Toggles loads with a single press and ramps the loads with a press and hold.</Description>
		<TitleFormat>[loads] Dim</TitleFormat>
		<DisplayFormat>Dim [loads]</DisplayFormat>
	</Localization>
	<BrowserClass>GreenDimming</BrowserClass>
	<Supports>
		<QueryClass>Lighting</QueryClass>
		<QueryClass>Standard</QueryClass>
		<QueryClass>Dimming</QueryClass>
		<QueryClass>LearnedLighting</QueryClass>
	</Supports>
	<FunctionClasses>
		<FunctionClass>GoGreen</FunctionClass>
	</FunctionClasses>
	<DefaultQuery>LoadsOn</DefaultQuery>
	<AdjustProcedure>AdjustLoads</AdjustProcedure>
	<LevelProcedure>AverageLoadLevel</LevelProcedure>
	<Event>Hold</Event>
	<Event>Up</Event>
	<Event>Down</Event>	
	<Join>
		<Param>loads</Param>
		<Param>levels</Param>
	</Join>
	<RequiredMethods>
		<MethodName>Load_GetLevel</MethodName>
		<MethodName>Load_SetLevel</MethodName>
		<MethodName>Load_Ramp</MethodName>				
	</RequiredMethods>
	<Param Name="loads">
		<Localization Language="en">
			<DisplayName>Loads</DisplayName>
			<Description>The loads to be controlled.</Description>
		</Localization>
		<Visible>true</Visible>
	</Param>
	<Param Name="levels">
		<Localization Language="en">
			<DisplayName>Levels</DisplayName>
			<Description>The levels to which the loads are to be set.</Description>
		</Localization>
		<SystemDefault>Level</SystemDefault>
		<Visible>true</Visible>
	</Param>
	<Param Name="rampTime">
		<Localization Language="en">
			<DisplayName>Ramp Time</DisplayName>
			<Description>The time in seconds a load takes to ramp on.</Description>
		</Localization>
		<SystemDefault>RampTime</SystemDefault>
		<Visible>true</Visible>
	</Param>
	<Param Name="fadeTime">
		<Localization Language="en">
			<DisplayName>Fade Time</DisplayName>
			<Description>The time in seconds a load takes to fade off.</Description>
		</Localization>
		<SystemDefault>FadeTime</SystemDefault>
		<Visible>true</Visible>
	</Param>	
	<Param Name="rampRate">
		<Localization Language="en">
			<DisplayName>Adjust Rate</DisplayName>
			<Description>The time in seconds a load takes to ramp to full on or fade to full off.</Description>
		</Localization>
		<SystemDefault>AdjustRate</SystemDefault>
		<Visible>true</Visible>
	</Param>
	<Param Name="trackLED">
		<Localization Language="en">
			<DisplayName>Track LED</DisplayName>
			<Description>Specifies whether the state of the Dim will follow the LED State.
  (If the LED is off, the Dim will turn on the loads and if the LED is on, the Dim will turn them off)</Description>
		</Localization>
		<SystemDefault>TrackLED</SystemDefault>
	</Param>
	<Param Name="learnable">
		<Localization Language="en">
			<DisplayName>Memorize Levels</DisplayName>
			<Description>Specifies whether the value the loads are set to by a press and hold are remembered.</Description>
		</Localization>
		<SystemDefault>MemorizeLevels</SystemDefault>
		<Visible>true</Visible>
	</Param>
	<Param Name="learnedLevels">
		<Localization Language="en"></Localization>
		<Visible>false</Visible>
	</Param>
	<Param Name="minLearnedLevel">
		<Localization Language="en"></Localization>
		<Visible>false</Visible>
		<SystemDefault>MinimumLearnedLevel</SystemDefault>		
	</Param>
</FunctionInfo>
*/
procedure Dim(Load:loads[], Level:levels[], Seconds:rampTime, Seconds:fadeTime, Seconds:rampRate, bool:trackLED, bool:learnable, MemID:learnedLevels, Level:minLearnedLevel)
{
	// Note: the learnedLevels parameter, because of the MemID tag, is auto incremented for each scene node in the scene tree.
	static bool:held = false;
	new count = sizeof(loads);
	new MemID:initialValue = GetMemID();
	new EventType:currentEvent = GetEvent();
	new i;
	
	if (g_firstDim == MemID:-1)
	{
		g_firstDim = learnedLevels;
		s_taskState = _:Task_GetState(GetCurrentTask());
	}
	
	if (learnable && !DoesBufferExist(learnedLevels) && CreateBuffer(learnedLevels, count, true))
	{
		BufferSetRange(learnedLevels, _:levels, 0, count);
	}
		
	if (currentEvent == Event_ButtonDown)
	{
		held = false;
	}
	else if (currentEvent == Event_ButtonHold)
	{
		if (g_firstDim == learnedLevels)
		{
			held = true;
			gDimStatus = DimStatus_Ramping;
			if (AllLoadsAtLevel(loads, DIM_MINLEVEL))
			{
				s_direction = _:Up;
			}
			else if (AllLoadsAtLevel(loads, DIM_MAXLEVEL))
			{
				s_direction = _:Down;
			}
		}
		
		if (DoesBufferExist(initialValue) || CreateBuffer(initialValue, count, false))
		{
			for (i = 0 ; i < count ; i++)
			{
				BufferSetAt(initialValue, i, _:Load_GetLevel(loads[i]));
			}
		}

		if (s_direction == _:Up)
		{
			RampLoadsToLevel(loads, Load_RampType_Adjust, rampRate, DIM_MAXLEVEL, count);
		}
		else
		{
			RampLoadsToLevel(loads, Load_RampType_Adjust, rampRate, RAMPEDDIM_MINLEVEL, count);			
		}
	}
	else if (currentEvent == Event_ButtonUp)
	{
		if (held)
		{
			new Level:MaxChange = DIM_MINLEVEL;
			new Level:finalLevel = DIM_MAXLEVEL;
			new Level:tempInitial;
			new Level:changeAmount;
			
			if (g_firstDim == learnedLevels)
			{
				gDimStatus = DimStatus_Off;
				if (s_direction == _:Up)
					s_direction = _:Down;
				else
					s_direction = _:Up;
			}

			// We do this in a separate loop so we can stop all loads more quickly.
			for (i = 0 ; i < count ; i++)
			{
				if (Load_Ramp(loads[i], Load_RampType_Stop, Seconds:0, RAMPEDDIM_MINLEVEL) == -1)
				{
					BufferSetAt(initialValue, i, UNAVAILABLE_LOAD);
				}
			}

			for (i = 0 ; i < count ; i++)
			{
				tempInitial = Level:BufferGetAt(initialValue, i);
				if (_:tempInitial != UNAVAILABLE_LOAD)
				{
					changeAmount = Load_GetLevel(loads[i]) - tempInitial;
					// We have already flipped the direction here, so are checking the new direction. 
					if (s_direction == _:Down)
					{
						MaxChange = Level:max(_:changeAmount, _:MaxChange);
					}
					else
					{
						MaxChange = Level:min(_:changeAmount, _:MaxChange);
					}
				}
			}
			
			
			for (i = 0 ; i < count ; i++)
			{
				tempInitial = Level:BufferGetAt(initialValue, i);
				if (_:tempInitial != UNAVAILABLE_LOAD)
				{
					finalLevel = Level:clamp(_:(tempInitial + MaxChange), _:RAMPEDDIM_MINLEVEL, _:DIM_MAXLEVEL);

					Load_Ramp(loads[i], Load_RampType_Variable, Seconds:0.5, finalLevel);

					if (finalLevel > Level:0.0)
					{
						gDimStatus = DimStatus_On;
					}
				}
			}
			
			DestroyBuffer(initialValue);

			if (learnable) SaveLearnedLevels(learnedLevels, loads, minLearnedLevel, count);
		}
		else
		{
			if ((trackLED && s_taskState > 0) || (!trackLED && !AllLoadsAtLevel(loads, DIM_MINLEVEL)))
			{
				RampLoadsToLevel(loads, Load_RampType_Variable, fadeTime, DIM_MINLEVEL, count);
				if (g_firstDim == learnedLevels)
				{
					s_direction = _:Up;
					gDimStatus = DimStatus_Off;
				}
			}
			else
			{
				RampLoadsToBuffer(loads, Load_RampType_Variable, rampTime, levels, learnedLevels, count);
				if (g_firstDim == learnedLevels)
				{
					s_direction = _:Down;
					gDimStatus = DimStatus_On;
				}
			}		
		}
	}
	else if (currentEvent == Event_Learn)
	{
		SaveLearnedLevels(learnedLevels, loads, minLearnedLevel, count);		
	}
	else
	{
		if ((trackLED && s_taskState > 0) || (!trackLED && !AllLoadsAtLevel(loads, DIM_MINLEVEL)))
		{
			RampLoadsToLevel(loads, Load_RampType_Variable, fadeTime, DIM_MINLEVEL, count);
			if (g_firstDim == learnedLevels)
			{
				s_direction = _:Up;
				gDimStatus = DimStatus_Off;
			}
		}
		else
		{
			RampLoadsToBuffer(loads, Load_RampType_Variable, rampTime, levels, learnedLevels, count);
			if (g_firstDim == learnedLevels)
			{
				s_direction = _:Down;
				gDimStatus = DimStatus_On;
			}
		}		
	}
}

/*
<FunctionInfo>
	<Localization Language="en">
		<DisplayName>Dim Scene</DisplayName>
		<Description>Toggles loads with a single press and ramps the entire scene maintaining the relative levels with a press and hold.</Description>
		<TitleFormat>[loads] Dim Scene</TitleFormat>
		<DisplayFormat>Dim [loads] while maintaining the relative levels</DisplayFormat>
	</Localization>
	<BrowserClass>GreenDimming</BrowserClass>
	<Supports>
		<QueryClass>Lighting</QueryClass>
		<QueryClass>Standard</QueryClass>
		<QueryClass>Dimming</QueryClass>
		<QueryClass>LearnedLighting</QueryClass>
	</Supports>
	<FunctionClasses>
		<FunctionClass>GoGreen</FunctionClass>
	</FunctionClasses>
	<DefaultQuery>LoadsOn</DefaultQuery>
	<AdjustProcedure>AdjustSceneLoads</AdjustProcedure>
	<LevelProcedure>SceneLoadLevel</LevelProcedure>
	<Event>Hold</Event>
	<Event>Up</Event>
	<Event>Down</Event>	
	<Join>
		<Param>loads</Param>
		<Param>levels</Param>
	</Join>
	<RequiredMethods>
		<MethodName>Load_GetLevel</MethodName>
		<MethodName>Load_SetLevel</MethodName>
		<MethodName>Load_Ramp</MethodName>				
	</RequiredMethods>
	<Param Name="loads">
		<Localization Language="en">
			<DisplayName>Loads</DisplayName>
			<Description>The loads to be controlled.</Description>
		</Localization>
		<Visible>true</Visible>
	</Param>
	<Param Name="levels">
		<Localization Language="en">
			<DisplayName>Levels</DisplayName>
			<Description>The levels to which the loads are to be set.</Description>
		</Localization>
		<SystemDefault>Level</SystemDefault>
		<Visible>true</Visible>
	</Param>
	<Param Name="rampTime">
		<Localization Language="en">
			<DisplayName>Ramp Time</DisplayName>
			<Description>The time in seconds a load takes to ramp on.</Description>
		</Localization>
		<SystemDefault>RampTime</SystemDefault>
		<Visible>true</Visible>
	</Param>
	<Param Name="fadeTime">
		<Localization Language="en">
			<DisplayName>Fade Time</DisplayName>
			<Description>The time in seconds a load takes to fade off.</Description>
		</Localization>
		<SystemDefault>FadeTime</SystemDefault>
		<Visible>true</Visible>
	</Param>
	<Param Name="trackLED">
		<Localization Language="en">
			<DisplayName>Track LED</DisplayName>
			<Description>Specifies whether the state of the Dim will follow the LED State.  
  (If the LED is off, the Dim will turn on the loads and if the LED is on, the Dim will turn them off)</Description>
		</Localization>
		<SystemDefault>TrackLED</SystemDefault>
	</Param>
	<Param Name="rampRate">
		<Localization Language="en">
			<DisplayName>Ramp Rate</DisplayName>
			<Description>The time in seconds a load takes to ramp to full on or fade to full off.</Description>
		</Localization>
		<SystemDefault>AdjustRate</SystemDefault>
		<Visible>true</Visible>
	</Param>
	<Param Name="learnable">
		<Localization Language="en">
			<DisplayName>Memorize Levels</DisplayName>
			<Description>Specifies whether the value the loads are set to by a press and hold are remembered.</Description>
		</Localization>
		<SystemDefault>MemorizeLevels</SystemDefault>
		<Visible>true</Visible>
	</Param>
	<Param Name="learnedLevels">
		<Localization Language="en"></Localization>
		<Visible>false</Visible>
	</Param>
	<Param Name="minLearnedLevel">
		<Localization Language="en"></Localization>
		<Visible>false</Visible>
		<SystemDefault>MinimumLearnedLevel</SystemDefault>		
	</Param>
</FunctionInfo>
*/
procedure DimScene(Load:loads[], Level:levels[], Seconds:rampTime, Seconds:fadeTime, Seconds:rampRate, bool:trackLED, bool:learnable, MemID:learnedLevels, Level:minLearnedLevel)
{
	new count = sizeof(loads);										// The number of loads
	new MemID:direction = GetMemID() + learnedLevels;						// The ID of direction buffer
	new MemID:initialValue = GetMemID() + learnedLevels;						// The ID of the initial value buffer
	new MemID:holdID = GetMemID() + learnedLevels;				// The ID of the hold variable
		
	if (count > 0)
	{
		if (learnable) CreateLearnedLevelsBuffer(loads, levels, learnedLevels);
		CreateDirectionBuffer(MemID:direction, Load:loads);
		if (GetEvent() == Event_ButtonHold)
		{
			// Let the script know we want to handle the next button up
			SetHoldOccurredBuffer(holdID, true);
			gDimStatus = DimStatus_Ramping;	
			CreateInitialLevelBuffer(loads, initialValue);

			// If the lowest load level is full off, we want to ramp up next.  
			// If the highest load level is full on, we want to ramp down next.
			if (GetSmallestLoadLevel(loads)==Level:DIM_MINLEVEL)
			{
				SetDirection(direction, Up);
			}
			else if (GetLargestLoadLevel(loads)==Level:DIM_MAXLEVEL)
			{
				SetDirection(direction, Down);
			}

			// If the direction is up, ramp the loads in the up direction
			if (GetDirection(direction) == Up)
			{	
				// If all loads are off, we want to set up the initial relative levels before dimming.
				if (GetLargestLoadLevel(loads) == 0)
				{
					new Level:smallestLevel = Level:0;
					if (learnable)
					{
						smallestLevel = GetSmallestBufferLevel(learnedLevels, count);
						for (new i = 0 ; i < count ; i++)
						{
							Load_SetLevel(loads[i], (Level:BufferGetAt(MemID:learnedLevels, i) - smallestLevel));
						}
					}
					else
					{
						smallestLevel = GetSmallestLevel(levels);
						for (new i = 0 ; i < count ; i++)
						{
							Load_SetLevel(loads[i], (levels[i] - smallestLevel));
						}						
					}
					CreateInitialLevelBuffer(loads, initialValue);					
				}
				
				new Level:highestLevel = GetLargestLoadLevel(loads);
				for (new i = 0 ; i < count ; i++)
				{
					new Level:finalLevel = (DIM_MAXLEVEL - highestLevel) + Level:BufferGetAt(initialValue, i);
					if (finalLevel > DIM_MAXLEVEL)
					{
						finalLevel = DIM_MAXLEVEL;
					}
					else if (finalLevel < RAMPEDDIM_MINLEVEL)
					{
						finalLevel = RAMPEDDIM_MINLEVEL;
					}
					Load_Ramp(loads[i], Load_RampType_Adjust, rampRate, finalLevel);
				}
				SetDirection(direction, Down);
			}
			// If the direction is down, ramp the loads in the down direction
			else
			{
				new Level:lowestLevel = GetSmallestLoadLevel(loads);
				for (new i = 0 ; i < count ; i++)
				{
					new Level:finalLevel = Level:BufferGetAt(initialValue, i) - lowestLevel;
					if (finalLevel > DIM_MAXLEVEL)
					{
						finalLevel = DIM_MAXLEVEL;
					}
					else if (finalLevel < RAMPEDDIM_MINLEVEL)
					{
						finalLevel = RAMPEDDIM_MINLEVEL;
					}
					Load_Ramp(loads[i], Load_RampType_Adjust, rampRate, finalLevel);
				}
				SetDirection(direction, Up);
			}
		}
		else if (GetEvent() == Event_ButtonUp)
		{
			if (GetHoldOccurredBuffer(holdID))
			{
				for (new i = 0 ; i < count ; i++)
				{
					if (Load_Ramp(loads[i], Load_RampType_Stop, Seconds:0, RAMPEDDIM_MINLEVEL) == -1)
					{
						BufferSetAt(initialValue, i, -1);
					}
				}
				new Level:ChangeAmount = GetGreatestChange(loads, initialValue, direction);
				new Level:finalLevel = DIM_MAXLEVEL;
				if (DoesBufferExist(initialValue))
				{
					for (new i = 0 ; i < count ; i++)
					{
						finalLevel = Level:BufferGetAt(initialValue, i) + ChangeAmount;

						if (finalLevel > DIM_MAXLEVEL)
						{
							finalLevel = DIM_MAXLEVEL;
						}
						else if (finalLevel < RAMPEDDIM_MINLEVEL)
						{
							finalLevel = RAMPEDDIM_MINLEVEL;
						}
						Load_Ramp(loads[i], Load_RampType_Variable, DIM_ADJUSTTIME, finalLevel);
					}
					DestroyBuffer(initialValue);
				}
				if (GetLargestLoadLevel(loads) == 0)
				{
					gDimStatus = DimStatus_Off;
				}
				else
				{
					gDimStatus = DimStatus_On;
				}
				if (learnable)
				{
					SaveSceneLearnedLevels(learnedLevels, loads, minLearnedLevel);
				}
			}
			else
			{
				DimToggle(loads, direction, learnedLevels, rampTime, fadeTime, levels, trackLED);	
			}
			SetHoldOccurredBuffer(holdID, false);
		}
		else if (GetEvent() == Event_Learn && learnable)
		{
			SaveSceneLearnedLevels(learnedLevels, loads, minLearnedLevel);
		}
		else if (GetEvent() != Event_ButtonDown)
		{
			DimToggle(loads, direction, learnedLevels, rampTime, fadeTime, levels, trackLED);
		}
	}
}


/*
<FunctionInfo>
	<Localization Language="en">
		<DisplayName>Dim Cycle</DisplayName>
		<Description>Toggles loads with a single press and cycles loads with a press and hold.</Description>
		<TitleFormat>[loads] Dim Cycle</TitleFormat>
		<DisplayFormat>Dim Cycle [loads]</DisplayFormat>
	</Localization>
	<BrowserClass>GreenDimming</BrowserClass>
	<Supports>
		<QueryClass>Standard</QueryClass>
		<QueryClass>Lighting</QueryClass>
		<QueryClass>Dimming</QueryClass>
		<QueryClass>LearnedLighting</QueryClass>
	</Supports>	
	<FunctionClasses>
		<FunctionClass>GoGreen</FunctionClass>
	</FunctionClasses>
	<DefaultQuery>LoadsOn</DefaultQuery>
	<AdjustProcedure>AdjustLoads</AdjustProcedure>
	<LevelProcedure>AverageLoadLevel</LevelProcedure>
	<Event>Up</Event>
	<Event>Down</Event>
	<Event>Hold</Event>
	<Join>
		<Param>loads</Param>
		<Param>levels</Param>
	</Join>
	<RequiredMethods>
		<MethodName>Load_GetLevel</MethodName>
		<MethodName>Load_SetLevel</MethodName>
		<MethodName>Load_Ramp</MethodName>				
	</RequiredMethods>
	<Param Name="loads">
		<Localization Language="en">
			<DisplayName>Loads</DisplayName>
			<Description>The loads to be controlled.</Description>
		</Localization>
		<Visible>true</Visible>
	</Param>
	<Param Name="levels">
		<Localization Language="en">
			<DisplayName>Levels</DisplayName>
			<Description>The levels to which the loads are to be set.</Description>
		</Localization>
		<SystemDefault>Level</SystemDefault>
		<Visible>true</Visible>
	</Param>
	<Param Name="rampTime">
		<Localization Language="en">
			<DisplayName>Ramp Time</DisplayName>
			<Description>The time in seconds a load takes to ramp on.</Description>
		</Localization>
		<SystemDefault>RampTime</SystemDefault>
		<Visible>true</Visible>
	</Param>
	<Param Name="fadeTime">
		<Localization Language="en">
			<DisplayName>Fade Time</DisplayName>
			<Description>The time in seconds a load takes to fade off.</Description>
		</Localization>
		<SystemDefault>FadeTime</SystemDefault>
		<Visible>true</Visible>
	</Param>	
	<Param Name="rampRate">
		<Localization Language="en">
			<DisplayName>Cycle Rate</DisplayName>
			<Description>The time in seconds a load takes to ramp to full on or fade to full off.</Description>
		</Localization>
		<SystemDefault>AdjustRate</SystemDefault>
		<Visible>true</Visible>
	</Param>
	<Param Name="trackLED">
		<Localization Language="en">
			<DisplayName>Track LED</DisplayName>
			<Description>Specifies whether the state of the Dim will follow the LED State.
  (If the LED is off, the Dim will turn on the loads and if the LED is on, the Dim will turn them off)</Description>
		</Localization>
		<SystemDefault>TrackLED</SystemDefault>
	</Param>
	<Param Name="learnable">
		<Localization Language="en">
			<DisplayName>Memorize Levels</DisplayName>
			<Description>Specifies whether the value the loads are set to by a press and hold are remembered.</Description>
		</Localization>
		<SystemDefault>MemorizeLevels</SystemDefault>
		<Visible>true</Visible>
	</Param>
	<Param Name="learnedLevels">
		<Localization Language="en"></Localization>
		<Visible>false</Visible>
	</Param>
	<Param Name="minLearnedLevel">
		<Localization Language="en"></Localization>
		<Visible>false</Visible>
		<SystemDefault>MinimumLearnedLevel</SystemDefault>		
	</Param>
</FunctionInfo>
*/
procedure DimCycle(Load:loads[], Level:levels[], Seconds:rampTime, Seconds:fadeTime, Seconds:rampRate, bool:trackLED, bool:learnable, MemID:learnedLevels, Level:minLearnedLevel)
{
	new count = sizeof(loads);										// The number of loads
	new MemID:direction = GetMemID() + learnedLevels;								// The ID of direction buffer
	new MemID:holdID = GetMemID() + learnedLevels;				// The ID of the hold variable

	if (count > 0)
	{
		CreateDirectionBuffer(MemID:direction, Load:loads);
		if (learnable) CreateLearnedLevelsBuffer(loads, levels, learnedLevels);
		if (GetEvent() == Event_ButtonHold)
		{
			new Load_RampType:nextRamp = Load_RampType_Up;
			if (GetDirection(direction) == Down)
			{
				nextRamp = Load_RampType_Down;
				SetDirection(direction, Up);
			}
			else
			{
				SetDirection(direction, Down);
			}
			gDimStatus = DimStatus_Ramping;	
			RampLoadsToLevel(loads, nextRamp, rampRate, DIM_MAXLEVEL, count);
			SetHoldOccurredBuffer(holdID, true);
		}
		else if (GetEvent() == Event_ButtonUp)
		{
			if (GetHoldOccurredBuffer(holdID))
			{
				gDimStatus = DimStatus_On;
				RampLoadsToLevel(loads, Load_RampType_Stop, Seconds:0, RAMPEDDIM_MINLEVEL, count);
				if (learnable)
				{
					SaveLearnedLevels(learnedLevels, loads, minLearnedLevel, count);
				}
			}
			else
			{
				DimToggle(loads, direction, learnedLevels, rampTime, fadeTime, levels, trackLED);
			}
			SetHoldOccurredBuffer(holdID, false);
		}
		else if (GetEvent() == Event_Learn)
		{
			SaveLearnedLevels(learnedLevels, loads, minLearnedLevel, count);
		}
		else if (GetEvent() != Event_ButtonDown)
		{
			DimToggle(loads, direction, learnedLevels, rampTime, fadeTime, levels, trackLED);
		}
	}
}

/*
<FunctionInfo>
	<Localization Language="en">
		<DisplayName>Dim With Auto Off</DisplayName>
		<Description>Toggles loads with a single press and ramps the loads with a press and hold.  Turns off after a delay.</Description>
		<TitleFormat>[loads] Dim With Auto Off</TitleFormat>
		<DisplayFormat>Dim [loads] With Auto Off</DisplayFormat>
	</Localization>
	<BrowserClass>ExclusiveGreenDimming</BrowserClass>
	<Supports>
		<QueryClass>Lighting</QueryClass>
		<QueryClass>Standard</QueryClass>
		<QueryClass>Dimming</QueryClass>
		<QueryClass>LearnedLighting</QueryClass>
	</Supports>
	<FunctionClasses>
		<FunctionClass>GoGreen</FunctionClass>
	</FunctionClasses>	
	<DefaultQuery>LoadsOn</DefaultQuery>
	<AdjustProcedure>AdjustLoads</AdjustProcedure>
	<LevelProcedure>AverageLoadLevel</LevelProcedure>
	<Event>Hold</Event>
	<Event>Up</Event>
	<Event>Down</Event>	
	<Join>
		<Param>loads</Param>
		<Param>levels</Param>
	</Join>
	<RequiredMethods>
		<MethodName>Load_GetLevel</MethodName>
		<MethodName>Load_SetLevel</MethodName>
		<MethodName>Load_Ramp</MethodName>				
	</RequiredMethods>
	<Param Name="loads">
		<Localization Language="en">
			<DisplayName>Loads</DisplayName>
			<Description>The loads to be controlled.</Description>
		</Localization>
		<Visible>true</Visible>
	</Param>
	<Param Name="levels">
		<Localization Language="en">
			<DisplayName>Levels</DisplayName>
			<Description>The levels to which the loads are to be set.</Description>
		</Localization>
		<SystemDefault>Level</SystemDefault>
		<Visible>true</Visible>
	</Param>
	<Param Name="rampTime">
		<Localization Language="en">
			<DisplayName>Ramp Time</DisplayName>
			<Description>The time in seconds a load takes to ramp on.</Description>
		</Localization>
		<SystemDefault>RampTime</SystemDefault>
		<Visible>true</Visible>
	</Param>
	<Param Name="dimFadeTime">
		<Localization Language="en">
			<DisplayName>Dim Fade Time</DisplayName>
			<Description>The time in seconds a load takes to fade off with the Dim's Toggle.</Description>
		</Localization>
		<SystemDefault>FadeTime</SystemDefault>
		<Visible>true</Visible>
	</Param>	
	<Param Name="rampRate">
		<Localization Language="en">
			<DisplayName>Adjust Rate</DisplayName>
			<Description>The time in seconds a load takes to ramp to full on or fade to full off.</Description>
		</Localization>
		<SystemDefault>AdjustRate</SystemDefault>
		<Visible>true</Visible>
	</Param>
	<Param Name="offDelay">
		<Localization Language="en">
			<DisplayName>Off Delay</DisplayName>
			<Description>The amount of time which should pass before automatically turning off the loads.</Description>
		</Localization>
		<SystemDefault>OffDelay</SystemDefault>
		<Visible>true</Visible>
	</Param>
	<Param Name="offFadeTime">
		<Localization Language="en">
			<DisplayName>Off Fade Time</DisplayName>
			<Description>The time in seconds a load takes to fade off with the Auto Off</Description>
		</Localization>
		<SystemDefault>FadeTime</SystemDefault>
		<Visible>true</Visible>
	</Param>
	<Param Name="trackLED">
		<Localization Language="en">
			<DisplayName>Track LED</DisplayName>
			<Description>Specifies whether the state of the Dim will follow the LED State.
  (If the LED is off, the Dim will turn on the loads and if the LED is on, the Dim will turn them off)</Description>
		</Localization>
		<SystemDefault>TrackLED</SystemDefault>
	</Param>
	<Param Name="learnable">
		<Localization Language="en">
			<DisplayName>Memorize Levels</DisplayName>
			<Description>Specifies whether the value the loads are set to by a press and hold are remembered.</Description>
		</Localization>
		<SystemDefault>MemorizeLevels</SystemDefault>
		<Visible>true</Visible>
	</Param>
	<Param Name="learnedLevels">
		<Localization Language="en"></Localization>
		<Visible>false</Visible>
	</Param>
	<Param Name="minLearnedLevel">
		<Localization Language="en"></Localization>
		<Visible>false</Visible>
		<SystemDefault>MinimumLearnedLevel</SystemDefault>		
	</Param>
</FunctionInfo>
*/
procedure DimWithAutoOff(Load:loads[], Level:levels[], Seconds:rampTime, Seconds:dimFadeTime, Seconds:rampRate, Delay:offDelay, Seconds:offFadeTime, bool:trackLED, bool:learnable, MemID:learnedLevels, Level:minLearnedLevel)
{
	// Note: the learnedLevels parameter, because of the MemID tag, is auto incremented for each scene node in the scene tree.
	static bool:held = false;
	new count = sizeof(loads);
	new MemID:initialValue = GetMemID();
	new EventType:currentEvent = GetEvent();
	new i;
	
	if (g_firstDim == MemID:-1)
	{
		g_firstDim = learnedLevels;
		s_taskState = _:Task_GetState(GetCurrentTask());
	}
	
	if (learnable && !DoesBufferExist(learnedLevels) && CreateBuffer(learnedLevels, count, true))
	{
		BufferSetRange(learnedLevels, _:levels, 0, count);
	}
		
	if (currentEvent == Event_ButtonDown)
	{
		held = false;
	}
	else if (currentEvent == Event_ButtonHold)
	{
		if (g_firstDim == learnedLevels)
		{
			held = true;
			gDimStatus = DimStatus_Ramping;
			if (AllLoadsAtLevel(loads, DIM_MINLEVEL))
			{
				s_direction = _:Up;
			}
			else if (AllLoadsAtLevel(loads, DIM_MAXLEVEL))
			{
				s_direction = _:Down;
			}
		}
		
		if (DoesBufferExist(initialValue) || CreateBuffer(initialValue, count, false))
		{
			for (i = 0 ; i < count ; i++)
			{
				BufferSetAt(initialValue, i, _:Load_GetLevel(loads[i]));
			}
		}

		if (s_direction == _:Up)
		{
			RampLoadsToLevelAutoOff(loads, Load_RampType_Adjust, rampRate, Level:DIM_MAXLEVEL, Load_RampType_Variable, offFadeTime, Seconds:offDelay, count);
		}
		else
		{
			RampLoadsToLevelAutoOff(loads, Load_RampType_Adjust, rampRate, Level:RAMPEDDIM_MINLEVEL, Load_RampType_Variable, offFadeTime, Seconds:offDelay, count);
		}
	}
	else if (currentEvent == Event_ButtonUp)
	{
		if (held)
		{
			new Level:MaxChange = DIM_MINLEVEL;
			new Level:finalLevel = DIM_MAXLEVEL;
			new Level:tempInitial;
			new Level:changeAmount;
			
			if (g_firstDim == learnedLevels)
			{
				gDimStatus = DimStatus_Off;
				if (s_direction == _:Up)
					s_direction = _:Down;
				else
					s_direction = _:Up;
			}

			// We do this in a separate loop so we can stop all loads more quickly.
			for (i = 0 ; i < count ; i++)
			{
				if (Load_RampAutoOff(loads[i], Load_RampType_Stop, Seconds:0, Level:RAMPEDDIM_MINLEVEL, Load_RampType_Variable, offFadeTime, Seconds:offDelay) == -1)
				{
					BufferSetAt(initialValue, i, UNAVAILABLE_LOAD);
				}
			}

			for (i = 0 ; i < count ; i++)
			{
				tempInitial = Level:BufferGetAt(initialValue, i);
				if (_:tempInitial != UNAVAILABLE_LOAD)
				{
					changeAmount = Load_GetLevel(loads[i]) - tempInitial;
					// We have already flipped the direction here, so are checking the new direction. 
					if (s_direction == _:Down)
					{
						MaxChange = Level:max(_:changeAmount, _:MaxChange);
					}
					else
					{
						MaxChange = Level:min(_:changeAmount, _:MaxChange);
					}
				}
			}
			
			
			for (i = 0 ; i < count ; i++)
			{
				tempInitial = Level:BufferGetAt(initialValue, i);
				if (_:tempInitial != UNAVAILABLE_LOAD)
				{
					finalLevel = Level:clamp(_:(tempInitial + MaxChange), _:RAMPEDDIM_MINLEVEL, _:DIM_MAXLEVEL);

					Load_RampAutoOff(loads[i], Load_RampType_Variable, Seconds:0.5, finalLevel, Load_RampType_Variable, offFadeTime, Seconds:offDelay);
										
					if (finalLevel > Level:0.0)
					{
						gDimStatus = DimStatus_On;
					}
				}
			}
			
			DestroyBuffer(initialValue);

			if (learnable) SaveLearnedLevels(learnedLevels, loads, minLearnedLevel, count);
		}
		else
		{
			if ((trackLED && s_taskState > 0) || (!trackLED && !AllLoadsAtLevel(loads, DIM_MINLEVEL)))
			{
				RampLoadsToLevelAutoOff(loads, Load_RampType_Variable, dimFadeTime, Level:DIM_MINLEVEL, Load_RampType_Variable, offFadeTime, Seconds:offDelay, count);
				if (g_firstDim == learnedLevels)
				{
					s_direction = _:Up;
					gDimStatus = DimStatus_Off;
				}
			}
			else
			{
				RampLoadsToBufferAutoOff(loads, Load_RampType_Variable, rampTime, levels, learnedLevels, Load_RampType_Variable, offFadeTime, Seconds:offDelay, count);
				if (g_firstDim == learnedLevels)
				{
					s_direction = _:Down;
					gDimStatus = DimStatus_On;
				}
			}		
		}
	}
	else if (currentEvent == Event_Learn)
	{
		SaveLearnedLevels(learnedLevels, loads, minLearnedLevel, count);		
	}
	else
	{
		if ((trackLED && s_taskState > 0) || (!trackLED && !AllLoadsAtLevel(loads, DIM_MINLEVEL)))
		{
			RampLoadsToLevelAutoOff(loads, Load_RampType_Variable, dimFadeTime, DIM_MINLEVEL, Load_RampType_Variable, offFadeTime, Seconds:offDelay, count);
			if (g_firstDim == learnedLevels)
			{
				s_direction = _:Up;
				gDimStatus = DimStatus_Off;
			}
		}
		else
		{
			RampLoadsToBufferAutoOff(loads, Load_RampType_Variable, rampTime, levels, learnedLevels, Load_RampType_Variable, offFadeTime, Seconds:offDelay, count);
			if (g_firstDim == learnedLevels)
			{
				s_direction = _:Down;
				gDimStatus = DimStatus_On;
			}
		}		
	}
}

/*
<FunctionInfo>
	<Localization Language="en">
		<DisplayName>On with Raise</DisplayName>
		<Description>Turns on loads with a single press, and ramps them up with a press and hold.</Description>
		<TitleFormat>[loads] On with Raise</TitleFormat>
		<DisplayFormat>Turn on or raise [loads]</DisplayFormat>
	</Localization>
	<BrowserClass>Dimming</BrowserClass>
	<Supports>
		<QueryClass>Standard</QueryClass>
		<QueryClass>Level</QueryClass>
		<QueryClass>Lighting</QueryClass>
		<QueryClass>LearnedLighting</QueryClass>
	</Supports>
	<DefaultQuery>LoadsOn</DefaultQuery>
	<AdjustProcedure>AdjustLoads</AdjustProcedure>
	<LevelProcedure>AverageLoadLevel</LevelProcedure>
	<Event>Up</Event>
	<Event>Down</Event>
	<Event>Hold</Event>
	<Join>
		<Param>loads</Param>
		<Param>levels</Param>
	</Join>
	<RequiredMethods>
		<MethodName>Load_GetLevel</MethodName>
		<MethodName>Load_SetLevel</MethodName>
		<MethodName>Load_Ramp</MethodName>				
	</RequiredMethods>
	<Param Name="loads">
		<Localization Language="en">
			<DisplayName>Loads</DisplayName>
			<Description>The loads to be controlled</Description>
		</Localization>
	</Param>
	<Param Name="levels">
		<Localization Language="en">
			<DisplayName>Levels</DisplayName>
			<Description>The levels the loads are to be set to.</Description>
		</Localization>
		<SystemDefault>Level</SystemDefault>
	</Param>
	<Param Name="rampTime">
		<Localization Language="en">
			<DisplayName>Ramp Time</DisplayName>
			<Description>The time in seconds a load takes to ramp on to its specified level.</Description>
		</Localization>
		<SystemDefault>RampTime</SystemDefault>
	</Param>
	<Param Name="rampRate">
		<Localization Language="en">
			<DisplayName>Ramp Rate</DisplayName>
			<Description>The rate in seconds at which the load will ramp to full on or full off when the button is pressed and held.</Description>
		</Localization>
		<SystemDefault>AdjustRate</SystemDefault>
	</Param>
	<Param Name="learnable">
		<Localization Language="en">
			<DisplayName>Memorize Levels</DisplayName>
			<Description>Specifies whether the value the loads are set to by a press and hold are remembered.</Description>
		</Localization>
		<SystemDefault>MemorizeLevels</SystemDefault>
	</Param>
	<Param Name="learnedLevels">
		<Localization Language="en"></Localization>
		<Visible>false</Visible>
	</Param>
	<Param Name="minLearnedLevel">
		<Localization Language="en"></Localization>
		<Visible>false</Visible>
		<SystemDefault>MinimumLearnedLevel</SystemDefault>		
	</Param>
</FunctionInfo>
*/
procedure OnRaise(Load:loads[], Level:levels[], Seconds:rampTime, Seconds:rampRate, bool:learnable, MemID:learnedLevels, Level:minLearnedLevel)
{
	new count = sizeof(loads);										// The number of loads
	new MemID:holdID = GetMemID() + learnedLevels;

	if (count > 0)
	{
		if (learnable) CreateLearnedLevelsBuffer(loads, levels, learnedLevels);
		if (GetEvent() == Event_ButtonHold)
		{
			TheRampStart(loads, Up, rampRate);   
			SetHoldOccurredBuffer(holdID, true);
		}
		else if (GetEvent() == Event_ButtonUp)
		{
			if (GetHoldOccurredBuffer(holdID))
			{
				RampLoadsToLevel(loads, Load_RampType_Stop, Seconds:0, DIM_MINLEVEL, count);
				if (learnable)
				{
					SaveLearnedLevels(learnedLevels, loads, minLearnedLevel, count);
				}
			}
			else
			{
				RampLoadsToBuffer(loads, Load_RampType_Variable, rampTime, levels, learnedLevels, count);
			}		
			SetHoldOccurredBuffer(holdID, false);
		}
		else if (GetEvent() == Event_Learn && learnable)
		{
			SaveLearnedLevels(learnedLevels, loads, minLearnedLevel, count);
		}
	}
}

/*
<FunctionInfo>
	<Localization Language="en">
		<DisplayName>Off with Lower</DisplayName>
		<Description>Turns off loads with a single press, and ramps them down with a press and hold.</Description>
		<TitleFormat>[loads] Off with Lower</TitleFormat>
		<DisplayFormat>Turn off or lower [loads]</DisplayFormat>
	</Localization>
	<BrowserClass>GreenDimming</BrowserClass>
	<Supports>
		<QueryClass>Standard</QueryClass>
		<QueryClass>Lighting</QueryClass>
	</Supports>	
	<FunctionClasses>
		<FunctionClass>GoGreen</FunctionClass>
	</FunctionClasses>
	<DefaultQuery>LoadsOn</DefaultQuery>
	<Event>Up</Event>
	<Event>Down</Event>
	<Event>Hold</Event>
	<RequiredMethods>
		<MethodName>Load_SetLevel</MethodName>
		<MethodName>Load_Ramp</MethodName>				
	</RequiredMethods>
	<Param Name="loads">
		<Localization Language="en">
			<DisplayName>Loads</DisplayName>
			<Description>The loads to be controlled</Description>
		</Localization>
	</Param>
	<Param Name="rampTime">
		<Localization Language="en">
			<DisplayName>Fade Time</DisplayName>
			<Description>The time in seconds a load takes to fade off.</Description>
		</Localization>
		<SystemDefault>FadeTime</SystemDefault>
	</Param>
	<Param Name="rampRate">
		<Localization Language="en">
			<DisplayName>Ramp Rate</DisplayName>
			<Description>The time in seconds a load takes to fade to full off.</Description>
		</Localization>
		<SystemDefault>AdjustRate</SystemDefault>		
	</Param> 
</FunctionInfo>
*/
procedure OffLower(Load:loads[], Seconds:rampTime, Seconds:rampRate)
{
	new count = sizeof(loads);					// The number of loads
	new MemID:holdID = GetMemID();				// The ID of the hold variable

	if (count > 0)
	{
		
		if (GetEvent() == Event_ButtonHold)
		{
			TheRampStart(loads, Down, rampRate);   
			SetHoldOccurredBuffer(holdID, true);
		}
		else if (GetEvent() == Event_ButtonUp)
		{
			if (GetHoldOccurredBuffer(holdID))
			{
				RampLoadsToLevel(loads, Load_RampType_Stop, Seconds:0, RAMPEDDIM_MINLEVEL, count);
			}
			else
			{
				RampLoadsToLevel(loads, Load_RampType_Variable, rampTime, DIM_MINLEVEL, count);
			}
			SetHoldOccurredBuffer(holdID, false);
		}
	}
}

/*
<FunctionInfo>
	<Localization Language="en">
		<DisplayName>Raise</DisplayName>
		<Description>Ramps loads up when pressed and held.</Description>
		<TitleFormat>[loads] Raise</TitleFormat>
		<DisplayFormat>Raise [loads] when pressed</DisplayFormat>
	</Localization>
	<BrowserClass>Adjusting</BrowserClass>
	<Supports>
	    <QueryClass>Standard</QueryClass>
		<QueryClass>Lighting</QueryClass>
	</Supports>
	<DefaultQuery>LoadsOn</DefaultQuery>
	<Event>Down</Event>
	<Event>Up</Event>
	<RequiredMethods>
		<MethodName>Load_SetLevel</MethodName>
		<MethodName>Load_Ramp</MethodName>				
	</RequiredMethods>
	<Param Name="loads">
		<Localization Language="en">
			<DisplayName>Loads</DisplayName>
			<Description>The loads to be controlled</Description>
		</Localization>
	</Param>
	<Param Name="rampRate">
		<Localization Language="en">
			<DisplayName>Ramp Rate</DisplayName>
			<Description>The time in seconds a load takes to ramp to full on.</Description>
		</Localization>
		<SystemDefault>AdjustRate</SystemDefault>
	</Param>
</FunctionInfo>
*/
procedure Raise(Load:loads[], Seconds:rampRate)
{
	new count = sizeof(loads);
	if (GetEvent() == Event_ButtonDown)
	{
		TheRampStart(loads, Up, rampRate);
	}
	else
	{
		RampLoadsToLevel(loads, Load_RampType_Stop, Seconds:0, DIM_MINLEVEL, count);
	}
}

/*
<FunctionInfo>
	<Localization Language="en">
		<DisplayName>Lower</DisplayName>
		<Description>Fades loads down when pressed and held.</Description>
		<TitleFormat>[loads] Lower</TitleFormat>
		<DisplayFormat>Lower [loads] when pressed</DisplayFormat>
	</Localization>
	<BrowserClass>GreenAdjusting</BrowserClass>
	<Supports>
		<QueryClass>Standard</QueryClass>
		<QueryClass>Lighting</QueryClass>
	</Supports>
	<FunctionClasses>
		<FunctionClass>GoGreen</FunctionClass>
	</FunctionClasses>
	<DefaultQuery>LoadsOn</DefaultQuery>
	<Event>Down</Event>
	<Event>Up</Event>
	<RequiredMethods>
		<MethodName>Load_SetLevel</MethodName>
		<MethodName>Load_Ramp</MethodName>				
	</RequiredMethods>
	<Param Name="loads">
		<Localization Language="en">
			<DisplayName>Loads</DisplayName>
			<Description>The loads to be controlled</Description>
		</Localization>
	</Param>
	<Param Name="rampRate">
		<Localization Language="en">
			<DisplayName>Fade Rate</DisplayName>
			<Description>The time in seconds a load takes to fade to full off.</Description>
		</Localization>
		<SystemDefault>AdjustRate</SystemDefault>
	</Param>
</FunctionInfo>
*/
procedure Lower(Load:loads[], Seconds:rampRate)
{
	new count = sizeof(loads);
	if (GetEvent() == Event_ButtonDown)
	{
		TheRampStart(loads, Down, rampRate);
	}
	else
	{
		RampLoadsToLevel(loads, Load_RampType_Stop, Seconds:0, DIM_MINLEVEL, count);
	}
}

/*
<FunctionInfo>
	<Localization Language="en">
		<Description>Toggles loads to their learned levels, or to 0, if no buffer exists, sets loads to DIM_MAXLEVEL.</Description>
	</Localization>
</FunctionInfo>
*/
DefaultToggle(Load:loads[], Seconds:rampTime, Seconds:fadeTime, MemID:learnedLevels)
{
	new count = sizeof(loads);		// The number of loads

	// IF ANY LOADS ARE ON, TURN THEM OFF.
	if (AllLoadsAtLevel(loads, DIM_MINLEVEL) == false)
	{
		RampLoadsToLevel(loads, Load_RampType_Variable, fadeTime, DIM_MINLEVEL, count);
		gDimStatus = DimStatus_Off;
	}
	// OTHERWISE, TURN THEM ON TO THEIR PRESET LEVELS.
	else
	{
		if (DoesBufferExist(MemID:learnedLevels))
		{
			for (new i = 0 ; i < count ; i++)
			{
				Load_Ramp(loads[i], Load_RampType_Variable, rampTime, Level:BufferGetAt(MemID:learnedLevels, i));
			}
		}
		else
		{
			RampLoadsToLevel(loads, Load_RampType_Variable, rampTime, DIM_MAXLEVEL, count);
		}
		
		gDimStatus = DimStatus_On;
	}
}

/*
<FunctionInfo>
	<Localization Language="en">
		<DisplayName>Default Dimmer Behavior</DisplayName>
		<Description>For a single press, the load will toggle between off and the learned level.  
For a double press, the load will ramp to 100%.  
The second press must be within 1 second of the first.  
For a press and hold, the load will ramp in the opposite direction from the last press and hold.  
If the load reaches 0 or 100% it will reverse direction.  
When the button is released the current load level will be saved as the new learned level for that button.</Description>
		<TitleFormat>[loads] Default Dimmer Behavior</TitleFormat>
		<DisplayFormat>[loads] will be Controlled the Same as the Default Dimmer Behavior</DisplayFormat>
	</Localization>
	<BrowserClass>Scenarios</BrowserClass>
	<Supports>
		<QueryClass>Standard</QueryClass>
		<QueryClass>Lighting</QueryClass>
		<QueryClass>Dimming</QueryClass>
		<QueryClass>LearnedLighting</QueryClass>
	</Supports>	
	<DefaultQuery>LoadsOn</DefaultQuery>
	<AdjustProcedure>AdjustLoads</AdjustProcedure>
	<LevelProcedure>AverageLoadLevel</LevelProcedure>
	<Event>Down</Event>
	<Event>Up</Event>
	<Event>Hold</Event>
	<RequiredMethods>
		<MethodName>Load_GetLevel</MethodName>
		<MethodName>Load_SetLevel</MethodName>
		<MethodName>Load_Ramp</MethodName>				
	</RequiredMethods>
	<Param Name="loads">
		<Localization Language="en">
			<DisplayName>Loads</DisplayName>
			<Description>The loads to be controlled.</Description>
		</Localization>
		<Visible>true</Visible>
	</Param>
	<Param Name="fullOnLevel">
		<Localization Language="en">
			<DisplayName>Full On Level</DisplayName>
			<Description>The load level the loads will be set to when double pressed.</Description>
		</Localization>
		<DefaultValue>
			<Constant Type="float">100.0</Constant>
		</DefaultValue>
	</Param>
	<Param Name="rampTime">
		<Localization Language="en">
			<DisplayName>Ramp Time</DisplayName>
			<Description>The time in seconds a load takes to ramp to full on.</Description>
		</Localization>
		<DefaultValue>
			<Constant Type="float">1.5</Constant>
		</DefaultValue>
	</Param>
	<Param Name="fadeTime">
		<Localization Language="en">
			<DisplayName>Fade Time</DisplayName>
			<Description>The time in seconds a load takes to fade to full off.</Description>
		</Localization>
		<DefaultValue>
			<Constant Type="float">5.0</Constant>
		</DefaultValue>
	</Param>
	<Param Name="rampRate">
		<Localization Language="en">
			<DisplayName>Ramp Rate</DisplayName>
			<Description>The rate in seconds a load will ramp from zero to full on when the button is pressed and held.</Description>
		</Localization>
		<DefaultValue>
			<Constant Type="float">5.0</Constant>
		</DefaultValue>
	</Param>	
	<Param Name="fullOnTime">
		<Localization Language="en">
			<DisplayName>Full On Time</DisplayName>
			<Description>The time a load will take to ramp to full on when a double press is received.</Description>
		</Localization>
		<DefaultValue>
			<Constant Type="float">1.5</Constant>
		</DefaultValue>
	</Param>			
	<Param Name="learnedLevels">
		<Localization Language="en"></Localization>
		<Visible>false</Visible>
	</Param>
	<Param Name="minLearnedLevel">
		<Localization Language="en"></Localization>
		<Visible>false</Visible>
		<SystemDefault>MinimumLearnedLevel</SystemDefault>		
	</Param>
</FunctionInfo>
*/
procedure DimmerDefault(Load:loads[], Level:fullOnLevel, Seconds:rampTime, Seconds:fadeTime, Seconds:rampRate, Seconds:fullOnTime, MemID:learnedLevels, Level:minLearnedLevel)
{
	new count = sizeof(loads);										// The number of loads
	new MemID:defDimDir = GetMemID() + learnedLevels;
	new MemID:holdID = GetMemID() + learnedLevels;				// The ID of the hold variable

	if (count > 0)
	{
		CreateDirectionBuffer(defDimDir, loads);
		if (!DoesBufferExist(learnedLevels) && CreateBuffer(learnedLevels, count, true))
		{
			for (new i = 0 ; i < count ; i++)
			{
				BufferSetAt(learnedLevels, i, _:50.0);
			}
		}
		if (GetEvent() == Event_ButtonHold)
		{
			new Load_RampType:nextRamp = Load_RampType_Up;
			if (GetDirection(defDimDir) == Down)
			{
				nextRamp = Load_RampType_Down;
				SetDirection(defDimDir, Up);
			}
			else
			{
				SetDirection(defDimDir, Down);
			}
			gDimStatus = DimStatus_Ramping;
			RampLoadsToLevel(loads, nextRamp, rampRate, DIM_MAXLEVEL, count);
			SetHoldOccurredBuffer(holdID, true);
		}
		else if (GetEvent() == Event_ButtonUp)
		{
			if (GetHoldOccurredBuffer(holdID))
			{
				gDimStatus = DimStatus_On;
				RampLoadsToLevel(loads, Load_RampType_Stop, Seconds:0, DIM_MINLEVEL, count);
				SaveLearnedLevels(learnedLevels, loads, minLearnedLevel, count);
			}
			else
			{
				DefaultToggle(loads, rampTime, fadeTime, learnedLevels);	
				if (GetEventParam1() >= 2)
				{
					RampLoadsToLevel(loads, Load_RampType_Variable, fullOnTime, fullOnLevel, count);
				}
				if (!AllLoadsAtLevel(loads, DIM_MINLEVEL))
				{
					SetDirection(defDimDir, Up);
				}
				else
				{
					SetDirection(defDimDir, Down);
				}
			}
			SetHoldOccurredBuffer(holdID, false);
		}
		else if (GetEvent() == Event_Learn)
		{
			SaveLearnedLevels(learnedLevels, loads, minLearnedLevel, count);
		}
	}
}

/*
<FunctionInfo>
	<Localization Language="en">
		<DisplayName>Dim Status</DisplayName>
		<Description>Reports the Dim Status of the Dim Procedure.</Description>
		<QueryDescription>The LED will be set to the Second State if the Dim has been turned on, the First State if the Dim has been turned off, and the Third State if the Dim is currently ramping.  The LED will be set independent of the load level.</QueryDescription>
		<TitleFormat>Dim Status</TitleFormat>
		<DisplayFormat>The LED will be set by the status of the Dim</DisplayFormat>
	</Localization>
	<QueryClass>Dimming</QueryClass>
	<FunctionClasses>
		<FunctionClass>TrackLEDAction</FunctionClass>
	</FunctionClasses>
</FunctionInfo>
*/
query DimStatus:DimQuery()
{
	return gDimStatus;
}?>
    </Object>
    <Object>
      <Script VID="10176" Master="9722" MTime="">
        <Name>CustomScript_10176.sma</Name>
        <Model> 9907, 9910, 9974, 9932, 9933, 10027, 9938, 9900, 9899, 9921,</Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Script</ObjectType>
      </Script>
      <?File / 
/*******************************************************************************
*                                                                              *
*                WARNING! DO NOT EDIT! GENERATED CODE BELOW!                   *
*                                                                              *
*******************************************************************************/
#include <blind>
#include <load>
#include <vantage>
#include "Programming\LaunchTasks"
#include "Lighting\Toggle"
#include "Security\Vacation"

procedure SceneProgram_9907()
{
	if(Level:Load_GetLevel(.object = Load:105) == Level:100.0)
	{
		Blind_Stop(.object = Blind:9653);
	}
	else
	{
		Blind_Close(.object = Blind:9653);
	}
}

procedure SceneProgram_9910()
{
	if(Level:Load_GetLevel(.object = Load:105) == Level:100.0)
	{
		Blind_Stop(.object = Blind:9653);
	}
	else
	{
		Blind_Open(.object = Blind:9653);
	}
}

procedure SceneProgram_9974()
{
	if(Level:Load_GetLevel(.object = Load:9307) == Level:0.0 && 
	   Level:Load_GetLevel(.object = Load:67) == Level:0.0 && 
	   Level:Load_GetLevel(.object = Load:66) == Level:0.0)
	{
		LaunchTask(.tasks = Task:{10020}, .eventType = TriggerType:ButtonRelease, .param1 = Number:1);
	}
	else
	{
		LaunchTask(.tasks = Task:{9927}, .eventType = TriggerType:ButtonRelease, .param1 = Number:1);

		LaunchTask(.tasks = Task:{9932}, .eventType = TriggerType:ButtonRelease, .param1 = Number:1);
	}
}

procedure SceneProgram_9932(& {Number,GMem}:param1)
{
	Off(.loads = Load:{10384, 83, 10413, 70}, .rampTime = Seconds:2.0);

	param1 = Number:1;
}

procedure SceneProgram_9933(& {Number,GMem}:param2)
{
	On(.loads = Load:{10384, 83, 10413, 70}, .levels = Level:{100.0, 100.0, 100.0, 100.0}, .rampTime = Seconds:2.0, .learnable = bool:true, .bufferid = MemID:0);

	param2 = Number:2;
}

procedure SceneProgram_10027(& {Number,GMem}:param2)
{
	On(.loads = Load:{10384, 83, 10413, 70}, .levels = Level:{50.0, 50.0, 0.0, 50.0}, .rampTime = Seconds:2.0, .learnable = bool:true, .bufferid = MemID:0);

	param2 = Number:3;
}

procedure SceneProgram_9938(& {bool,GMem}:param2)
{
	param2 = bool:true;

	RandomVacation(.loads = Load:{79, 9307, 83, 70, 67, 66, 55, 10197, 53, 54, 86, 9306, 57, 56, 58, 84, 71}, 
		.startMorning = DayTime:25200, 
		.stopMorning = TimeOffset:10800, 
		.startEvening = TimeOffset:-10800, 
		.stopEvening = DayTime:79200, 
		.rampTime = Seconds:1.0, 
		.fadeTime = Seconds:3.0, 
		.level = Level:100.0, 
		.cRate = Number:15, 
		.prob = Number:15, 
		.tWind = Number:5);

	param2 = bool:false;
}

procedure SceneProgram_9900()
{
	if(Level:Load_GetLevel(.object = Load:10392) == Level:100.0 || 
	   Level:Load_GetLevel(.object = Load:100) == Level:100.0 || 
	   Level:Load_GetLevel(.object = Load:10390) == Level:100.0)
	{
		Blind_Stop(.object = Blind:10382);
	}
	else
	{
		Blind_Close(.object = Blind:10382);
	}
}

procedure SceneProgram_9899()
{
	if(Level:Load_GetLevel(.object = Load:10392) == Level:100.0 || 
	   Level:Load_GetLevel(.object = Load:100) == Level:100.0 || 
	   Level:Load_GetLevel(.object = Load:10390) == Level:100.0)
	{
		Blind_Stop(.object = Blind:10382);
	}
	else
	{
		Blind_Open(.object = Blind:10382);
	}
}

procedure SceneProgram_9921(& {Number,GMem}:param1)
{
	Off(.loads = Load:{79, 57, 56, 58}, .rampTime = Seconds:2.0);

	param1 = Number:1;
}
?>
    </Object>
    <Object>
      <Script VID="10177" Master="9722" MTime="">
        <Name>CustomScript_10177.sma</Name>
        <Model> 9940, 9951, 9959, 9969, 10028, 10050, 9936, 9976, 9978, 9887,</Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Script</ObjectType>
      </Script>
      <?File / 
/*******************************************************************************
*                                                                              *
*                WARNING! DO NOT EDIT! GENERATED CODE BELOW!                   *
*                                                                              *
*******************************************************************************/
#include "Programming\LaunchTasks"
#include <vantage>
#include "Lighting\Toggle"
#include <load>
#include <sounder>
#include "Lighting\Misc"
#include "HVAC"

procedure SceneProgram_9940(& {bool,GMem}:param1)
{
	if(bool:param1 == bool:true)
	{
		LaunchTask(.tasks = Task:{9938}, .eventType = TriggerType:ButtonRelease, .param1 = Number:1);
	}
}

procedure SceneProgram_9951()
{
	if(Level:Load_GetLevel(.object = Load:343) == Level:100.0)
	{
		Off(.loads = Load:{343}, .rampTime = Seconds:0.0);
	}
	else
	{
		On(.loads = Load:{343}, .levels = Level:{100.0}, .rampTime = Seconds:0.0, .learnable = bool:false, .bufferid = MemID:0);
	}
}

procedure SceneProgram_9959(& {Number,GMem}:param1)
{
	if(Number:param1 == Number:2)
	{
		Learn(.tasks = Task:{9888});
	}
	else if(Number:param1 == Number:3)
	{
		Learn(.tasks = Task:{10028});
	}
	else if(Number:param1 == Number:4)
	{
		Learn(.tasks = Task:{10050});
	}

	Sounder_PlayFX(.object = Sounder:9784, .id = 0, .duration = Seconds:1.0, .volume = Percentage:50);
}

procedure SceneProgram_9969(& {Number,GMem}:param1)
{
	if(Number:param1 == Number:2)
	{
		Learn(.tasks = Task:{9922});
	}
	else if(Number:param1 == Number:3)
	{
		Learn(.tasks = Task:{10030});
	}
	else if(Number:param1 == Number:4)
	{
		Learn(.tasks = Task:{10052});
	}

	Sounder_PlayFX(.object = Sounder:9824, .id = 0, .duration = Seconds:1.0, .volume = Percentage:50);
}

procedure SceneProgram_10028(& {Number,GMem}:param2)
{
	On(.loads = Load:{55, 53, 54}, .levels = Level:{50.0, 50.0, 50.0}, .rampTime = Seconds:2.0, .learnable = bool:true, .bufferid = MemID:0);

	param2 = Number:3;
}

procedure SceneProgram_10050(& {Number,GMem}:param2)
{
	On(.loads = Load:{55, 53, 54}, .levels = Level:{0.0, 0.0, 70.0}, .rampTime = Seconds:2.0, .learnable = bool:true, .bufferid = MemID:0);

	param2 = Number:4;
}

procedure SceneProgram_9936()
{
	if(Level:Load_GetLevel(.object = Load:70) == Level:0.0 && 
	   Level:Load_GetLevel(.object = Load:83) == Level:0.0 && 
	   Level:Load_GetLevel(.object = Load:9306) == Level:0.0 && 
	   Level:Load_GetLevel(.object = Load:86) == Level:0.0 && 
	   Level:Load_GetLevel(.object = Load:84) == Level:0.0 && 
	   Level:Load_GetLevel(.object = Load:71) == Level:0.0)
	{
		WrapperSetOperationMode(.objects = Thermostat:{7015}, .mode = Thermostat_OperationMode_Off);
	}
	else
	{
		WrapperSetOperationMode(.objects = Thermostat:{7015}, .mode = Thermostat_OperationMode_Auto);
	}
}

procedure SceneProgram_9976()
{
	if(Level:Load_GetLevel(.object = Load:53) == Level:0.0 && 
	   Level:Load_GetLevel(.object = Load:54) == Level:0.0 && 
	   Level:Load_GetLevel(.object = Load:55) == Level:0.0 && 
	   Level:Load_GetLevel(.object = Load:10197) == Level:0.0)
	{
		LaunchTask(.tasks = Task:{9888}, .eventType = TriggerType:ButtonRelease, .param1 = Number:1);
	}
	else
	{
		LaunchTask(.tasks = Task:{9887}, .eventType = TriggerType:ButtonRelease, .param1 = Number:1);
	}
}

procedure SceneProgram_9978()
{
	if(Level:Load_GetLevel(.object = Load:58) == Level:0.0 && 
	   Level:Load_GetLevel(.object = Load:57) == Level:0.0 && 
	   Level:Load_GetLevel(.object = Load:56) == Level:0.0)
	{
		LaunchTask(.tasks = Task:{9922}, .eventType = TriggerType:ButtonRelease, .param1 = Number:1);
	}
	else
	{
		LaunchTask(.tasks = Task:{9921}, .eventType = TriggerType:ButtonRelease, .param1 = Number:1);
	}
}

procedure SceneProgram_9887(& {Number,GMem}:param2, & {bool,GMem}:param3)
{
	Off(.loads = Load:{79, 55, 10197, 53, 54}, .rampTime = Seconds:2.0);

	LaunchTaskWithCurrentEvent(.tasks = Task:{9866});

	param2 = Number:1;

	param3 = bool:false;
}
?>
    </Object>
    <Object>
      <Script VID="10178" Master="9722" MTime="">
        <Name>HVAC.sma</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Script</ObjectType>
      </Script>
      <?File / 
/*
HVAC.sma - HVAC Procedure Library
Copyright (c) 2012, Vantage Controls, Inc.
Version 0.4

ENUMS:
	SetPointOptions
	
FUNCTIONS:

PROCEDURES:
	LockThermostat
	UnLockThermostat
	IncrementSetpoint
	DecrementSetpoint
	SetSetpointToVariable
	
QUERIES:

*/

#if defined _HVAC_included
  #endinput
#endif

#define _HVAC_included

#include <thermostat>
#include <humidity>
#include <schedule>

/*
<EnumInfo>
	<Localization Language="en">
		<DisplayName>Thermostat Setpoint Type</DisplayName>
		<Description>The type of Setpoint.</Description>
		<Category>HVAC</Category>
	</Localization>
	<Enumerator Name="SP_Cool">
		<Localization Language="en">
			<DisplayName>Cool</DisplayName>
		</Localization>
	</Enumerator>
	<Enumerator Name="SP_Heat">
		<Localization Language="en">
			<DisplayName>Heat</DisplayName>
		</Localization>
	</Enumerator>
</EnumInfo>
*/
enum SetPointOptions
{
	SP_Cool = 0,
	SP_Heat = 1
};

/*
<EnumInfo>
	<Localization Language="en">
		<DisplayName>Humidifier Setpoint Type</DisplayName>
		<Description>The type of Setpoint.</Description>
		<Category>HVAC</Category>
	</Localization>
	<Enumerator Name="HSP_Humidify">
		<Localization Language="en">
			<DisplayName>Humidify</DisplayName>
		</Localization>
	</Enumerator>
	<Enumerator Name="HSP_Dehumidify">
		<Localization Language="en">
			<DisplayName>Dehumidify</DisplayName>
		</Localization>
	</Enumerator>
</EnumInfo>
*/
enum HumiditySetPointOptions
{
	HSP_Humidify = 0,
	HSP_Dehumidify = 1
};

/*
<EnumInfo>
	<Localization Language="en">
		<DisplayName>Thermostat Fan Mode</DisplayName>
		<Description>'Auto' means the fan will turn on only when needed, 'On' means it will always remain on.</Description>
		<Category>HVAC</Category>
	</Localization>
	<Enumerator Name="FMO_Auto">
		<Localization Language="en">
			<DisplayName>Auto</DisplayName>
		</Localization>
	</Enumerator>
	<Enumerator Name="FMO_On">
		<Localization Language="en">
			<DisplayName>On</DisplayName>
		</Localization>
	</Enumerator>
</EnumInfo>
*/
enum FanModeOptions
{
	FMO_Auto = 0,	
	FMO_On = 1
};

/*
<FunctionInfo>
	<Localization Language="en">
		<DisplayName>Lock Thermostat</DisplayName>
		<Description>Stops the thermostat from accepting automation calls or from reporting status.</Description>
		<TitleFormat>[objects] Lock</TitleFormat>
		<DisplayFormat>Lock [objects]</DisplayFormat>
	</Localization>
	<BrowserClass>None</BrowserClass>
	<FunctionClasses>
		<FunctionClass>Retired</FunctionClass>
	</FunctionClasses>
	<Supports>
		<QueryClass>Standard</QueryClass>
		<QueryClass>HVAC</QueryClass>        
	</Supports>
	<DefaultQuery>none</DefaultQuery>
	<Param Name="objects">
		<Localization Language="en">
			<DisplayName>Thermostats</DisplayName>
			<Description>The thermostats to lock.</Description>
		</Localization>
	</Param>
</FunctionInfo>
*/
procedure LockThermostat(Thermostat:objects[])
{
	new Thermcount = sizeof(objects);
	new i;

	for ( i = 0 ; i < Thermcount ; i++)
	{
		LockObject(VID:objects[i]);
	}
}

/*
<FunctionInfo>
	<Localization Language="en">
		<DisplayName>UnLock Thermostat</DisplayName>
		<Description>Unlocks the thermostat and allows it to accept automation calls and report status.</Description>
		<TitleFormat>[objects] UnLock</TitleFormat>
		<DisplayFormat>UnLock [objects]</DisplayFormat>
	</Localization>
	<BrowserClass>None</BrowserClass>
	<FunctionClasses>
		<FunctionClass>Retired</FunctionClass>
	</FunctionClasses>
	<Supports>
		<QueryClass>Standard</QueryClass>
		<QueryClass>HVAC</QueryClass>        
	</Supports>
	<DefaultQuery>none</DefaultQuery>
	<Param Name="objects">
		<Localization Language="en">
			<DisplayName>Thermostats</DisplayName>
			<Description>The thermostats to unlock.</Description>
		</Localization>
	</Param>
</FunctionInfo>
*/
procedure UnLockThermostat(Thermostat:objects[])
{
	new icount = sizeof(objects);
	new i;

	for ( i = 0 ; i < icount ; i++)
	{
		UnlockObject(VID:objects[i]);
	}
}

/*
<FunctionInfo>
	<Localization Language="en">
		<DisplayName>Increment Setpoint</DisplayName>
		<Description>Increments the heat or cool setpoint the number of degrees specified.</Description>
		<TitleFormat>[objects] Increment Setpoint</TitleFormat>
		<DisplayFormat>Increment the [Mode] Setpoint of [objects] by [degrees] degrees.</DisplayFormat>
	</Localization>
	<BrowserClass>HVACSetPoints</BrowserClass>
	<Supports>
		<QueryClass>Standard</QueryClass>
		<QueryClass>HVAC</QueryClass>        
	</Supports>
	<DefaultQuery>none</DefaultQuery>
	<RequiredMethods>
		<MethodName>Thermostat_GetCoolSetPoint</MethodName>
		<MethodName>Thermostat_SetCoolSetPoint</MethodName>
		<MethodName>Thermostat_GetHeatSetPoint</MethodName>
		<MethodName>Thermostat_SetHeatSetPoint</MethodName>
	</RequiredMethods>
	<Param Name="objects">
		<Localization Language="en">
			<DisplayName>Thermostats</DisplayName>
			<Description>The thermostats whose setpoint will be incremented.</Description>
		</Localization>
	</Param>
	<Param Name="Mode">
		<Localization Language="en">
			<DisplayName>Mode</DisplayName>
			<Description>The type of setpoint, either heat or cool, to increment.</Description>
		</Localization>
	</Param>
	<Param Name="degrees">
		<Localization Language="en">
			<DisplayName>Degrees</DisplayName>
			<Description>The number of degrees the setpoint is to be incremented.</Description>
		</Localization>
		<ValidRange>
			<LowerBound>0</LowerBound>
		</ValidRange>
	</Param>		
</FunctionInfo>
*/
procedure IncrementSetpoint(Thermostat:objects[], SetPointOptions:Mode, DeltaDegC:degrees)
{
	new tcount = sizeof(objects);
	new i;

	if (Mode == SP_Cool)
	{
		for ( i = 0 ; i < tcount ; i++)
		{
			new DegC:currentTemp = Thermostat_GetCoolSetPoint(objects[i]);
			currentTemp += DegC:degrees;
			Thermostat_SetCoolSetPoint(objects[i], currentTemp);
		}
	}
	else
	{
		for ( i = 0 ; i < tcount ; i++)
		{
			new DegC:currentTemp = Thermostat_GetHeatSetPoint(objects[i]);
			currentTemp += DegC:degrees;				
			Thermostat_SetHeatSetPoint(objects[i], currentTemp);
		}		
	}
}

/*
<FunctionInfo>
	<Localization Language="en">
		<DisplayName>Decrement Setpoint</DisplayName>
		<Description>Decrements the heat or cool setpoint the number of degrees specified.</Description>
		<TitleFormat>[objects] Decrement Setpoint</TitleFormat>
		<DisplayFormat>Decrement the [Mode] Setpoint of [objects] by [degrees] degrees.</DisplayFormat>
	</Localization>
	<BrowserClass>HVACSetPoints</BrowserClass>
	<Supports>
		<QueryClass>Standard</QueryClass>
		<QueryClass>HVAC</QueryClass>        
	</Supports>
	<DefaultQuery>none</DefaultQuery>
	<RequiredMethods>
		<MethodName>Thermostat_GetCoolSetPoint</MethodName>
		<MethodName>Thermostat_SetCoolSetPoint</MethodName>
		<MethodName>Thermostat_GetHeatSetPoint</MethodName>
		<MethodName>Thermostat_SetHeatSetPoint</MethodName>
	</RequiredMethods>
	<Param Name="objects">
		<Localization Language="en">
			<DisplayName>Thermostats</DisplayName>
			<Description>The thermostats whose setpoint will be decremented.</Description>
		</Localization>
	</Param>
	<Param Name="Mode">
		<Localization Language="en">
			<DisplayName>Mode</DisplayName>
			<Description>The type of setpoint, either heat or cool, to decrement.</Description>
		</Localization>
	</Param>
	<Param Name="degrees">
		<Localization Language="en">
			<DisplayName>Degrees</DisplayName>
			<Description>The number of degrees the setpoint is to be decremented.</Description>
		</Localization>
		<ValidRange>
			<LowerBound>0</LowerBound>
		</ValidRange>
	</Param>		
</FunctionInfo>
*/
procedure DecrementSetpoint(Thermostat:objects[], SetPointOptions:Mode, DeltaDegC:degrees)
{
	new tcount = sizeof(objects);
	new i;

	if (Mode == SP_Cool)
	{
		for ( i = 0 ; i < tcount ; i++)
		{
			new DegC:currentTemp = Thermostat_GetCoolSetPoint(objects[i]);
			currentTemp -= DegC:degrees;
			Thermostat_SetCoolSetPoint(objects[i], currentTemp);
		}
	}
	else
	{
		for ( i = 0 ; i < tcount ; i++)
		{
			new DegC:currentTemp = Thermostat_GetHeatSetPoint(objects[i]);
			currentTemp -= DegC:degrees;
			Thermostat_SetHeatSetPoint(objects[i], currentTemp);
		}		
	}
}

/*
<FunctionInfo>
	<Localization Language="en">
		<DisplayName>Set Setpoint to Variable Value</DisplayName>
		<Description>Sets the given setpoint to the value found in the variable.</Description>
		<TitleFormat>[objects] Set Setpoint to Variable Value</TitleFormat>
		<DisplayFormat>Set the [Mode] Setpoint to the variables value.</DisplayFormat>
	</Localization>
	<BrowserClass>None</BrowserClass>
	<Supports>
		<QueryClass>Standard</QueryClass>
		<QueryClass>HVAC</QueryClass>        
	</Supports>
	<DefaultQuery>none</DefaultQuery>
	<RequiredMethods>
		<MethodName>Thermostat_SetCoolSetPoint</MethodName>
		<MethodName>Thermostat_SetHeatSetPoint</MethodName>
	</RequiredMethods>
	<Param Name="objects">
		<Localization Language="en">
			<DisplayName>Thermostats</DisplayName>
			<Description>The thermostats whose setpoint will be decremented.</Description>
		</Localization>
	</Param>
	<Param Name="Mode">
		<Localization Language="en">
			<DisplayName>Mode</DisplayName>
			<Description>The type of setpoint, either heat or cool, to decrement.</Description>
		</Localization>
	</Param>
	<Param Name="variable">
		<Localization Language="en">
			<DisplayName>Variable</DisplayName>
			<Description>The variable whose value is to be used as the setpoint.</Description>
		</Localization>
	</Param>		
</FunctionInfo>
*/
procedure SetSetpointToVariable(Thermostat:objects[], SetPointOptions:Mode, GMem:variable)
{
	new count = sizeof(objects);

	if (Mode == SP_Cool)
	{
		for ( new i = 0 ; i < count ; i++)
		{
			Thermostat_SetCoolSetPoint(objects[i], DegC:variable);
		}
	}
	else
	{
		for ( new i = 0 ; i < count ; i++)
		{
			Thermostat_SetHeatSetPoint(objects[i], DegC:variable);
		}		
	}
}

/*
<FunctionInfo>
	<Localization Language="en">
		<DisplayName>Set Fan Mode</DisplayName>
		<Description>Sets the fan mode.</Description>
		<TitleFormat>[objects] Set Fan Mode</TitleFormat>
		<DisplayFormat>Set the Fan Mode of [objects] to [mode]</DisplayFormat>
	</Localization>
	<BrowserClass>HVACModes</BrowserClass>
	<Supports>
		<QueryClass>Thermostat</QueryClass>
		<QueryClass>Standard</QueryClass>
	</Supports>
	<RequiredMethods>
		<MethodName>Thermostat_SetFanMode</MethodName>
	</RequiredMethods>
	<Param Name="objects">
		<Localization Language="en">
			<DisplayName>Thermostat</DisplayName>
			<Description>The thermostat device whose fan mode will be modified.</Description>
		</Localization>
		<Visible>true</Visible>
	</Param>
	<Param Name="mode">
		<Localization Language="en">
			<DisplayName>Mode</DisplayName>
			<Description>The fan mode the thermostat will be set to.</Description>
		</Localization>
		<Visible>true</Visible>
	</Param>
</FunctionInfo>
*/
procedure SetTheFanMode(Thermostat:objects[], FanModeOptions:mode)
{
	BatchInvoke(Thermostat_SetFanMode(Thermostat:0, Thermostat_FanMode:mode), _:objects);
}

/*
<FunctionInfo>
	<Localization Language="en">
		<DisplayName>Set Heat Setpoint</DisplayName>
		<Description>Sets the heat Setpoint.</Description>
		<TitleFormat>[objects] Set Heat Setpoint</TitleFormat>
		<DisplayFormat>Set the Heat Setpoint of [objects] to [temperatures]</DisplayFormat>
	</Localization>
	<Variable Getter="GetHeatSetPoint" Name="heatSetPoint" Value="temperature"/>
	<BrowserClass>HVACSetPoints</BrowserClass>
	<FunctionClasses>
		<FunctionClass>RequiresCustomization</FunctionClass>
	</FunctionClasses>
	<Supports>
		<QueryClass>Standard</QueryClass>
		<QueryClass>Thermostat</QueryClass>
	</Supports>
	<RequiredMethods>
		<MethodName>Thermostat_SetHeatSetPoint</MethodName>
	</RequiredMethods>
	<Join>
		<Param>objects</Param>
		<Param>temperatures</Param>
	</Join>
	<Param Name="objects">
		<Localization Language="en">
			<DisplayName>Thermostats</DisplayName>
			<Description>The thermostats whose heat Setpoints are to be set.</Description>
		</Localization>
		<Visible>true</Visible>
	</Param>
	<Param Name="temperatures">
		<Localization Language="en">
			<DisplayName>Temperatures</DisplayName>
			<Description>The temperatures that the heat Setpoints will be set to.</Description>
		</Localization>
		<Visible>true</Visible>
	</Param>
</FunctionInfo>
*/
procedure WrapperSetHeatSetPoint(Thermostat:objects[], DegC:temperatures[])
{
	for (new i = 0 ; i < sizeof(objects) ; i++)
	{
		Thermostat_SetHeatSetPoint(objects[i], temperatures[i]);
	}
}

/*
<FunctionInfo>
	<Localization Language="en">
		<DisplayName>Set Cool Setpoint</DisplayName>
		<Description>Sets the cool Setpoint.</Description>
		<TitleFormat>[object] Set Cool Setpoint</TitleFormat>
		<DisplayFormat>Set the Cool Setpoint of [objects] to [temperatures]</DisplayFormat>
	</Localization>
	<Variable Getter="GetCoolSetPoint" Name="coolSetPoint" Value="temperature"/>
	<BrowserClass>HVACSetPoints</BrowserClass>
	<FunctionClasses>
		<FunctionClass>RequiresCustomization</FunctionClass>
	</FunctionClasses>
	<Supports>
		<QueryClass>Standard</QueryClass>
		<QueryClass>Thermostat</QueryClass>
	</Supports>
	<RequiredMethods>
		<MethodName>Thermostat_SetCoolSetPoint</MethodName>
	</RequiredMethods>
	<Join>
		<Param>objects</Param>
		<Param>temperatures</Param>
	</Join>
	<Param Name="objects">
		<Localization Language="en">
			<DisplayName>Thermostats</DisplayName>
			<Description>The thermostats whose cool Setpoints are to be set.</Description>
		</Localization>
		<Visible>true</Visible>
	</Param>
	<Param Name="temperatures">
		<Localization Language="en">
			<DisplayName>Temperatures</DisplayName>
			<Description>The temperatures that the cool Setpoints will be set to.</Description>
		</Localization>
	</Param>
</FunctionInfo>
*/
procedure WrapperSetCoolSetPoint(Thermostat:objects[], DegC:temperatures[])
{
	for (new i = 0 ; i < sizeof(objects) ; i++)
	{
		Thermostat_SetCoolSetPoint(objects[i], temperatures[i]);
	}
}

/*
<FunctionInfo>
	<Localization Language="en">
		<DisplayName>Set Auto Setpoint</DisplayName>
		<Description>Sets the auto Setpoint.</Description>
		<TitleFormat>[object] Set Auto Setpoint</TitleFormat>
		<DisplayFormat>Set the Auto Setpoint of [objects] to [temperatures]</DisplayFormat>
	</Localization>
	<BrowserClass>HVACSetPoints</BrowserClass>
	<FunctionClasses>
		<FunctionClass>RequiresCustomization</FunctionClass>
	</FunctionClasses>
	<Supports>
		<QueryClass>Standard</QueryClass>
		<QueryClass>Thermostat</QueryClass>
	</Supports>
	<RequiredMethods>
		<MethodName>Thermostat_SetAutoSetPoint</MethodName>
	</RequiredMethods>
	<Join>
		<Param>objects</Param>
		<Param>temperatures</Param>
	</Join>
	<Param Name="objects">
		<Localization Language="en">
			<DisplayName>Thermostats</DisplayName>
			<Description>The thermostats whose auto Setpoints are to be set.</Description>
		</Localization>
		<Visible>true</Visible>
	</Param>
	<Param Name="temperatures">
		<Localization Language="en">
			<DisplayName>Temperatures</DisplayName>
			<Description>The temperatures that the auto Setpoints will be set to.</Description>
		</Localization>
	</Param>
</FunctionInfo>
*/
procedure WrapperSetAutoSetPoint(Thermostat:objects[], DegC:temperatures[])
{
	for (new i = 0 ; i < sizeof(objects) ; i++)
	{
		Thermostat_SetAutoSetPoint(objects[i], temperatures[i]);
	}
}

/*
<FunctionInfo>
	<Localization Language="en">
		<DisplayName>Set Operation Mode</DisplayName>
		<Description>Sets the operation mode.</Description>
		<TitleFormat>[objects] Set Operation Mode to [mode]</TitleFormat>
		<DisplayFormat>Set the Operation Mode of [objects] to [mode]</DisplayFormat>
	</Localization>
	<Variable Getter="GetOperationMode" Name="operationMode" Value="mode"/>
	<BrowserClass>HVACModes</BrowserClass>
	<FunctionClasses>
		<FunctionClass>RequiresCustomization</FunctionClass>
	</FunctionClasses>
	<Supports>
		<QueryClass>Thermostat</QueryClass>
		<QueryClass>Standard</QueryClass>
	</Supports>
	<RequiredMethods>
		<MethodName>Thermostat_SetOperationMode</MethodName>
	</RequiredMethods>
	<Param Name="objects">
		<Localization Language="en">
			<DisplayName>Thermostat</DisplayName>
			<Description>The thermostat whose operation mode is to be changed.</Description>
		</Localization>
		<Visible>true</Visible>
	</Param>
	<Param Name="mode">
		<Localization Language="en">
			<DisplayName>Mode</DisplayName>
			<Description>The operation mode the thermostats will be set to.</Description>
		</Localization>
		<Visible>true</Visible>
	</Param>
</FunctionInfo>
*/
procedure WrapperSetOperationMode(Thermostat:objects[], Thermostat_OperationMode:mode)
{
	BatchInvoke(Thermostat_SetOperationMode(Thermostat:0, mode), _:objects);
}

/*
<FunctionInfo>
	<Localization Language="en">
		<DisplayName>Set Network Override</DisplayName>
		<Description>Sets the network override.</Description>
		<TitleFormat>[objects] Set Network Override to [mode]</TitleFormat>
		<DisplayFormat>Set the Network Override of [objects] to [mode]</DisplayFormat>
	</Localization>
	<Variable Getter="GetDayMode" Name="dayMode" Value="mode"/>
	<BrowserClass>HVACModes</BrowserClass>
	<FunctionClasses>
		<FunctionClass>RequiresCustomization</FunctionClass>
	</FunctionClasses>
	<Supports>
		<QueryClass>Thermostat</QueryClass>
		<QueryClass>Standard</QueryClass>
	</Supports>
	<RequiredMethods>
		<MethodName>Thermostat_SetDayMode</MethodName>
	</RequiredMethods>
	<Param Name="objects">
		<Localization Language="en">
			<DisplayName>Thermostat</DisplayName>
			<Description>The thermostats whose network override states will be changed.</Description>
		</Localization>
		<Visible>true</Visible>
	</Param>
	<Param Name="mode">
		<Localization Language="en">
			<DisplayName>Mode</DisplayName>
			<Description>The network override state the thermostats will be set to.</Description>
		</Localization>
		<Visible>true</Visible>
	</Param>
</FunctionInfo>
*/
procedure WrapperSetDayMode(Thermostat:objects[], Thermostat_DayMode:mode)
{
	BatchInvoke(Thermostat_SetDayMode(Thermostat:0, mode), _:objects);
}

/*
<FunctionInfo>
	<Localization Language="en">
		<DisplayName>Set Hold Mode</DisplayName>
		<Description>Sets the hold mode.</Description>
		<TitleFormat>[objects] Set Hold Mode to [mode]</TitleFormat>
		<DisplayFormat>Set the Hold Mode of [objects] to [mode]</DisplayFormat>
	</Localization>
	<Variable Getter="GetHoldMode" Name="holdMode" Value="mode"/>
	<BrowserClass>HVACModes</BrowserClass>
	<FunctionClasses>
		<FunctionClass>RequiresCustomization</FunctionClass>
	</FunctionClasses>
	<Supports>
		<QueryClass>Thermostat</QueryClass>
		<QueryClass>Standard</QueryClass>
	</Supports>
	<RequiredMethods>
		<MethodName>Thermostat_SetHoldMode</MethodName>
	</RequiredMethods>
	<Param Name="objects">
		<Localization Language="en">
			<DisplayName>Thermostats</DisplayName>
			<Description>The thermostats whose hold mode is to be changed.</Description>
		</Localization>
		<Visible>true</Visible>
	</Param>
	<Param Name="mode">
		<Localization Language="en">
			<DisplayName>Mode</DisplayName>
			<Description>The hold mode to which the thermostats will be set.</Description>
		</Localization>
		<Visible>true</Visible>
	</Param>
</FunctionInfo>
*/
procedure WrapperSetHoldMode(Thermostat:objects[], Thermostat_HoldMode:mode)
{
	BatchInvoke(Thermostat_SetHoldMode(Thermostat:0, mode), _:objects);
}

/*
<FunctionInfo>
	<Localization Language="en">
		<DisplayName>Increment Humidity Setpoint</DisplayName>
		<Description>Increments the humidify or dehumidify setpoint by the percentage specified.</Description>
		<TitleFormat>[objects] Increment Humidity Setpoint</TitleFormat>
		<DisplayFormat>Increment the [Mode] Setpoint of [objects] by [percentage].</DisplayFormat>
	</Localization>
	<BrowserClass>HVACSetPoints</BrowserClass>
	<Supports>
		<QueryClass>Standard</QueryClass>
		<QueryClass>HVAC</QueryClass>        
	</Supports>
	<DefaultQuery>none</DefaultQuery>
	<RequiredMethods>
		<MethodName>Humidity_GetHumidifySetPoint</MethodName>
		<MethodName>Humidity_SetHumidifySetPoint</MethodName>
		<MethodName>Humidity_GetDehumidifySetPoint</MethodName>
		<MethodName>Humidity_SetDehumidifySetPoint</MethodName>
	</RequiredMethods>
	<Param Name="objects">
		<Localization Language="en">
			<DisplayName>Humidistats</DisplayName>
			<Description>The humidistats whose setpoint will be incremented.</Description>
		</Localization>
	</Param>
	<Param Name="Mode">
		<Localization Language="en">
			<DisplayName>Mode</DisplayName>
			<Description>The type of setpoint, either humidify or dehumidify, to increment.</Description>
		</Localization>
	</Param>
	<Param Name="percentage">
		<Localization Language="en">
			<DisplayName>Percentage</DisplayName>
			<Description>The percentage the setpoint is to be incremented.</Description>
		</Localization>
		<ValidRange>
			<LowerBound>0</LowerBound>
		</ValidRange>
	</Param>		
</FunctionInfo>
*/
procedure IncrementHumiditySetpoint(Humidity:objects[], HumiditySetPointOptions:Mode, Level:percentage)
{
	new count = sizeof(objects);
	new Level:currentLevel;
	new i;

	if (Mode == HSP_Humidify)
	{
		for ( i = 0 ; i < count ; i++)
		{
			currentLevel = Humidity_GetHumidifySetPoint(objects[i]) + percentage;
			Humidity_SetHumidifySetPoint(objects[i], currentLevel);
		}
	}
	else if (Mode == HSP_Dehumidify)
	{
		for ( i = 0 ; i < count ; i++)
		{
			currentLevel = Humidity_GetDehumidifySetPoint(objects[i]) + percentage;
			Humidity_SetDehumidifySetPoint(objects[i], currentLevel);
		}
	}
}

/*
<FunctionInfo>
	<Localization Language="en">
		<DisplayName>Decrement Humidity Setpoint</DisplayName>
		<Description>Decrements the humidify or dehumidify setpoint by the percentage specified.</Description>
		<TitleFormat>[objects] Decrement Humidity Setpoint</TitleFormat>
		<DisplayFormat>Decrement the [Mode] Setpoint of [objects] by [percentage].</DisplayFormat>
	</Localization>
	<BrowserClass>HVACSetPoints</BrowserClass>
	<Supports>
		<QueryClass>Standard</QueryClass>
		<QueryClass>HVAC</QueryClass>        
	</Supports>
	<DefaultQuery>none</DefaultQuery>
	<RequiredMethods>
		<MethodName>Humidity_GetHumidifySetPoint</MethodName>
		<MethodName>Humidity_SetHumidifySetPoint</MethodName>
		<MethodName>Humidity_GetDehumidifySetPoint</MethodName>
		<MethodName>Humidity_SetDehumidifySetPoint</MethodName>
	</RequiredMethods>
	<Param Name="objects">
		<Localization Language="en">
			<DisplayName>Humidistats</DisplayName>
			<Description>The humidistats whose setpoint will be decremented.</Description>
		</Localization>
	</Param>
	<Param Name="Mode">
		<Localization Language="en">
			<DisplayName>Mode</DisplayName>
			<Description>The type of setpoint, either humidify or dehumidify, to decrement.</Description>
		</Localization>
	</Param>
	<Param Name="percentage">
		<Localization Language="en">
			<DisplayName>Percentage</DisplayName>
			<Description>The percentage the setpoint is to be decremented.</Description>
		</Localization>
		<ValidRange>
			<LowerBound>0</LowerBound>
		</ValidRange>
	</Param>		
</FunctionInfo>
*/
procedure DecrementHumiditySetpoint(Humidity:objects[], HumiditySetPointOptions:Mode, Level:percentage)
{
	new count = sizeof(objects);
	new Level:currentLevel;
	new i;

	if (Mode == HSP_Humidify)
	{
		for ( i = 0 ; i < count ; i++)
		{
			currentLevel = Humidity_GetHumidifySetPoint(objects[i]) - percentage;
			Humidity_SetHumidifySetPoint(objects[i], currentLevel);
		}
	}
	else if (Mode == HSP_Dehumidify)
	{
		for ( i = 0 ; i < count ; i++)
		{
			currentLevel = Humidity_GetDehumidifySetPoint(objects[i]) - percentage;
			Humidity_SetDehumidifySetPoint(objects[i], currentLevel);
		}
	}
}

/*
<FunctionInfo>
	<Localization Language="en">
		<DisplayName>Set Thermostat Schedule</DisplayName>
		<Description>Sets the thermostat to a schedule.</Description>
		<TitleFormat>[thermostats] Set Schedule</TitleFormat>
		<DisplayFormat>Set Schedule of  [thermostats] to [schedule]</DisplayFormat>
	</Localization>
	<BrowserClass>HVACModes</BrowserClass>
	<Supports>
		<QueryClass>Standard</QueryClass>
		<QueryClass>HVAC</QueryClass>        
	</Supports>
	<DefaultQuery>none</DefaultQuery>
	<Param Name="thermostats">
		<Localization Language="en">
			<DisplayName>Thermostats</DisplayName>
			<Description>The thermostats to be assigned to a schedule.</Description>
		</Localization>
	</Param>
	<Param Name="schedule">
		<Localization Language="en">
			<DisplayName>Schedule</DisplayName>
			<Description>The Schedule assigned to the thermostats.</Description>
		</Localization>
	</Param>
</FunctionInfo>
*/
procedure SetHVACSchedule(Thermostat:thermostats[], Schedule:schedule)
{
	new count = sizeof(thermostats);
	for ( new i = 0 ; i < count ; i++ )
	{
		Schedule_SetSchedule(Schedule:thermostats[i], schedule);
	}
}

/*
<FunctionInfo>
	<Localization Language="en">
		<DisplayName>Clear Thermostat Schedule</DisplayName>
		<Description>Clears the thermostat from any Schedule assignment.</Description>
		<TitleFormat>[thermostats] Clear Schedule</TitleFormat>
		<DisplayFormat>Clear Schedule of [thermostats]</DisplayFormat>
	</Localization>
	<BrowserClass>HVACModes</BrowserClass>
	<Supports>
		<QueryClass>Standard</QueryClass>
		<QueryClass>HVAC</QueryClass>        
	</Supports>
	<DefaultQuery>none</DefaultQuery>
	<Param Name="thermostats">
		<Localization Language="en">
			<DisplayName>Thermostats</DisplayName>
			<Description>The thermostats to be assigned to a schedule.</Description>
		</Localization>
	</Param>
	<Param Name="schedule">
		<Localization Language="en">
			<DisplayName>Schedule</DisplayName>
			<Description>The Schedule assigned to the thermostats.</Description>
		</Localization>
	</Param>
</FunctionInfo>
*/
procedure RemoveHVACSchedule(Thermostat:thermostats[])
{
	new count = sizeof(thermostats);
	for ( new i = 0 ; i < count ; i++ )
	{
		Schedule_SetSchedule(Schedule:thermostats[i], Schedule:INVALID_VID);
	}
}?>
    </Object>
    <Object>
      <Script VID="10179" Master="9722" MTime="">
        <Name>Security\Vacation.sma</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Script</ObjectType>
      </Script>
      <?File / 
/*
Vacation.sma - Vacation Procedure Library
Copyright (c) 2012, Vantage Controls, Inc.
Version 0.5

ENUMS:

FUNCTIONS:

PROCEDURES:
	RandomVacationMode
	RandomVacation

QUERIES:
	VacationRunning
*/

#if defined _Vacation_included
  #endinput
#endif

#define _Vacation_included
#pragma dynamic 1024

#include <load>
#include <core>
#include <task>
#include <enlog>
#include <time>
#include "..\Programming\VantageTime.sma"

#define VACATION_MINUTE 60000
#define VACATION_MIDNIGHT 86400
static bool:vacationStatus = false;

/*
<FunctionInfo>
	<Localization Language="en">
		<DisplayName>Random Vacation Mode Old</DisplayName>
		<Description>Randomly turns on and off the specified loads.  This is a blocking procedure.</Description>
		<TitleFormat>[loads] Random Vacation Mode</TitleFormat>
		<DisplayFormat>Random Vacation Mode</DisplayFormat>
	</Localization>
	<BrowserClass>None</BrowserClass>
	<FunctionClasses>
		<FunctionClass>Blocking</FunctionClass>
	</FunctionClasses>		
	<Supports>
		<QueryClass>Standard</QueryClass>
		<QueryClass>Tasks</QueryClass>
	</Supports>
	<Event>Down</Event>
	<Join>
		<Param>loads</Param>
		<Param>levels</Param>
		<Param>rampTimes</Param>
		<Param>fadeTimes</Param>
		<Param>probExec</Param>
	</Join>
	<RequiredMethods>
		<MethodName>Load_Ramp</MethodName>
		<MethodName>Load_GetLevel</MethodName>		
	</RequiredMethods>
	<Param Name="loads">
		<Localization Language="en">
			<DisplayName>Loads</DisplayName>
			<Description>The loads to be used in the vacation mode.</Description>
		</Localization>
		<Visible>true</Visible>
	</Param>
	<Param Name="levels">
		<Localization Language="en">
			<DisplayName>Levels</DisplayName>
			<Description>The levels to which the loads will be set when turned on.</Description>
		</Localization>
		<SystemDefault>Level</SystemDefault>		
		<Visible>true</Visible>
	</Param>
	<Param Name="rampTimes">
		<Localization Language="en">
			<DisplayName>Ramp Time</DisplayName>
			<Description>The time loads will take to turn on.</Description>
		</Localization>
		<SystemDefault>RampTime</SystemDefault>		
		<Visible>true</Visible>
	</Param>
	<Param Name="fadeTimes">
		<Localization Language="en">
			<DisplayName>Fade Time</DisplayName>
			<Description>The time loads will take to turn off.</Description>
		</Localization>
		<SystemDefault>FadeTime</SystemDefault>		
		<Visible>true</Visible>
	</Param>
	<Param Name="probExec">
		<Localization Language="en">
			<DisplayName>Probability of Execution</DisplayName>
			<Description>The probability that the load will turn on or off on a given interval.</Description>
		</Localization>
		<Visible>true</Visible>
		<DefaultValue>
			<Constant Type="float">33.0</Constant>
		</DefaultValue>		
	</Param>
	<Param Name="frequency">
		<Localization Language="en">
			<DisplayName>Interval Frequency</DisplayName>
			<Description>The number of minutes between intervals.</Description>
		</Localization>
		<Visible>true</Visible>
		<DefaultValue>
			<Constant Type="int">1</Constant>
		</DefaultValue>			
	</Param>
	<Param Name="startTime">
		<Localization Language="en">
			<DisplayName>Start Time</DisplayName>
			<Description>The time to enable the vacation mode.</Description>
		</Localization>
	</Param>
	<Param Name="endTime">
		<Localization Language="en">
			<DisplayName>End Time</DisplayName>
			<Description>The time to disable the vacation mode.</Description>
		</Localization>
	</Param>
</FunctionInfo>
*/
procedure RandomVacationMode(Load:loads[], Level:levels[], Seconds:rampTimes[], Level:probExec[], Seconds:fadeTimes[], Number:frequency, DayTime:startTime, DayTime:endTime)
{
	// Only react to the Button Down event.  This will make sure that the event
	// on the queue when leaving the procedure will be the same event as that
	// which began the procedure
	if (GetEvent() == Event_ButtonDown)
	{
		// Toggle the status on and off
		// When this procedure is stopped, it is called back again, this makes sure we do not run again.
		if (vacationStatus == false)
		{
			vacationStatus = true;
			
			new count = sizeof(loads);
			new bool:vacationRunning = true;
			new initialEventCount = GetEventCount();			
			// Set the frequency to be in Minutes
			new calculatedFrequency = _:fixed(_:frequency*60);
			
			// Loop until pressed again
			while (vacationRunning)
			{
				// Wait unless interrupted
				new finalFrequency = calculatedFrequency;
				if (finalFrequency < 50)
				{
					finalFrequency = 50;
				}
				
				WaitForEvent(Seconds:finalFrequency);

				if (initialEventCount != GetEventCount())
				{
					GetNextEvent();
					if (GetEvent() == Event_ButtonDown)
					{
						vacationRunning = false;
					}
				}
				
				if (vacationRunning)
				{
					if (BetweenTime(startTime, endTime))
					{
						for (new i = 0 ; i < count ; i++)
						{
							// Reduce the probability from (0 to 100000) to (0 to 9)
							new chance = fround(probExec[i]/10);
					
							// Fill an array with the corresponding number of this vid.  
							// For example, if the vid is 5 and chance is 4 Posibility will look like [5,5,5,5,0,0,0,0,0,0]
							new possibility[10];
							for (new j = 0 ; j < chance ; j++)
							{
								possibility[j] = _:loads[i];
							}
							
							// Decide if we should turn on this load by
							// seeing if we randomly choose its vid
							if (possibility[random(10)] == _:loads[i])
							{
								// Turn the load on or off
								if (Load_GetLevel(loads[i]) == 0)
								{
									Load_Ramp(loads[i], Load_RampType_Variable, rampTimes[i], levels[i]);
								}
								else
								{
									Load_Ramp(loads[i], Load_RampType_Variable, rampTimes[i], Level:0);							
								}
							}
						}
					}
				}
				else
				{
					// Turn off the loads
					for (new i = 0 ; i < count ; i++)
					{
						Load_Ramp(loads[i], Load_RampType_Variable, rampTimes[i], Level:0);
					}
				}			
			}
			vacationStatus = false;					
		}
	}
}

/*
<FunctionInfo>
	<Localization Language="en">
		<DisplayName>Vacation-Random Mode</DisplayName>
		<Description>Randomly turns on and off the loads during the specified time spans.  A maximum of 500 loads can be controlled with this procedure.  This is a blocking procedure.</Description>
		<TitleFormat>[loads] Random Vacation Mode</TitleFormat>
		<DisplayFormat>Run Random Vacation Mode Between [startMorning] and 'Sunrise [stopMorning] or Between 'Sunset [startEvening] and [stopEvening]</DisplayFormat>
	</Localization>
	<BrowserClass>Vacation</BrowserClass>
	<FunctionClasses>
		<FunctionClass>Blocking</FunctionClass>
	</FunctionClasses>
	<Supports>
		<QueryClass>Vacation</QueryClass>
	</Supports>
	<RequiredMethods>
		<MethodName>Load_Ramp</MethodName>
		<MethodName>Load_GetLevel</MethodName>		
	</RequiredMethods>
	<Event>Down</Event>
	<Param Name="loads">
		<Localization Language="en">
			<DisplayName>Loads</DisplayName>
			<Description>The lighting objects to be turned on and off when vacation is running.</Description>
		</Localization>
		<ValidRange>
			<UpperBound Type="int">500</UpperBound>
		</ValidRange>
	</Param>
	<Param Name="startMorning">
		<Localization Language="en">
			<DisplayName>Morning Start Time</DisplayName>
			<Description>The time in the morning when vacation will become active.</Description>
		</Localization>
		<DefaultValue>
			<Constant Type="int">21600</Constant>
		</DefaultValue>
	</Param>
	<Param Name="stopMorning">
		<Localization Language="en">
			<DisplayName>Morning Stop Time</DisplayName>
			<Description>The offset from sunrise when vacation will become inactive</Description>
		</Localization>
		<DefaultValue>
			<Constant Type="int">0</Constant>
		</DefaultValue>		
	</Param>
	<Param Name="startEvening">
		<Localization Language="en">
			<DisplayName>Evening Start Time</DisplayName>
			<Description>The offset from sunset when vacation will become active.</Description>
		</Localization>
		<DefaultValue>
			<Constant Type="int">0</Constant>
		</DefaultValue>
	</Param>
	<Param Name="stopEvening">
		<Localization Language="en">
			<DisplayName>Evening Stop Time</DisplayName>
			<Description>The time in the evening when vacation will become inactive</Description>
		</Localization>
		<DefaultValue>
			<Constant Type="int">79200</Constant>
		</DefaultValue>
	</Param>
	<Param Name="rampTime">
		<Localization Language="en">
			<DisplayName>Standard Ramp Time</DisplayName>
			<Description>This parameter should not be visible.  If it is, please report this to Vantage.</Description>
		</Localization>
		<SystemDefault>RampTime</SystemDefault>
		<Visible>false</Visible>
	</Param>
	<Param Name="fadeTime">
		<Localization Language="en">
			<DisplayName>Standard Fade Time</DisplayName>
			<Description>This parameter should not be visible.  If it is, please report this to Vantage.</Description>
		</Localization>
		<SystemDefault>FadeTime</SystemDefault>
		<Visible>false</Visible>
	</Param>
	<Param Name="level">
		<Localization Language="en">
			<DisplayName>Standard Level</DisplayName>
			<Description>This parameter should not be visible.  If it is, please report this to Vantage.</Description>
		</Localization>
		<SystemDefault>Level</SystemDefault>
		<Visible>false</Visible>
	</Param>
	<Param Name="cRate">
		<Localization Language="en">
			<DisplayName>Cycle Rate</DisplayName>
			<Description>How many minutes plus or minus the time window between a possible change in the lighting levels.</Description>
		</Localization>
		<DefaultValue>
			<Constant Type="int">15</Constant>
		</DefaultValue>
		<ValidRange>
			<LowerBound Type="int">1</LowerBound>
			<UpperBound Type="int">60</UpperBound>
		</ValidRange>
	</Param>
	<Param Name="prob">
		<Localization Language="en">
			<DisplayName>Probability</DisplayName>
			<Description>The probability of a change for each individual load every cycle.</Description>
		</Localization>
		<DefaultValue>
			<Constant Type="int">15</Constant>
		</DefaultValue>
		<ValidRange>
			<LowerBound Type="int">15</LowerBound>
			<UpperBound Type="int">100</UpperBound>
		</ValidRange>
	</Param>
	<Param Name="tWind">
		<Localization Language="en">
			<DisplayName>Time Window</DisplayName>
			<Description>The time window in which the cycle will occur.  The cycle will occur at the cycle rate plus or minus this value.</Description>
		</Localization>
		<DefaultValue>
			<Constant Type="int">5</Constant>
		</DefaultValue>
		<ValidRange>
			<LowerBound Type="int">1</LowerBound>
			<UpperBound Type="int">15</UpperBound>
		</ValidRange>
	</Param>
</FunctionInfo>
*/
procedure RandomVacation(Load:loads[], DayTime:startMorning, TimeOffset:stopMorning, TimeOffset:startEvening, DayTime:stopEvening, Seconds:rampTime, Seconds:fadeTime, Level:level, Number:cRate, Number:prob, Number:tWind)
//  The last three parameters, rampTime, fadeTime, and level are hidden.  They are in the parameter list so they can be auto-populated by the system default for this value.
{
	new loadCount = sizeof(loads);
	new bool:vacationRunning = true;  //  Used to decide when to exit the loop
	new bool:enabled = true;  // Used to decide when initially inactive
	new initialEventCount = GetEventCount();  // If this changes, it means we need to stop the Vacation

	new cycleRate = 1; // How long in minutes we want to wait between cycles
	new currentRate = 0;  // The actual rate used and recalculated each cycle
	new probability = 15; // The chance the loads have of changing each cycle.  For example 25 means 25% chance.
	new timeWindow = 1; // The amount of time in minutes + or - the cycleRate that will be variable with each loop

	if (_:cRate > 0) { cycleRate = _:cRate; }
	if (_:prob > 15) { probability = _:prob; }
	if (_:tWind > 0) { timeWindow = _:tWind; }

	// Set the initial settings for the initialized times - Vary the times randomly
	new Time:currentDay = Time:0;
	new DayTime:currentMorningStart = DayTime:0;
	new DayTime:currentMorningStop = DayTime:0;
	new DayTime:currentEveningStart = DayTime:0;
	new DayTime:currentEveningStop = DayTime:0;

	// Save the levels of the loads so they can be returned when vacation is turned off, or inactive
	new Level:prevLevels[500];
	for (new i = 0 ; i < loadCount ; i++)
	{
		prevLevels[i] = Load_GetLevel(loads[i]);
	}

	while (vacationRunning)
	{
		// If it is a new day, recalculate the times
		if (currentDay != GetCurrentDate())
		{
			currentDay = GetCurrentDate();
			
			currentMorningStart = startMorning; 
			currentMorningStop = GetTodaysSunriseTime(stopMorning);

			// We never want the stop time before the start time.
			if (currentMorningStop < currentMorningStart)
			{
				currentMorningStop = currentMorningStart + DayTime:30;
			}
			
			currentEveningStart = GetTodaysSunsetTime(startEvening);
			currentEveningStop = stopEvening;

			// We never want the stop time before the start time.
			if (currentEveningStop < currentEveningStart)
			{
				currentEveningStop = currentEveningStart + DayTime:30;
			}			
		}
		// Wait for a cycle
		currentRate = (cycleRate + random(timeWindow*2)-(timeWindow))*VACATION_MINUTE;
		// Add a range of a minute within which to perform the change so it doesn't happen on the minute every time.
		currentRate += random(VACATION_MINUTE);

		if (initialEventCount == GetEventCount()) { WaitForEvent(Seconds:currentRate); }

		// If a new event comes, exit the vacation procedure
		if (initialEventCount != GetEventCount())
		{
			vacationRunning = false;
			GetNextEvent();
		}

		//  If not exiting, run the load control section
		if (vacationRunning)
		{
			// If the vacation can run at this time, run
			if (BetweenTime(currentMorningStart, currentMorningStop) || BetweenTime(currentEveningStart,currentEveningStop))
			{
				enabled = true;
				for (new i = 0 ; i < loadCount ; i++)
				{
					if (random(100) < probability && initialEventCount == GetEventCount())
					{
						// We don't want one fifth of the loads turning on at the same time, so add a small delay between them.
						sleep(-(random(10000) + 1000)); // Currently 1 to 11 second variability
						
						// Toggle the load 
						if (Load_GetLevel(loads[i]) == 0)
						{
							Load_Ramp(loads[i], Load_RampType_Variable, rampTime, level);
						}
						else
						{
							Load_Ramp(loads[i], Load_RampType_Variable, rampTime, Level:0);
						}
					}
				}
			}
			else  // If the vacation cannot run at this time, restore the loads to their previous levels
			{
				if (enabled == true)
				{
					enabled = false;
					for (new i = 0 ; i < loadCount ; i++)
					{
						// We don't want all of the loads turning off at the same time, so add a small delay between them.
						sleep(-(random(10000)+1000)); // Currently 1 to 11 second variability
					
						Load_Ramp(loads[i],Load_RampType_Variable,rampTime,prevLevels[i]);
					}
				}
			}
		}
		else  // When the vacation is finished, return all of the loads to the previous levels
		{
			for (new i = 0 ; i < loadCount ; i++)
			{
				Load_Ramp(loads[i],Load_RampType_Variable,rampTime,prevLevels[i]);
			}
		}
	}
}

/*
<FunctionInfo>
	<Localization Language="en">
		<DisplayName>Vacation-Load Playback</DisplayName>
		<Description>Plays back the previous two weeks of load history for the selected loads when first pressed.  Stops playback and returns levels when pressed again.  A memory card must be present in a controller for this to function.</Description>
		<TitleFormat>Load Playback</TitleFormat>
		<DisplayFormat>Play back the load history of [loads].  Launch [backupTask] if history is unavailable.</DisplayFormat>
	</Localization>
	<BrowserClass>Vacation</BrowserClass>
	<FunctionClasses>
		<FunctionClass>Blocking</FunctionClass>
	</FunctionClasses>
	<Supports>
		<QueryClass>Vacation</QueryClass>
	</Supports>
	<DefaultQuery>VacationRunning</DefaultQuery>
	<RequiredMethods>
		<MethodName>Load_Ramp</MethodName>
		<MethodName>Load_GetLevel</MethodName>		
	</RequiredMethods>
	<Event>Down</Event>
	<Param Name="loads">
		<Localization Language="en">
			<DisplayName>Loads</DisplayName>
			<Description>The lighting objects whose actions are to be played back.</Description>
		</Localization>
	</Param>
	<Param Name="backupTask">
		<Localization Language="en">
			<DisplayName>Backup Task</DisplayName>
			<Description>The task which will launch when playback begins if no history or memory card exists.  This task should create the appearance of load activity.</Description>
		</Localization>
	</Param>
	<Param Name="cleanUpTask">
		<Localization Language="en">
			<DisplayName>Cleanup Task</DisplayName>
			<Description>The task which will launch when playback ends if no history or memory card exists.  This task should stop any timers or loops started with the Backup Task.</Description>
		</Localization>
	</Param>
</FunctionInfo>
*/
procedure LoadPlayback(Load:loads[], Task:backupTask, Task:cleanUpTask)
{
	new initialEventCount = GetEventCount();
	new loadCount = sizeof(loads);
	new currentTime, currentHour, currentMinute, currentSecond;
	new logFullTime, logTime, logHour, logMinute, logSecond;
	new i, logLoad, logLevel, trash;

	// Save the levels of the loads so they can be returned when vacation is turned off
	new Level:prevLevels[500];
	for (i = 0 ; i < loadCount ; i++)
	{
		prevLevels[i] = Load_GetLevel(loads[i]);
	}

	// Check that the log is running and that we can dump with a filter of less than 14 days.
	if (EnLog_AggState:EnLog_GetAggregatorState() == EnLog_AggState_Running && EnLog_GetLoggingEnabled(EnLog_Type_Status) && EnLog_BeginDump(EnLog_Type_Status, "Load.GetLevel and (time > now - 14:00:00:00)") == 0)
	{
		ParseTime(GetUTCTime(), trash, trash, trash, currentHour, currentMinute, currentSecond);
		currentTime = _:MakeTime(0, 0, 0, currentHour, currentMinute, currentSecond);

		while (initialEventCount == GetEventCount())
		{
			if (EnLog_ReadDump(EnLog_Type_Status) != -1)
			{
				EnLog_GetDumpValue(EnLog_Type_Status, EnLog_Property_VID, logLoad);
				EnLog_GetDumpValue(EnLog_Type_Status, EnLog_Property_Return, logLevel);
				EnLog_GetDumpValue(EnLog_Type_Status, EnLog_Property_Time, logFullTime);

				ParseTime(Time:logFullTime, trash, trash, trash, logHour, logMinute, logSecond);
				logTime = _:MakeTime(0, 0, 0, logHour, logMinute, logSecond);
				
				if (logTime < currentTime)
				{
					// If we cross the midnight barrier, wait the time from now to midnight plus the logTime
					sleep(-1.0 * (VACATION_MIDNIGHT - currentTime + logTime));
				}
				else
				{
					// Wait until the next log event (regardless of day)
					sleep(-1.0 * (logTime - currentTime));
				}

				ParseTime(GetUTCTime(), trash, trash, trash, currentHour, currentMinute, currentSecond);
				currentTime = _:MakeTime(0, 0, 0, currentHour, currentMinute, currentSecond);
				for (i = 0 ; i < loadCount ; i++)
				{
					if (loads[i] == Load:logLoad)
					{
						Load_Ramp(Load:logLoad, Load_RampType_Variable, Seconds:3.0, Level:logLevel);
					}
				}
			}
		}
	}
	else
	{
		// If the logging isn't enabled because their either isn't a memory card or a problem occurred with logging
		// we will then launch the backup task.
		Task_Start(Task:backupTask, 0, _:Event_None, 0, 0);

		// As long as another event doesn't come, we will wait
		while (initialEventCount == GetEventCount())
		{
			sleep(-5.0);			
		}

		// launch a cleanup task to stop whatever the start backup task began.
		Task_Start(Task:cleanUpTask, 0, _:Event_None, 0, 0);
	}

	// Pop the next event off the queue so we don't restart this procedure
	GetNextEvent();

	EnLog_EndDump(EnLog_Type_Status);

	// When the vacation is finished, return all of the loads to the previous levels
	for (i = 0 ; i < loadCount ; i++)
	{
		Load_Ramp(loads[i], Load_RampType_Variable, Seconds:3.0, prevLevels[i]);
	}
}

/*
<FunctionInfo>
	<Localization Language="en">
		<DisplayName>Vacation Is Running</DisplayName>
		<Description>Reports True if the Vacation Mode is turned on.  Reports false otherwise.</Description>
		<QueryDescription>The LED will be set to the second state if the vacation mode is running.  The LED will be set to the first state in all other cases.</QueryDescription>
		<TitleFormat>Vacation Is Running</TitleFormat>
		<DisplayFormat>The LED will be set to the second state if the vacation mode is running on this task, and to the first state otherwise.</DisplayFormat>
		<QueryDisplayFormat>The LED will be set to the second state if the vacation mode is running on this task, and to the first state otherwise.</QueryDisplayFormat>
	</Localization>
	<QueryClass>Vacation</QueryClass>
	<RequiredMethods>
		<MethodName>Task_IsRunning</MethodName>
	</RequiredMethods>
</FunctionInfo>
*/
query bool:VacationRunning()
{
	new Task:object = GetCurrentTask();
	return Task_IsRunning(object);
}?>
    </Object>
    <Object>
      <Script VID="10180" Master="9722" MTime="">
        <Name>Audio Video\Theater.sma</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Script</ObjectType>
      </Script>
      <?File / 
/*
Theater.sma - Theater Procedure Library
Copyright (c) 2012, Vantage Controls, Inc.
Version 0.4

ENUMS:

FUNCTIONS:

PROCEDURES:
	TogglePower
	TurnPowerOn
	TurnPowerOff

QUERIES:
*/

#if defined _Theater_included
  #endinput
#endif

#define _Theater_included
#include <power>
#include <avzone>
#include <mediaserver>
#include <string>
#include <avzone2>

/*
<FunctionInfo>
	<Localization Language="en">
		<DisplayName>Toggle Power</DisplayName>
		<Description>Turns power on and off to the devices.</Description>
		<TitleFormat>[objects] Toggle Power</TitleFormat>
		<DisplayFormat>[objects] Toggle Power</DisplayFormat>
	</Localization>
	<BrowserClass>AVPower</BrowserClass>
	<FunctionClasses>
		<FunctionClass>RequiresCustomization</FunctionClass>
	</FunctionClasses>
	<Supports>
		<QueryClass>Standard</QueryClass>
		<QueryClass>Sender</QueryClass>
		<QueryClass>PowerInterface</QueryClass>
	</Supports>
	<DefaultQuery>Power_GetState</DefaultQuery>
	<RequiredMethods>
		<MethodName>Power_On</MethodName>
		<MethodName>Power_Off</MethodName>
	</RequiredMethods>
	<Param Name="objects">
		<Localization Language="en">
			<DisplayName>Device</DisplayName>
			<Description>The devices whose power is to be toggled.</Description>
		</Localization>
		<Visible>true</Visible>
	</Param>
</FunctionInfo>
*/
procedure TogglePower(Power:objects[])
{
	if (GetEvent() != Event_Learn)
	{
		new objCount = sizeof(objects);
		
		if (objCount > 0)
		{
			// Base our toggle on the state of the first object
			// ensuring that all others are in sync with the first
			new Power_State:pState = Power_GetState(objects[0]);

			for (new i=0; i < objCount; i++)
			{
				if (pState == Power_State_Off)
				{
					Power_On(objects[i]);
				}
				else
				{
					Power_Off(objects[i]);
				}
			}
		}
	}
}

/*
<FunctionInfo>
	<Localization Language="en">
		<DisplayName>Toggle Zone Power</DisplayName>
		<Description>Turns power on and off to the AV Zone.</Description>
		<TitleFormat>[objects] Toggle Zone Power</TitleFormat>
		<DisplayFormat>[objects] Toggle Zone Power</DisplayFormat>
	</Localization>
	<BrowserClass>AVZonePower</BrowserClass>
    <FunctionClasses>
      <FunctionClass>Retired</FunctionClass>
    </FunctionClasses>
	<FunctionClasses>
		<FunctionClass>RequiresCustomization</FunctionClass>
	</FunctionClasses>
	<Supports>
		<QueryClass>Standard</QueryClass>
		<QueryClass>AVAVZone</QueryClass>
		<QueryClass>AVZonePower</QueryClass>
	</Supports>
	<DefaultQuery>AVZone_ZonePowerGet</DefaultQuery>
	<RequiredMethods>
		<MethodName>AVZone_ZonePowerGet</MethodName>
		<MethodName>AVZone_ZonePowerOn</MethodName>
		<MethodName>AVZone_ZonePowerOff</MethodName>
	</RequiredMethods>
	<Param Name="objects">
		<Localization Language="en">
			<DisplayName>AV Zone</DisplayName>
			<Description>The zone whose power is to be toggled.</Description>
		</Localization>
		<Visible>true</Visible>
	</Param>
</FunctionInfo>
*/
procedure ToggleZonePower(AVZone:objects[])
{
	if (GetEvent() != Event_Learn)
	{
		new objCount = sizeof(objects);
		
		if (objCount > 0)
		{
			// Base our toggle on the state of the first object
			// ensuring that all others are in sync with the first
			new bool:pState = AVZone_ZonePowerGet(objects[0]);

			for (new i=0; i < objCount; i++)
			{
				if (pState)
				{
					AVZone_ZonePowerOff(objects[i]);
				}
				else
				{
					AVZone_ZonePowerOn(objects[i]);
				}
			}
		}
	}	
}

/*
<FunctionInfo>
	<Localization Language="en">
		<DisplayName>Power On</DisplayName>
		<Description>Turns power on to the devices.</Description>
		<TitleFormat>[objects] Power On</TitleFormat>
		<DisplayFormat>[objects] Power On</DisplayFormat>
	</Localization>
	<BrowserClass>AVPower</BrowserClass>
	<FunctionClasses>
		<FunctionClass>RequiresCustomization</FunctionClass>
	</FunctionClasses>
	<Supports>
		<QueryClass>Standard</QueryClass>
		<QueryClass>Sender</QueryClass>
		<QueryClass>PowerInterface</QueryClass>
	</Supports>
	<DefaultQuery>none</DefaultQuery>
	<RequiredMethods>
		<MethodName>Power_On</MethodName>
	</RequiredMethods>
	<Param Name="objects">
		<Localization Language="en">
			<DisplayName>Device</DisplayName>
			<Description>The devices to be turned on.</Description>
		</Localization>
		<Visible>true</Visible>
	</Param>
</FunctionInfo>
*/
procedure TurnPowerOn(Power:objects[])
{
	if (GetEvent() != Event_Learn)
	{
		new objCount = sizeof(objects);
		for (new i = 0 ; i < objCount ; i++)
		{
			Power_On(objects[i]);
		}
	}
}

/*
<FunctionInfo>
	<Localization Language="en">
		<DisplayName>Power Off</DisplayName>
		<Description>Turns power off to the devices.</Description>
		<TitleFormat>[objects] Power Off</TitleFormat>
		<DisplayFormat>[objects] Power Off</DisplayFormat>
	</Localization>
	<BrowserClass>AVPower</BrowserClass>
	<FunctionClasses>
		<FunctionClass>RequiresCustomization</FunctionClass>
	</FunctionClasses>
	<Supports>
		<QueryClass>Standard</QueryClass>
		<QueryClass>Sender</QueryClass>
		<QueryClass>PowerInterface</QueryClass>
	</Supports>
	<DefaultQuery>none</DefaultQuery>
	<RequiredMethods>
		<MethodName>Power_Off</MethodName>
	</RequiredMethods>
	<Param Name="objects">
		<Localization Language="en">
			<DisplayName>Device</DisplayName>
			<Description>The devices to be turned off.</Description>
		</Localization>
		<Visible>true</Visible>
	</Param>
</FunctionInfo>
*/
procedure TurnPowerOff(Power:objects[])
{
	if (GetEvent() != Event_Learn)
	{
		new objCount = sizeof(objects);
		for (new i = 0 ; i < objCount ; i++)
		{
			Power_Off(objects[i]);
		}
	}
}

/*
<FunctionInfo>
	<Localization Language="en">
		<DisplayName>NAS Location</DisplayName>
		<Description>Reports the Location of the currently selected NAS.</Description>
		<DisplayFormat>The NAS Location of [object]</DisplayFormat>
	</Localization>
	<BrowserClass>MediaServer</BrowserClass>
	<RequiredMethods>
		<MethodName>MediaServer_GetNasURL</MethodName>
	</RequiredMethods>
	<Param Name="object">
		<Localization Language="en">
			<DisplayName>Device</DisplayName>
			<Description>The device containing the information to be reported.</Description>
		</Localization>
	</Param>
	<Param Name="result">
		<Localization Language="en">
			<DisplayName>Result</DisplayName>
		</Localization>
		<Visible>false</Visible>
		<ContainsResult>true</ContainsResult>
	</Param>
	<Param Name="size">
		<Localization Language="en">
			<DisplayName>Size</DisplayName>
		</Localization>
		<Visible>false</Visible>
	</Param>
</FunctionInfo>
*/
procedure GetNasLocation(MediaServer:object, {_,Text}:result[], Number:size)
{
	if (size > Number:20) size = Number:300;
	new resultText[300 char] = { 0 };
	new temp[20 char] = { 0 };
	MediaServer_GetNasURL(object, temp, temp, resultText, Number:20, Number:20, Number:300);
	StrCopy(result, resultText, _:size);
}

/*
<FunctionInfo>
	<Localization Language="en">
		<DisplayName>NAS Username</DisplayName>
		<Description>Reports the Username of the currently selected NAS.</Description>
		<DisplayFormat>The NAS Username of [object]</DisplayFormat>
	</Localization>
	<BrowserClass>MediaServer</BrowserClass>
	<RequiredMethods>
		<MethodName>MediaServer_GetNasURL</MethodName>
	</RequiredMethods>
	<Param Name="object">
		<Localization Language="en">
			<DisplayName>Device</DisplayName>
			<Description>The device containing the information to be reported.</Description>
		</Localization>
	</Param>
	<Param Name="result">
		<Localization Language="en">
			<DisplayName>Result</DisplayName>
		</Localization>
		<Visible>false</Visible>
		<ContainsResult>true</ContainsResult>
	</Param>
	<Param Name="size">
		<Localization Language="en">
			<DisplayName>Size</DisplayName>
		</Localization>
		<Visible>false</Visible>
	</Param>
</FunctionInfo>
*/
procedure GetNasUsername(MediaServer:object, {_,Text}:result[], Number:size)
{
	if (size > Number:20) size = Number:20;
	new resultText[20 char] = { 0 };
	new temp[20 char] = { 0 };
	MediaServer_GetNasURL(object, resultText, temp, temp, Number:20, Number:20, Number:20);
	StrCopy(result, resultText, _:size);
}

/*
<FunctionInfo>
	<Localization Language="en">
		<DisplayName>NAS Password</DisplayName>
		<Description>Reports the Password of the currently selected NAS.</Description>
		<DisplayFormat>The NAS Password of [object]</DisplayFormat>
	</Localization>
	<BrowserClass>MediaServer</BrowserClass>
	<RequiredMethods>
		<MethodName>MediaServer_GetNasURL</MethodName>
	</RequiredMethods>
	<Param Name="object">
		<Localization Language="en">
			<DisplayName>Device</DisplayName>
			<Description>The device containing the information to be reported.</Description>
		</Localization>
	</Param>
	<Param Name="result">
		<Localization Language="en">
			<DisplayName>Result</DisplayName>
		</Localization>
		<Visible>false</Visible>
		<ContainsResult>true</ContainsResult>
	</Param>
	<Param Name="size">
		<Localization Language="en">
			<DisplayName>Size</DisplayName>
		</Localization>
		<Visible>false</Visible>
	</Param>
</FunctionInfo>
*/
procedure GetNasPassword(MediaServer:object, {_,Text}:result[], Number:size)
{
	if (size > Number:20) size = Number:20;
	new resultText[20 char] = { 0 };
	new temp[20 char] = { 0 };
	MediaServer_GetNasURL(object, temp, resultText, temp, Number:20, Number:20, Number:20);
	StrCopy(result, resultText, _:size);
}

/*
<FunctionInfo>
	<Localization Language="en">
		<DisplayName>Next Source - Limited</DisplayName>
		<Description>Selects the next source in the subset of sources defined.</Description>
		<TitleFormat>[object] Next Source Limited</TitleFormat>
		<DisplayFormat>[object] Next Source Limited</DisplayFormat>
	</Localization>
	<BrowserClass>AVAVZone</BrowserClass>
	<Supports>
		<QueryClass>Standard</QueryClass>
		<QueryClass>Sender</QueryClass>
		<QueryClass>AVAVZone</QueryClass>
	</Supports>
	<RequiredMethods>
		<MethodName>AVZone2_GetSource</MethodName>
		<MethodName>AVZone2_SetSource</MethodName>
	</RequiredMethods>
	<Param Name="object">
		<Localization Language="en">
			<DisplayName>Zone</DisplayName>
			<Description>The zone to control.</Description>
		</Localization>
		<Visible>true</Visible>
	</Param>
	<Param Name="mode">
		<Localization Language="en">
			<DisplayName>Mode</DisplayName>
			<Description>Determines the way in which to change the source.  Choices include 'Audio', 'Video', and 'Audio and Video'.</Description>
		</Localization>
	</Param>
	<Param Name="sources">
		<Localization Language="en">
			<DisplayName>Sources</DisplayName>
			<Description>The limited subset of sources to be used in this procedure.  The sources must be accessible by the zone being used.</Description>
		</Localization>
	</Param>
</FunctionInfo>
*/
procedure NextSourceLimited(AVZone2:object, AVZone2_Mode:mode, AVSource:sources[])
{
	new sourceCount = sizeof(sources);
	if (sourceCount > 0)
	{
		new AVSource:currentSource = AVZone2_GetSource(object, mode);
		new bool:found = false;
		for (new i = 0 ; i < sourceCount ; i++)
		{
			if (sources[i] == currentSource)
			{
				if (i == sourceCount - 1)
				{
					AVZone2_SetSource(object, mode, sources[0]);
					found = true;
					break;
				}
				else
				{
					AVZone2_SetSource(object, mode, sources[i+1]);
					found = true;
					break;
				}
			}
		}
		if (!found)
		{
			AVZone2_SetSource(object, mode, sources[0]);
		}
	}
}

/*
<FunctionInfo>
	<Localization Language="en">
		<DisplayName>Previous Source - Limited</DisplayName>
		<Description>Selects the previous source in the subset of sources defined.</Description>
		<TitleFormat>[object] Previous Source Limited</TitleFormat>
		<DisplayFormat>[object] Previous Source Limited</DisplayFormat>
	</Localization>
	<BrowserClass>AVAVZone</BrowserClass>
	<Supports>
		<QueryClass>Standard</QueryClass>
		<QueryClass>Sender</QueryClass>
		<QueryClass>AVAVZone</QueryClass>
	</Supports>
	<RequiredMethods>
		<MethodName>AVZone2_GetSource</MethodName>
		<MethodName>AVZone2_SetSource</MethodName>
	</RequiredMethods>
	<Param Name="object">
		<Localization Language="en">
			<DisplayName>Zone</DisplayName>
			<Description>The zone to control.</Description>
		</Localization>
		<Visible>true</Visible>
	</Param>
	<Param Name="mode">
		<Localization Language="en">
			<DisplayName>Mode</DisplayName>
			<Description>Determines the way in which to change the source.  Choices include 'Audio', 'Video', and 'Audio and Video'.</Description>
		</Localization>
	</Param>
	<Param Name="sources">
		<Localization Language="en">
			<DisplayName>Sources</DisplayName>
			<Description>The limited subset of sources to be used in this procedure.  The sources must be accessible by the zone being used.</Description>
		</Localization>
	</Param>
</FunctionInfo>
*/
procedure PreviousSourceLimited(AVZone2:object, AVZone2_Mode:mode, AVSource:sources[])
{
	new sourceCount = sizeof(sources);
	if (sourceCount > 0)
	{
		new AVSource:currentSource = AVZone2_GetSource(object, mode);
		new bool:found = false;
		for (new i = sourceCount - 1 ; i >= 0; i--)
		{
			if (sources[i] == currentSource)
			{
				if (i == 0)
				{
					AVZone2_SetSource(object, mode, sources[sourceCount - 1]);
					found = true;
					break;
				}
				else
				{
					AVZone2_SetSource(object, mode, sources[i-1]);
					found = true;
					break;
				}
			}
		}
		if (!found)
		{
			AVZone2_SetSource(object, mode, sources[0]);
		}
	}
}?>
    </Object>
    <Object>
      <Script VID="10181" Master="9722" MTime="">
        <Name>CustomScript_10181.sma</Name>
        <Model> 10012, 10049, 10438, 10434, 10340, 10341, 9942, 10060, 10103,</Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Script</ObjectType>
      </Script>
      <?File / 
/*******************************************************************************
*                                                                              *
*                WARNING! DO NOT EDIT! GENERATED CODE BELOW!                   *
*                                                                              *
*******************************************************************************/
#include "Programming\LaunchTasks"
#include <load>
#include <vantage>
#include "Lighting\Toggle"
#include "Programming\VantageTime"
#include "Programming\MiscTasks"
#include "Lighting\Dim"
#include <ledstyle>
#include "Audio Video\Theater"
#include <blind>
#include "HVAC"
#include "Lighting\Misc"

procedure SceneProgram_10012()
{
	if(Level:Load_GetLevel(.object = Load:71) == Level:0.0 && 
	   Level:Load_GetLevel(.object = Load:84) == Level:0.0)
	{
		LaunchTask(.tasks = Task:{9735}, .eventType = TriggerType:ButtonRelease, .param1 = Number:1);
	}
	else
	{
		LaunchTask(.tasks = Task:{722}, .eventType = TriggerType:ButtonRelease, .param1 = Number:1);
	}
}

procedure SceneProgram_10049(& {Number,GMem}:param2)
{
	On(.loads = Load:{10384, 83, 10413, 70}, .levels = Level:{0.0, 70.0, 100.0, 0.0}, .rampTime = Seconds:2.0, .learnable = bool:true, .bufferid = MemID:0);

	param2 = Number:4;
}

procedure SceneProgram_10438(& {Number,GMem}:param4, & {bool,GMem}:param1, & {Delay,GMem}:param5)
{
	if(bool:param1 == bool:false && 
	   Number:param4 == Number:0)
	{
		if(TriggerType:GetEventType() == TriggerType:ButtonPress)
		{
			if(bool:DayTime() == bool:true)
			{
				LaunchTaskWithCurrentEvent(.tasks = Task:{10436});
			}
			else
			{
				LaunchTaskWithCurrentEvent(.tasks = Task:{10437});
			}
		}
		else if(TriggerType:GetEventType() == TriggerType:ButtonRelease)
		{
			TheDelay(.delayTime = Delay:param5);

			Off(.loads = Load:{10197}, .rampTime = Seconds:2.0);
		}
	}
}

procedure SceneProgram_10434(& {Number,GMem}:param1)
{
	if(Number:param1 == Number:1)
	{
		param1 = Number:0;
	}
	else
	{
		param1 = Number:1;

		Off(.loads = Load:{10197}, .rampTime = Seconds:2.0);
	}
}

procedure SceneProgram_10340(& {bool,GMem}:param2)
{
	DimCycle(.loads = Load:{10197}, .levels = Level:{100.0}, .rampTime = Seconds:1.0, .fadeTime = Seconds:2.0, .rampRate = Seconds:5.0, .trackLED = bool:true, .learnable = bool:false, .learnedLevels = MemID:0, .minLearnedLevel = Level:10.0);

	param2 = bool:true;
}

procedure SceneProgram_10341(& {bool,GMem}:param1)
{
	Off(.loads = Load:{10197}, .rampTime = Seconds:3.0);

	TheDelay(.delayTime = Delay:5.0);

	param1 = bool:false;
}

procedure SceneProgram_9942(& {bool,GMem}:param2)
{
	param2 = bool:true;

	On(.loads = Load:{79, 9307, 67, 66, 10384, 83, 10413, 70, 55, 10197, 53, 54, 10383, 86, 9306, 58, 57, 56, 84, 71}, 
		.levels = Level:{100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0}, 
		.rampTime = Seconds:1.0, 
		.learnable = bool:false, 
		.bufferid = MemID:0);

	On(.loads = Load:{344}, .levels = Level:{100.0}, .rampTime = Seconds:0.0, .learnable = bool:false, .bufferid = MemID:1);

	Blind_Open(.object = Blind:10116);

	TurnPowerOff(.objects = Power:{10461, 10465, 10467, 10459, 10471, 10463, 10469});

	LEDStyle_SetMode(.object = LEDStyle:120, .mode = Number:2);
}

procedure SceneProgram_10060(& {bool,GMem}:param4, & {Number,GMem}:param1, & {bool,GMem}:param2)
{
	param1 = Number:1;

	Learn(.tasks = Task:{10108});

	TheDelay(.delayTime = Delay:0.200);

	LaunchTaskWithCurrentEvent(.tasks = Task:{9938});

	TheDelay(.delayTime = Delay:0.200);

	LaunchTaskWithCurrentEvent(.tasks = Task:{9866, 722});

	param4 = bool:true;

	Off(.loads = Load:{344}, .rampTime = Seconds:0.0);

	LEDStyle_SetMode(.object = LEDStyle:120, .mode = Number:1);

	param2 = bool:false;

	Off(.loads = Load:{79, 9307, 67, 66, 10384, 83, 10413, 70, 55, 10197, 53, 54, 58, 57, 56}, .rampTime = Seconds:3.0);

	TurnPowerOff(.objects = Power:{10461, 10465, 10467, 10459, 10471, 10463, 10469});

	WrapperSetOperationMode(.objects = Thermostat:{7015, 6975, 7000, 7005, 7534, 6985}, .mode = Thermostat_OperationMode_Off);

	LaunchTaskWithCurrentEvent(.tasks = Task:{9915, 9898, 9906});

	TheDelay(.delayTime = Delay:10.0);

	param4 = bool:false;
}

procedure SceneProgram_10103(& {bool,GMem}:param4, & {Number,GMem}:param1, & {bool,GMem}:param2)
{
	param1 = Number:3;

	Learn(.tasks = Task:{10108});

	TheDelay(.delayTime = Delay:0.200);

	LaunchTaskWithCurrentEvent(.tasks = Task:{9940});

	TheDelay(.delayTime = Delay:0.200);

	LaunchTaskWithCurrentEvent(.tasks = Task:{9866, 722});

	param4 = bool:true;

	Off(.loads = Load:{344}, .rampTime = Seconds:0.0);

	param2 = bool:false;

	LEDStyle_SetMode(.object = LEDStyle:120, .mode = Number:1);

	Off(.loads = Load:{79, 9307, 67, 66, 10384, 83, 10413, 70, 55, 10197, 53, 54, 58, 57, 56}, .rampTime = Seconds:2.0);

	TurnPowerOff(.objects = Power:{10461, 10465, 10467, 10459, 10471, 10463, 10469});

	Blind_Close(.object = Blind:10116);

	TheDelay(.delayTime = Delay:10.0);

	param4 = bool:false;
}
?>
    </Object>
    <Object>
      <Script VID="10182" Master="9722" MTime="">
        <Name>CustomScript_10182.sma</Name>
        <Model> 10052, 10044, 10053, 9929, 10020, 10054, 9927, 10029, 10051,</Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Script</ObjectType>
      </Script>
      <?File / 
/*******************************************************************************
*                                                                              *
*                WARNING! DO NOT EDIT! GENERATED CODE BELOW!                   *
*                                                                              *
*******************************************************************************/
#include "Lighting\Toggle"
#include <vantage>

procedure SceneProgram_10052(& {Number,GMem}:param1)
{
	On(.loads = Load:{57, 56, 58}, .levels = Level:{0.0, 0.0, 70.0}, .rampTime = Seconds:2.0, .learnable = bool:true, .bufferid = MemID:0);

	param1 = Number:4;
}

procedure SceneProgram_10044(& {bool,GMem}:param1, & {Number,GMem}:param5)
{
	On(.loads = Load:{84, 71}, .levels = Level:{50.0, 50.0}, .rampTime = Seconds:2.0, .learnable = bool:true, .bufferid = MemID:0);

	param1 = bool:true;

	param5 = Number:3;
}

procedure SceneProgram_10053(& {bool,GMem}:param1, & {Number,GMem}:param5)
{
	On(.loads = Load:{84, 71}, .levels = Level:{50.0, 50.0}, .rampTime = Seconds:2.0, .learnable = bool:true, .bufferid = MemID:0);

	param1 = bool:true;

	param5 = Number:4;
}

procedure SceneProgram_9929(& {Number,GMem}:param2)
{
	On(.loads = Load:{9307, 67, 66}, .levels = Level:{50.0, 50.0, 50.0}, .rampTime = Seconds:2.0, .learnable = bool:true, .bufferid = MemID:0);

	param2 = Number:3;
}

procedure SceneProgram_10020(& {Number,GMem}:param2)
{
	On(.loads = Load:{9307, 67, 66}, .levels = Level:{100.0, 100.0, 100.0}, .rampTime = Seconds:2.0, .learnable = bool:true, .bufferid = MemID:0);

	param2 = Number:2;
}

procedure SceneProgram_10054(& {Number,GMem}:param1)
{
	if(Number:param1 == Number:1)
	{
		param1 = Number:0;
	}
	else
	{
		param1 = Number:1;

		Off(.loads = Load:{10383, 86, 9306}, .rampTime = Seconds:2.0);
	}
}

procedure SceneProgram_9927(& {Number,GMem}:param2)
{
	Off(.loads = Load:{9307, 67, 66}, .rampTime = Seconds:2.0);

	param2 = Number:1;
}

procedure SceneProgram_10029(& {bool,GMem}:param1, & {Number,GMem}:param3)
{
	On(.loads = Load:{10383, 86, 9306}, .levels = Level:{50.0, 50.0, 50.0}, .rampTime = Seconds:2.0, .learnable = bool:true, .bufferid = MemID:0);

	param1 = bool:true;

	param3 = Number:3;
}

procedure SceneProgram_10051(& {bool,GMem}:param1, & {Number,GMem}:param3)
{
	On(.loads = Load:{10383, 86, 9306}, .levels = Level:{0.0, 70.0, 0.0}, .rampTime = Seconds:2.0, .learnable = bool:true, .bufferid = MemID:0);

	param1 = bool:true;

	param3 = Number:4;
}
?>
    </Object>
    <Object>
      <Script VID="10183" Master="9722" MTime="">
        <Name>CustomScript_10183.sma</Name>
        <Model> 10056, 10102, 10139, 10146, 10155, 10156, 10157, 9958, 10030, 9954,</Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Script</ObjectType>
      </Script>
      <?File / 
/*******************************************************************************
*                                                                              *
*                WARNING! DO NOT EDIT! GENERATED CODE BELOW!                   *
*                                                                              *
*******************************************************************************/
#include "Lighting\Toggle"
#include <vantage>
#include <blind>
#include <ledstyle>
#include "Programming\VantageTime"
#include "Programming\LaunchTasks"
#include <sounder>
#include "Lighting\Misc"
#include <load>
#include "Audio Video\Theater"

procedure SceneProgram_10056(& {Number,GMem}:param1)
{
	if(Number:param1 == Number:1)
	{
		param1 = Number:0;
	}
	else
	{
		param1 = Number:1;

		Off(.loads = Load:{79}, .rampTime = Seconds:2.0);
	}
}

procedure SceneProgram_10102(& {bool,GMem}:param4, & {Number,GMem}:param1, & {bool,GMem}:param3)
{
	param1 = Number:2;

	LaunchTaskWithCurrentEvent(.tasks = Task:{9940});

	TheDelay(.delayTime = Delay:0.200);

	LaunchTaskWithCurrentEvent(.tasks = Task:{10108});

	Off(.loads = Load:{344}, .rampTime = Seconds:0.0);

	param3 = bool:false;

	LEDStyle_SetMode(.object = LEDStyle:120, .mode = Number:1);

	param4 = bool:false;

	if(bool:DayTime() == bool:true)
	{
		Blind_Open(.object = Blind:10116);
	}
	else
	{
		Blind_Close(.object = Blind:10116);
	}
}

procedure SceneProgram_10139(& {Number,GMem}:param1)
{
	if(Number:param1 == Number:2)
	{
		Learn(.tasks = Task:{10020});
	}
	else if(Number:param1 == Number:3)
	{
		Learn(.tasks = Task:{9929});
	}
	else if(Number:param1 == Number:4)
	{
		Learn(.tasks = Task:{10047});
	}

	Sounder_PlayFX(.object = Sounder:9744, .id = 0, .duration = Seconds:1.0, .volume = Percentage:50);
}

procedure SceneProgram_10146()
{
	if(bool:DayTime() == bool:true && 
	   Level:Load_GetLevel(.object = Load:79) != Level:0.0)
	{
		Learn(.tasks = Task:{10144});
	}
	else
	{
		Learn(.tasks = Task:{10145});
	}
}

procedure SceneProgram_10155(& {Number,GMem}:param1)
{
	if(Number:param1 == Number:2)
	{
		LaunchTask(.tasks = Task:{9932}, .eventType = TriggerType:ButtonRelease, .param1 = Number:1);
	}
	else
	{
		LaunchTask(.tasks = Task:{9933}, .eventType = TriggerType:ButtonRelease, .param1 = Number:1);
	}
}

procedure SceneProgram_10156(& {Number,GMem}:param1)
{
	if(Number:param1 == Number:3)
	{
		LaunchTask(.tasks = Task:{9932}, .eventType = TriggerType:ButtonRelease, .param1 = Number:1);
	}
	else
	{
		LaunchTask(.tasks = Task:{10027}, .eventType = TriggerType:ButtonRelease, .param1 = Number:1);
	}
}

procedure SceneProgram_10157(& {Number,GMem}:param1)
{
	if(Number:param1 == Number:4)
	{
		LaunchTask(.tasks = Task:{9932}, .eventType = TriggerType:ButtonRelease, .param1 = Number:1);
	}
	else
	{
		LaunchTask(.tasks = Task:{10049}, .eventType = TriggerType:ButtonRelease, .param1 = Number:1);
	}
}

procedure SceneProgram_9958(& {Number,GMem}:param1)
{
	if(Number:param1 == Number:2)
	{
		Learn(.tasks = Task:{9933});
	}
	else if(Number:param1 == Number:3)
	{
		Learn(.tasks = Task:{10027});
	}
	else if(Number:param1 == Number:4)
	{
		Learn(.tasks = Task:{10049});
	}

	Sounder_PlayFX(.object = Sounder:9744, .id = 0, .duration = Seconds:1.0, .volume = Percentage:50);
}

procedure SceneProgram_10030(& {Number,GMem}:param1)
{
	On(.loads = Load:{57, 56, 58}, .levels = Level:{50.0, 50.0, 50.0}, .rampTime = Seconds:2.0, .learnable = bool:true, .bufferid = MemID:0);

	param1 = Number:3;
}

procedure SceneProgram_9954()
{
	LaunchTask(.tasks = Task:{9927, 9915, 9932, 9887, 9898, 9866, 722}, .eventType = TriggerType:ButtonRelease, .param1 = Number:1);

	Off(.loads = Load:{79}, .rampTime = Seconds:2.0);

	TurnPowerOff(.objects = Power:{10461, 10465, 10467, 10459, 10471, 10469});
}
?>
    </Object>
    <Object>
      <DCPowerProfile VID="10184" Master="0" MTime="">
        <Name>DC Power Profile 2</Name>
        <Model>Default</Model>
        <Note />
        <DName />
        <ObjectType>DCPowerProfile</ObjectType>
        <Min>0</Min>
        <Max>10</Max>
        <Adjust>10</Adjust>
        <Freq>60</Freq>
        <Inductive>false</Inductive>
        <Linearization label="" />
      </DCPowerProfile>
    </Object>
    <Object>
      <Load VID="10197" Position="" Master="9722" MTime="">
        <Name>Bed 1 - Dressing Rroom</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <ContractorNumber>A7</ContractorNumber>
        <DName>Dressing</DName>
        <FixtureDefinition>0</FixtureDefinition>
        <LoadType>Fluor. Electronic Dim</LoadType>
        <FixturePower>100</FixturePower>
        <FixtureQuantity>1</FixtureQuantity>
        <Power>100</Power>
        <OverrideLevel>100</OverrideLevel>
        <Parent Position="8">65</Parent>
        <ObjectType>Load</ObjectType>
        <Area>22</Area>
        <Location>
        </Location>
        <PowerProfile>10</PowerProfile>
      </Load>
    </Object>
    <Object>
      <FilteredAVZone VID="10263" Master="9722" MTime="">
        <Name>Filtered AV Living</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>FilteredAVZone</ObjectType>
        <Area>19</Area>
        <Location>
        </Location>
        <Category>
        </Category>
        <AVZone>10465</AVZone>
        <SourceTable>
          <Source>10446</Source>
          <Source>10447</Source>
          <Source>10449</Source>
          <Source>10450</Source>
        </SourceTable>
      </FilteredAVZone>
    </Object>
    <Object>
      <FilteredAVZone VID="10264" Master="9722" MTime="">
        <Name>Filtered AV Bed 1</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>FilteredAVZone</ObjectType>
        <Area>22</Area>
        <Location>
        </Location>
        <Category>
        </Category>
        <AVZone>10459</AVZone>
        <SourceTable>
          <Source>10446</Source>
          <Source>10449</Source>
          <Source>10450</Source>
        </SourceTable>
      </FilteredAVZone>
    </Object>
    <Object>
      <FilteredAVZone VID="10265" Master="9722" MTime="">
        <Name>Filtered AV Bed 1 En-Suite</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>FilteredAVZone</ObjectType>
        <Area>23</Area>
        <Location>
        </Location>
        <Category>
        </Category>
        <AVZone>10471</AVZone>
        <SourceTable>
          <Source>10446</Source>
          <Source>10449</Source>
          <Source>10450</Source>
        </SourceTable>
      </FilteredAVZone>
    </Object>
    <Object>
      <FilteredAVZone VID="10266" Master="9722" MTime="">
        <Name>Filtered AV Bed 2</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>FilteredAVZone</ObjectType>
        <Area>24</Area>
        <Location>
        </Location>
        <Category>
        </Category>
        <AVZone>10463</AVZone>
        <SourceTable>
          <Source>10447</Source>
          <Source>10449</Source>
          <Source>10450</Source>
        </SourceTable>
      </FilteredAVZone>
    </Object>
    <Object>
      <DIN10AmpRelayStation VID="10268" Master="9722" MTime="">
        <Name>Blinds Relay Station 2</Name>
        <Model>RS8-DIN</Model>
        <Note />
        <DName>Blinds Relay Station 2</DName>
        <ObjectType>DIN10AmpRelayStation</ObjectType>
        <Area>6</Area>
        <Location />
        <SerialNumber>5004742</SerialNumber>
        <Bus>2</Bus>
        <DINEnclosure Position="1" Row="3">38</DINEnclosure>
        <ModuleCount>9</ModuleCount>
      </DIN10AmpRelayStation>
    </Object>
    <Object>
      <Preset VID="10284" Master="9722" MTime="2016-09-28T13:44:14.829" Preset="AM">
        <Name>AMBand 1</Name>
        <Model>AM</Model>
        <Note />
        <DName />
        <Category>9740</Category>
        <Setup>
          <Action Function="" />
        </Setup>
        <PresetTable>
          <Preset Name="Preset 1" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>540</val>
            </Action>
          </Preset>
          <Preset Name="Preset 2" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>770</val>
            </Action>
          </Preset>
          <Preset Name="Preset 3" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>1000</val>
            </Action>
          </Preset>
          <Preset Name="Preset 4" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>1230</val>
            </Action>
          </Preset>
          <Preset Name="Preset 5" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>1460</val>
            </Action>
          </Preset>
          <Preset Name="Preset 6" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>1690</val>
            </Action>
          </Preset>
        </PresetTable>
        <DeviceTable />
        <ObjectType>Preset</ObjectType>
      </Preset>
    </Object>
    <Object>
      <Preset VID="10285" Master="9722" MTime="2016-09-28T13:44:14.830" Preset="FM">
        <Name>FMBand 1</Name>
        <Model>FM</Model>
        <Note />
        <DName />
        <Category>9740</Category>
        <Setup>
          <Action Function="" />
        </Setup>
        <PresetTable>
          <Preset Name="Preset 1" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>87.5</val>
            </Action>
          </Preset>
          <Preset Name="Preset 2" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>91.5</val>
            </Action>
          </Preset>
          <Preset Name="Preset 3" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>95.5</val>
            </Action>
          </Preset>
          <Preset Name="Preset 4" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>99.5</val>
            </Action>
          </Preset>
          <Preset Name="Preset 5" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>103.5</val>
            </Action>
          </Preset>
          <Preset Name="Preset 6" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>107.5</val>
            </Action>
          </Preset>
        </PresetTable>
        <DeviceTable />
        <ObjectType>Preset</ObjectType>
      </Preset>
    </Object>
    <Object>
      <Preset VID="10286" Master="9722" MTime="2016-09-28T13:44:14.831" Preset="XM">
        <Name>XMBand 1</Name>
        <Model>XM</Model>
        <Note />
        <DName />
        <Category>9740</Category>
        <Setup>
          <Action Function="" />
        </Setup>
        <PresetTable>
          <Preset Name="Preset 1" GenericIcon="true">
            <Action Function="Channel.Set">
              <val>1</val>
            </Action>
          </Preset>
          <Preset Name="Preset 2" GenericIcon="true">
            <Action Function="Channel.Set">
              <val>1</val>
            </Action>
          </Preset>
          <Preset Name="Preset 3" GenericIcon="true">
            <Action Function="Channel.Set">
              <val>1</val>
            </Action>
          </Preset>
          <Preset Name="Preset 4" GenericIcon="true">
            <Action Function="Channel.Set">
              <val>1</val>
            </Action>
          </Preset>
          <Preset Name="Preset 5" GenericIcon="true">
            <Action Function="Channel.Set">
              <val>1</val>
            </Action>
          </Preset>
          <Preset Name="Preset 6" GenericIcon="true">
            <Action Function="Channel.Set">
              <val>1</val>
            </Action>
          </Preset>
        </PresetTable>
        <DeviceTable />
        <ObjectType>Preset</ObjectType>
      </Preset>
    </Object>
    <Object>
      <Preset VID="10306" Master="9722" MTime="2016-09-28T13:44:14.838" Preset="AM">
        <Name>AMBand 1</Name>
        <Model>AM</Model>
        <Note />
        <DName />
        <Category>9740</Category>
        <Setup>
          <Action Function="" />
        </Setup>
        <PresetTable>
          <Preset Name="Preset 1" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>540</val>
            </Action>
          </Preset>
          <Preset Name="Preset 2" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>770</val>
            </Action>
          </Preset>
          <Preset Name="Preset 3" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>1000</val>
            </Action>
          </Preset>
          <Preset Name="Preset 4" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>1230</val>
            </Action>
          </Preset>
          <Preset Name="Preset 5" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>1460</val>
            </Action>
          </Preset>
          <Preset Name="Preset 6" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>1690</val>
            </Action>
          </Preset>
        </PresetTable>
        <DeviceTable />
        <ObjectType>Preset</ObjectType>
      </Preset>
    </Object>
    <Object>
      <Preset VID="10307" Master="9722" MTime="2016-09-28T13:44:14.838" Preset="FM">
        <Name>FMBand 1</Name>
        <Model>FM</Model>
        <Note />
        <DName />
        <Category>9740</Category>
        <Setup>
          <Action Function="" />
        </Setup>
        <PresetTable>
          <Preset Name="Preset 1" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>87.5</val>
            </Action>
          </Preset>
          <Preset Name="Preset 2" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>91.5</val>
            </Action>
          </Preset>
          <Preset Name="Preset 3" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>95.5</val>
            </Action>
          </Preset>
          <Preset Name="Preset 4" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>99.5</val>
            </Action>
          </Preset>
          <Preset Name="Preset 5" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>103.5</val>
            </Action>
          </Preset>
          <Preset Name="Preset 6" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>107.5</val>
            </Action>
          </Preset>
        </PresetTable>
        <DeviceTable />
        <ObjectType>Preset</ObjectType>
      </Preset>
    </Object>
    <Object>
      <Preset VID="10308" Master="9722" MTime="2016-09-28T13:44:14.841" Preset="XM">
        <Name>XMBand 1</Name>
        <Model>XM</Model>
        <Note />
        <DName />
        <Category>9740</Category>
        <Setup>
          <Action Function="" />
        </Setup>
        <PresetTable>
          <Preset Name="Preset 1" GenericIcon="true">
            <Action Function="Channel.Set">
              <val>1</val>
            </Action>
          </Preset>
          <Preset Name="Preset 2" GenericIcon="true">
            <Action Function="Channel.Set">
              <val>1</val>
            </Action>
          </Preset>
          <Preset Name="Preset 3" GenericIcon="true">
            <Action Function="Channel.Set">
              <val>1</val>
            </Action>
          </Preset>
          <Preset Name="Preset 4" GenericIcon="true">
            <Action Function="Channel.Set">
              <val>1</val>
            </Action>
          </Preset>
          <Preset Name="Preset 5" GenericIcon="true">
            <Action Function="Channel.Set">
              <val>1</val>
            </Action>
          </Preset>
          <Preset Name="Preset 6" GenericIcon="true">
            <Action Function="Channel.Set">
              <val>1</val>
            </Action>
          </Preset>
        </PresetTable>
        <DeviceTable />
        <ObjectType>Preset</ObjectType>
      </Preset>
    </Object>
    <Object>
      <Task VID="10338" Master="9722" MTime="">
        <Name>W/C On</Name>
        <Model>W/C On</Model>
        <Note />
        <DName />
        <ObjectType>Task</ObjectType>
        <Category>9740</Category>
        <Procedure>
          <Target>10175</Target>
          <Function>DimCycle</Function>
          <Parameters>
            <Param>0</Param>
            <Param>1</Param>
            <Param>2</Param>
            <Param>2</Param>
            <Param>3</Param>
            <Param>4</Param>
            <Param>5</Param>
            <Param>6</Param>
            <Param>7</Param>
          </Parameters>
        </Procedure>
        <Query>
          <Target>10168</Target>
          <Function>LoadsOn</Function>
          <Parameters>
            <Param>0</Param>
          </Parameters>
        </Query>
        <Adjust>
          <Target>10173</Target>
          <Function>AdjustLoads</Function>
          <Parameters>
            <Param>0</Param>
            <Param>3</Param>
            <Param>7</Param>
          </Parameters>
        </Adjust>
        <Level Max="100">
          <Target>10173</Target>
          <Function>AverageLoadLevel</Function>
          <Parameters>
            <Param>0</Param>
          </Parameters>
        </Level>
        <ParamTable>
          <Param ID="0">
            <array>
              <val>84</val>
              <val>71</val>
            </array>
          </Param>
          <Param ID="1" Fixed="true">
            <array>
              <val>100</val>
              <val>100</val>
            </array>
          </Param>
          <Param ID="2" Fixed="true">
            <val>2</val>
          </Param>
          <Param ID="3" Fixed="true">
            <val>5</val>
          </Param>
          <Param ID="4">
            <val>1</val>
          </Param>
          <Param ID="5">
            <val>0</val>
          </Param>
          <Param ID="6">
            <val>0</val>
          </Param>
          <Param ID="7" Fixed="true">
            <val>10</val>
          </Param>
        </ParamTable>
        <DependTable>
          <Param status="Load.GetLevel">0</Param>
        </DependTable>
      </Task>
      <Module>
        <Library Name="Lighting\Dim" Local="true" />
        <Library Name="vantage" Local="false" />
        <Scene>
          <Name>SceneProgram_10338</Name>
          <Type>procedure</Type>
          <Parameters />
          <ParameterValues />
          <FunctionBody>
            <FunctionCall disable="false">
              <Name>DimCycle</Name>
              <Parameters>
                <Param>
                  <Label>Load</Label>
                  <Initializer>
                    <Constant Type="int">84</Constant>
                    <Constant Type="int">71</Constant>
                  </Initializer>
                  <ParamName>loads</ParamName>
                </Param>
                <Param>
                  <Label>Level</Label>
                  <Initializer>
                    <Constant Type="float">100.0</Constant>
                    <Constant Type="float">100.0</Constant>
                  </Initializer>
                  <ParamName>levels</ParamName>
                </Param>
                <Param>
                  <Label>Seconds</Label>
                  <Constant Type="float">2.0</Constant>
                  <ParamName>rampTime</ParamName>
                </Param>
                <Param>
                  <Label>Seconds</Label>
                  <Constant Type="float">2.0</Constant>
                  <ParamName>fadeTime</ParamName>
                </Param>
                <Param>
                  <Label>Seconds</Label>
                  <Constant Type="float">5.0</Constant>
                  <ParamName>rampRate</ParamName>
                </Param>
                <Param>
                  <Label>bool</Label>
                  <Constant Type="bool">true</Constant>
                  <ParamName>trackLED</ParamName>
                </Param>
                <Param>
                  <Label>bool</Label>
                  <Constant Type="bool">false</Constant>
                  <ParamName>learnable</ParamName>
                </Param>
                <Param>
                  <Label>MemID</Label>
                  <Constant Type="int">0</Constant>
                  <ParamName>learnedLevels</ParamName>
                </Param>
                <Param>
                  <Label>Level</Label>
                  <Constant Type="float">10.0</Constant>
                  <ParamName>minLearnedLevel</ParamName>
                </Param>
              </Parameters>
            </FunctionCall>
            <QueryCall>
              <Name>LoadsOn</Name>
              <Parameters>
                <Param>
                  <Label>Load</Label>
                  <Initializer>
                    <Constant Type="int">84</Constant>
                    <Constant Type="int">71</Constant>
                  </Initializer>
                  <ParamName>loads</ParamName>
                </Param>
              </Parameters>
            </QueryCall>
          </FunctionBody>
        </Scene>
      </Module>
    </Object>
    <Object>
      <Task VID="10339" Master="9722" MTime="">
        <Name>W/C Off</Name>
        <Model>W/C Off</Model>
        <Note />
        <DName />
        <ObjectType>Task</ObjectType>
        <Category>9740</Category>
        <Procedure>
          <Target>10171</Target>
          <Function>PressAndHold</Function>
          <Parameters>
            <Param>0</Param>
            <Param>1</Param>
            <Param>2</Param>
            <Param>3</Param>
          </Parameters>
        </Procedure>
        <Query>
          <Target>10168</Target>
          <Function>LoadsOff</Function>
          <Parameters>
            <Param>4</Param>
          </Parameters>
        </Query>
        <Adjust>
          <Target>0</Target>
          <Function />
          <Parameters />
        </Adjust>
        <Level>
          <Target>0</Target>
          <Function />
          <Parameters />
        </Level>
        <ParamTable>
          <Param ID="0">
            <array>
              <val>722</val>
            </array>
          </Param>
          <Param ID="1">
            <array>
              <val>9742</val>
            </array>
          </Param>
          <Param ID="2">
            <val>0</val>
          </Param>
          <Param ID="3">
            <val>2</val>
          </Param>
          <Param ID="4">
            <array>
              <val>84</val>
              <val>71</val>
            </array>
          </Param>
        </ParamTable>
        <DependTable>
          <Param status="Load.GetLevel">4</Param>
        </DependTable>
      </Task>
      <Module>
        <Library Name="Programming\LaunchTasks" Local="true" />
        <Library Name="vantage" Local="false" />
        <Scene>
          <Name>SceneProgram_10339</Name>
          <Type>procedure</Type>
          <Parameters />
          <ParameterValues />
          <FunctionBody>
            <FunctionCall disable="false">
              <Name>PressAndHold</Name>
              <Parameters>
                <Param>
                  <Label>Task</Label>
                  <Initializer>
                    <Constant Type="int">722</Constant>
                  </Initializer>
                  <ParamName>pressTasks</ParamName>
                </Param>
                <Param>
                  <Label>Task</Label>
                  <Initializer>
                    <Constant Type="int">9742</Constant>
                  </Initializer>
                  <ParamName>holdTasks</ParamName>
                </Param>
                <Param>
                  <Label>TriggerType</Label>
                  <Identifier>ButtonRelease</Identifier>
                  <ParamName>pressEventType</ParamName>
                </Param>
                <Param>
                  <Label>TriggerType</Label>
                  <Identifier>ButtonHold</Identifier>
                  <ParamName>holdEventType</ParamName>
                </Param>
              </Parameters>
            </FunctionCall>
            <QueryCall>
              <Name>LoadsOff</Name>
              <Parameters>
                <Param>
                  <Label>Load</Label>
                  <Initializer>
                    <Constant Type="int">84</Constant>
                    <Constant Type="int">71</Constant>
                  </Initializer>
                  <ParamName>loads</ParamName>
                </Param>
              </Parameters>
            </QueryCall>
          </FunctionBody>
        </Scene>
      </Module>
    </Object>
    <Object>
      <Task VID="10340" Master="9722" MTime="">
        <Name>Dressing On</Name>
        <Model>Dressing On</Model>
        <Note />
        <DName />
        <ObjectType>Task</ObjectType>
        <Category>10433</Category>
        <Procedure>
          <Target>10181</Target>
          <Function>SceneProgram_10340</Function>
          <Parameters>
            <Param>0</Param>
          </Parameters>
        </Procedure>
        <Query>
          <Target>10168</Target>
          <Function>LoadsOn</Function>
          <Parameters>
            <Param>1</Param>
          </Parameters>
        </Query>
        <Adjust>
          <Target>10173</Target>
          <Function>AdjustLoads</Function>
          <Parameters>
            <Param>1</Param>
            <Param>2</Param>
            <Param>3</Param>
          </Parameters>
        </Adjust>
        <Level Max="100">
          <Target>10173</Target>
          <Function>AverageLoadLevel</Function>
          <Parameters>
            <Param>1</Param>
          </Parameters>
        </Level>
        <ParamTable>
          <Param ID="0">
            <gmem Type="ref">10441</gmem>
          </Param>
          <Param ID="1">
            <array>
              <val>10197</val>
            </array>
          </Param>
          <Param ID="2" Fixed="true">
            <val>5</val>
          </Param>
          <Param ID="3" Fixed="true">
            <val>10</val>
          </Param>
        </ParamTable>
        <DependTable>
          <Param status="Load.GetLevel">1</Param>
        </DependTable>
      </Task>
      <Module>
        <Library Name="Lighting\Dim" Local="true" />
        <Library Name="vantage" Local="false" />
        <Scene>
          <Name>SceneProgram_10340</Name>
          <Type>procedure</Type>
          <Parameters>
            <Param>
              <Reference>true</Reference>
              <Label>bool</Label>
              <Label>GMem</Label>
              <Name>param2</Name>
            </Param>
          </Parameters>
          <ParameterValues>
            <Param>
              <Label>GMem</Label>
              <Constant Type="int">10441</Constant>
              <ParamName>param2</ParamName>
            </Param>
          </ParameterValues>
          <FunctionBody>
            <FunctionCall disable="false">
              <Name>DimCycle</Name>
              <Parameters>
                <Param>
                  <Label>Load</Label>
                  <Initializer>
                    <Constant Type="int">10197</Constant>
                  </Initializer>
                  <ParamName>loads</ParamName>
                </Param>
                <Param>
                  <Label>Level</Label>
                  <Initializer>
                    <Constant Type="float">100.0</Constant>
                  </Initializer>
                  <ParamName>levels</ParamName>
                </Param>
                <Param>
                  <Label>Seconds</Label>
                  <Constant Type="float">1.0</Constant>
                  <ParamName>rampTime</ParamName>
                </Param>
                <Param>
                  <Label>Seconds</Label>
                  <Constant Type="float">2.0</Constant>
                  <ParamName>fadeTime</ParamName>
                </Param>
                <Param>
                  <Label>Seconds</Label>
                  <Constant Type="float">5.0</Constant>
                  <ParamName>rampRate</ParamName>
                </Param>
                <Param>
                  <Label>bool</Label>
                  <Constant Type="bool">true</Constant>
                  <ParamName>trackLED</ParamName>
                </Param>
                <Param>
                  <Label>bool</Label>
                  <Constant Type="bool">false</Constant>
                  <ParamName>learnable</ParamName>
                </Param>
                <Param>
                  <Label>MemID</Label>
                  <Constant Type="int">0</Constant>
                  <ParamName>learnedLevels</ParamName>
                </Param>
                <Param>
                  <Label>Level</Label>
                  <Constant Type="float">10.0</Constant>
                  <ParamName>minLearnedLevel</ParamName>
                </Param>
              </Parameters>
            </FunctionCall>
            <Assignment disable="false">
              <Operand>
                <Identifier>param2</Identifier>
              </Operand>
              <Assign>equals</Assign>
              <Operand>
                <Label>bool</Label>
                <Constant Type="bool">true</Constant>
              </Operand>
            </Assignment>
            <QueryCall>
              <Name>LoadsOn</Name>
              <Parameters>
                <Param>
                  <Label>Load</Label>
                  <Initializer>
                    <Constant Type="int">10197</Constant>
                  </Initializer>
                  <ParamName>loads</ParamName>
                </Param>
              </Parameters>
            </QueryCall>
          </FunctionBody>
        </Scene>
      </Module>
    </Object>
    <Object>
      <Task VID="10341" Master="9722" MTime="">
        <Name>Dressing Off</Name>
        <Model>Dressing Off</Model>
        <Note />
        <DName />
        <ObjectType>Task</ObjectType>
        <Category>10433</Category>
        <Procedure>
          <Target>10181</Target>
          <Function>SceneProgram_10341</Function>
          <Parameters>
            <Param>0</Param>
          </Parameters>
        </Procedure>
        <Query>
          <Target>10168</Target>
          <Function>LoadsOff</Function>
          <Parameters>
            <Param>1</Param>
          </Parameters>
        </Query>
        <Adjust>
          <Target>0</Target>
          <Function />
          <Parameters />
        </Adjust>
        <Level>
          <Target>0</Target>
          <Function />
          <Parameters />
        </Level>
        <ParamTable>
          <Param ID="0">
            <gmem Type="ref">9732</gmem>
          </Param>
          <Param ID="1">
            <array>
              <val>10197</val>
            </array>
          </Param>
        </ParamTable>
        <DependTable>
          <Param status="Load.GetLevel">1</Param>
        </DependTable>
      </Task>
      <Module>
        <Library Name="Programming\VantageTime" Local="true" />
        <Library Name="Lighting\Toggle" Local="true" />
        <Library Name="vantage" Local="false" />
        <Scene>
          <Name>SceneProgram_10341</Name>
          <Type>procedure</Type>
          <Parameters>
            <Param>
              <Reference>true</Reference>
              <Label>bool</Label>
              <Label>GMem</Label>
              <Name>param1</Name>
            </Param>
          </Parameters>
          <ParameterValues>
            <Param>
              <Label>GMem</Label>
              <Constant Type="int">9732</Constant>
              <ParamName>param1</ParamName>
            </Param>
          </ParameterValues>
          <FunctionBody>
            <FunctionCall disable="false">
              <Name>Off</Name>
              <Parameters>
                <Param>
                  <Label>Load</Label>
                  <Initializer>
                    <Constant Type="int">10197</Constant>
                  </Initializer>
                  <ParamName>loads</ParamName>
                </Param>
                <Param>
                  <Label>Seconds</Label>
                  <Constant Type="float">3.0</Constant>
                  <ParamName>rampTime</ParamName>
                </Param>
              </Parameters>
            </FunctionCall>
            <FunctionCall disable="false">
              <Name>TheDelay</Name>
              <Parameters>
                <Param>
                  <Label>Delay</Label>
                  <Constant Type="float">5.0</Constant>
                  <ParamName>delayTime</ParamName>
                </Param>
              </Parameters>
            </FunctionCall>
            <Assignment disable="false">
              <Operand>
                <Identifier>param1</Identifier>
              </Operand>
              <Assign>equals</Assign>
              <Operand>
                <Label>bool</Label>
                <Constant Type="bool">false</Constant>
              </Operand>
            </Assignment>
            <QueryCall>
              <Name>LoadsOff</Name>
              <Parameters>
                <Param>
                  <Label>Load</Label>
                  <Initializer>
                    <Constant Type="int">10197</Constant>
                  </Initializer>
                  <ParamName>loads</ParamName>
                </Param>
              </Parameters>
            </QueryCall>
          </FunctionBody>
        </Scene>
      </Module>
    </Object>
    <Object>
      <DryContact VID="10378" Master="9722" MTime="" Position="">
        <Name>Motion Sensor 1</Name>
        <Note>
        </Note>
        <Model>FL-MS MINI 360-16 - PIR Motion Sensor 16 ft./5 m.</Model>
        <DName>
        </DName>
        <ObjectType>DryContact</ObjectType>
        <Area>18</Area>
        <Location>
        </Location>
        <Parent Position="252">9784</Parent>
        <Down>9867</Down>
        <Up>9867</Up>
        <ReversePolarity>true</ReversePolarity>
        <HoldOnTime>0</HoldOnTime>
      </DryContact>
    </Object>
    <Object>
      <RelayBlind VID="10381" Master="9722" MTime="" ShadeOrientation="TopDown" ShadeType="Roller">
        <Name>Bed 1 Blinds 1</Name>
        <Model />
        <Note />
        <DName>Bed 1 Blinds 1</DName>
        <ObjectType>RelayBlind</ObjectType>
        <Area>22</Area>
        <Location />
        <ControlType>ReversingPolarity</ControlType>
        <OpenLoad>10394</OpenLoad>
        <CloseLoad>10394</CloseLoad>
        <PowerLoad>10392</PowerLoad>
        <Movement>
          <Open>35</Open>
          <Close>35</Close>
        </Movement>
        <PulseDuration>1.0</PulseDuration>
      </RelayBlind>
    </Object>
    <Object>
      <BlindGroup VID="10382" Master="9722" MTime="" ShadeOrientation="TopDown" ShadeType="Roller">
        <Name>Bed 1 Blinds</Name>
        <Model />
        <Note />
        <DName>Bed 1 Blinds</DName>
        <ObjectType>BlindGroup</ObjectType>
        <Area>22</Area>
        <Location />
        <Category>7</Category>
        <BlindTable>
          <Blind>9652</Blind>
          <Blind>10381</Blind>
          <Blind>10410</Blind>
        </BlindTable>
      </BlindGroup>
    </Object>
    <Object>
      <Load VID="10383" Position="" Master="9722" MTime="">
        <Name>Bed 1 En-Suite Bath Spot</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <ContractorNumber>A1</ContractorNumber>
        <DName>Bath</DName>
        <FixtureDefinition>0</FixtureDefinition>
        <LoadType>Fluor. Electronic Dim</LoadType>
        <FixturePower>100</FixturePower>
        <FixtureQuantity>1</FixtureQuantity>
        <Power>100</Power>
        <OverrideLevel>100</OverrideLevel>
        <Parent Position="6">78</Parent>
        <ObjectType>Load</ObjectType>
        <Area>23</Area>
        <Location>
        </Location>
        <PowerProfile>10</PowerProfile>
      </Load>
    </Object>
    <Object>
      <Load VID="10384" Position="" Master="9722" MTime="">
        <Name>Kitchen Entance </Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <ContractorNumber>A2</ContractorNumber>
        <DName>Spots 2</DName>
        <FixtureDefinition>0</FixtureDefinition>
        <LoadType>Fluor. Electronic Dim</LoadType>
        <FixturePower>100</FixturePower>
        <FixtureQuantity>1</FixtureQuantity>
        <Power>100</Power>
        <OverrideLevel>100</OverrideLevel>
        <Parent Position="5">78</Parent>
        <ObjectType>Load</ObjectType>
        <Area>20</Area>
        <Location>
        </Location>
        <PowerProfile>10</PowerProfile>
      </Load>
    </Object>
    <Object>
      <FilteredAVZone VID="10385" Master="9722" MTime="">
        <Name>Filtered AV Kitchen</Name>
        <Model />
        <Note />
        <DName />
        <ObjectType>FilteredAVZone</ObjectType>
        <Area>20</Area>
        <Location />
        <Category />
        <AVZone>10467</AVZone>
        <SourceTable>
          <Source>10446</Source>
          <Source>10447</Source>
          <Source>10449</Source>
          <Source>10450</Source>
        </SourceTable>
      </FilteredAVZone>
    </Object>
    <Object>
      <Load VID="10386" Position="" Master="9722" MTime="">
        <Name>Living Start/Stop 3</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <ContractorNumber>A5</ContractorNumber>
        <DName>Living Start/Stop 3</DName>
        <FixtureDefinition>0</FixtureDefinition>
        <LoadType>High Voltage Relay</LoadType>
        <FixturePower>100</FixturePower>
        <FixtureQuantity>1</FixtureQuantity>
        <Power>100</Power>
        <OverrideLevel>100</OverrideLevel>
        <Parent Position="3">10268</Parent>
        <ObjectType>Load</ObjectType>
        <Area>10147</Area>
        <Location>
        </Location>
        <PowerProfile>9</PowerProfile>
      </Load>
    </Object>
    <Object>
      <Load VID="10387" Position="" Master="9722" MTime="">
        <Name>Living Open/Close 3</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <ContractorNumber>A6</ContractorNumber>
        <DName>Living Open/Close 3</DName>
        <FixtureDefinition>0</FixtureDefinition>
        <LoadType>High Voltage Relay</LoadType>
        <FixturePower>100</FixturePower>
        <FixtureQuantity>1</FixtureQuantity>
        <Power>100</Power>
        <OverrideLevel>100</OverrideLevel>
        <Parent Position="4">10268</Parent>
        <ObjectType>Load</ObjectType>
        <Area>10147</Area>
        <Location>
        </Location>
        <PowerProfile>9</PowerProfile>
      </Load>
    </Object>
    <Object>
      <Load VID="10388" Position="" Master="9722" MTime="">
        <Name>Living Start/Stop 2</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <ContractorNumber>A15</ContractorNumber>
        <DName>Living Start/Stop 2</DName>
        <FixtureDefinition>0</FixtureDefinition>
        <LoadType>High Voltage Relay</LoadType>
        <FixturePower>100</FixturePower>
        <FixtureQuantity>1</FixtureQuantity>
        <Power>100</Power>
        <OverrideLevel>100</OverrideLevel>
        <Parent Position="5">10268</Parent>
        <ObjectType>Load</ObjectType>
        <Area>10147</Area>
        <Location>
        </Location>
        <PowerProfile>9</PowerProfile>
      </Load>
    </Object>
    <Object>
      <Load VID="10389" Position="" Master="9722" MTime="">
        <Name>Living Open/Close 2</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <ContractorNumber>A26</ContractorNumber>
        <DName>Living Open/Close 2</DName>
        <FixtureDefinition>0</FixtureDefinition>
        <LoadType>High Voltage Relay</LoadType>
        <FixturePower>100</FixturePower>
        <FixtureQuantity>1</FixtureQuantity>
        <Power>100</Power>
        <OverrideLevel>100</OverrideLevel>
        <Parent Position="6">10268</Parent>
        <ObjectType>Load</ObjectType>
        <Area>10147</Area>
        <Location>
        </Location>
        <PowerProfile>9</PowerProfile>
      </Load>
    </Object>
    <Object>
      <Load VID="10390" Position="" Master="9722" MTime="">
        <Name>Bed 1 Blinds Start/Stop 3</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <ContractorNumber>A28</ContractorNumber>
        <DName>Bed 1 Blinds Start/Stop 3</DName>
        <FixtureDefinition>0</FixtureDefinition>
        <LoadType>High Voltage Relay</LoadType>
        <FixturePower>100</FixturePower>
        <FixtureQuantity>1</FixtureQuantity>
        <Power>100</Power>
        <OverrideLevel>100</OverrideLevel>
        <Parent Position="1">92</Parent>
        <ObjectType>Load</ObjectType>
        <Area>10147</Area>
        <Location>
        </Location>
        <PowerProfile>9</PowerProfile>
      </Load>
    </Object>
    <Object>
      <Load VID="10391" Position="" Master="9722" MTime="">
        <Name>Bed 1  Blinds Up/Down 3</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <ContractorNumber>A31</ContractorNumber>
        <DName>Bed 1  Blinds Up/Down 3</DName>
        <FixtureDefinition>0</FixtureDefinition>
        <LoadType>High Voltage Relay</LoadType>
        <FixturePower>100</FixturePower>
        <FixtureQuantity>1</FixtureQuantity>
        <Power>100</Power>
        <OverrideLevel>100</OverrideLevel>
        <Parent Position="2">92</Parent>
        <ObjectType>Load</ObjectType>
        <Area>10147</Area>
        <Location>
        </Location>
        <PowerProfile>9</PowerProfile>
      </Load>
    </Object>
    <Object>
      <Load VID="10392" Position="" Master="9722" MTime="">
        <Name>Master Bed Blinds Start/Stop 1</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <ContractorNumber>A37</ContractorNumber>
        <DName>B1 Start/Stop 1</DName>
        <FixtureDefinition>0</FixtureDefinition>
        <LoadType>High Voltage Relay</LoadType>
        <FixturePower>100</FixturePower>
        <FixtureQuantity>1</FixtureQuantity>
        <Power>100</Power>
        <OverrideLevel>100</OverrideLevel>
        <Parent Position="3">92</Parent>
        <ObjectType>Load</ObjectType>
        <Area>10147</Area>
        <Location>
        </Location>
        <PowerProfile>9</PowerProfile>
      </Load>
    </Object>
    <Object>
      <Load VID="10394" Position="" Master="9722" MTime="">
        <Name>Master Bed Blinds Open Close 1</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <ContractorNumber>A41</ContractorNumber>
        <DName>B1 Up/Down 1</DName>
        <FixtureDefinition>0</FixtureDefinition>
        <LoadType>High Voltage Relay</LoadType>
        <FixturePower>100</FixturePower>
        <FixtureQuantity>1</FixtureQuantity>
        <Power>100</Power>
        <OverrideLevel>100</OverrideLevel>
        <Parent Position="4">92</Parent>
        <ObjectType>Load</ObjectType>
        <Area>10147</Area>
        <Location>
        </Location>
        <PowerProfile>9</PowerProfile>
      </Load>
    </Object>
    <Object>
      <RelayBlind VID="10395" Master="9722" MTime="" ShadeOrientation="TopDown" ShadeType="Roller">
        <Name>Living Blind 2</Name>
        <Model />
        <Note />
        <DName>Living Blind 2</DName>
        <ObjectType>RelayBlind</ObjectType>
        <Area>19</Area>
        <Location />
        <ControlType>ReversingPolarity</ControlType>
        <OpenLoad>10389</OpenLoad>
        <CloseLoad>10389</CloseLoad>
        <PowerLoad>10388</PowerLoad>
        <Movement>
          <Open>35</Open>
          <Close>35</Close>
        </Movement>
        <PulseDuration>1.0</PulseDuration>
      </RelayBlind>
    </Object>
    <Object>
      <RelayBlind VID="10396" Master="9722" MTime="" ShadeOrientation="TopDown" ShadeType="Roller">
        <Name>Living Blind 3</Name>
        <Model />
        <Note />
        <DName>Living Blind 3</DName>
        <ObjectType>RelayBlind</ObjectType>
        <Area>19</Area>
        <Location />
        <ControlType>ReversingPolarity</ControlType>
        <OpenLoad>10387</OpenLoad>
        <CloseLoad>10387</CloseLoad>
        <PowerLoad>10386</PowerLoad>
        <Movement>
          <Open>35</Open>
          <Close>35</Close>
        </Movement>
        <PulseDuration>1.0</PulseDuration>
      </RelayBlind>
    </Object>
    <Object>
      <BlindGroup VID="10398" Master="9722" MTime="" ShadeOrientation="TopDown" ShadeType="Roller">
        <Name>Living Blinds</Name>
        <Model />
        <Note />
        <DName>Living Blinds</DName>
        <ObjectType>BlindGroup</ObjectType>
        <Area>19</Area>
        <Location />
        <Category>7</Category>
        <BlindTable>
          <Blind>9650</Blind>
          <Blind>10395</Blind>
          <Blind>10396</Blind>
        </BlindTable>
      </BlindGroup>
    </Object>
    <Object>
      <Keypad VID="10406" Master="9722" MTime="" Position="">
        <Name>Master Dressing 1</Name>
        <Note>
        </Note>
        <Model>Default</Model>
        <DName>
        </DName>
        <ObjectType>Keypad</ObjectType>
        <Area>22</Area>
        <Location>
        </Location>
        <SerialNumber>4061041</SerialNumber>
        <Bus>3</Bus>
        <Parent Position="1">10407</Parent>
      </Keypad>
    </Object>
    <Object>
      <BackBox VID="10407" Master="9722" MTime="">
        <Name>Back Box 1</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>BackBox</ObjectType>
        <Area>22</Area>
        <Location>
        </Location>
        <KeypadStyle>261</KeypadStyle>
      </BackBox>
    </Object>
    <Object>
      <Button VID="10408" Master="9722" MTime="" Position="">
        <Name>on</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Button</ObjectType>
        <Parent Position="3">10406</Parent>
        <Down>10340</Down>
        <Up>10340</Up>
        <Hold>10340</Hold>
        <Text1>on</Text1>
        <Text2>
        </Text2>
        <PlacementTable>
          <Place>1</Place>
          <Place>2</Place>
          <Place>3</Place>
        </PlacementTable>
        <ButtonStyle>119</ButtonStyle>
        <LEDStyle>120</LEDStyle>
      </Button>
    </Object>
    <Object>
      <Button VID="10409" Master="9722" MTime="" Position="">
        <Name>off</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Button</ObjectType>
        <Parent Position="5">10406</Parent>
        <Down>10341</Down>
        <Up>0</Up>
        <Hold>0</Hold>
        <Text1>off</Text1>
        <Text2>
        </Text2>
        <PlacementTable>
          <Place>4</Place>
          <Place>5</Place>
        </PlacementTable>
        <ButtonStyle>119</ButtonStyle>
        <LEDStyle>120</LEDStyle>
      </Button>
    </Object>
    <Object>
      <RelayBlind VID="10410" Master="9722" MTime="" ShadeOrientation="TopDown" ShadeType="Roller">
        <Name>Bed 1 Blinds 3</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>RelayBlind</ObjectType>
        <Area>22</Area>
        <Location>
        </Location>
        <ControlType>ReversingPolarity</ControlType>
        <OpenLoad>10390</OpenLoad>
        <CloseLoad>10391</CloseLoad>
        <PowerLoad>10390</PowerLoad>
        <Movement>
          <Open>35</Open>
          <Close>35</Close>
        </Movement>
        <PulseDuration>1.0</PulseDuration>
        <SameDirectionStop>true</SameDirectionStop>
        <StopBehavior>Same</StopBehavior>
        <ReverseDirection>false</ReverseDirection>
      </RelayBlind>
    </Object>
    <Object>
      <Load VID="10413" Position="" Master="9722" MTime="">
        <Name>Kitchen Pendant</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <ContractorNumber>A3</ContractorNumber>
        <DName>Pendant</DName>
        <FixtureDefinition>0</FixtureDefinition>
        <LoadType>High Voltage Relay</LoadType>
        <FixturePower>100</FixturePower>
        <FixtureQuantity>1</FixtureQuantity>
        <Power>100</Power>
        <OverrideLevel>100</OverrideLevel>
        <Parent Position="7">10268</Parent>
        <ObjectType>Load</ObjectType>
        <Area>20</Area>
        <Location>
        </Location>
        <PowerProfile>9</PowerProfile>
      </Load>
    </Object>
    <Object>
      <Keypad VID="10415" Master="9722" MTime="" Position="">
        <Name>Master Dressing 2</Name>
        <Note />
        <Model>Default</Model>
        <DName />
        <ObjectType>Keypad</ObjectType>
        <Area>22</Area>
        <Location />
        <SerialNumber>4061409</SerialNumber>
        <Bus>3</Bus>
        <Parent Position="1">10418</Parent>
      </Keypad>
    </Object>
    <Object>
      <Button VID="10416" Master="9722" MTime="" Position="">
        <Name>on</Name>
        <Model />
        <Note />
        <DName />
        <ObjectType>Button</ObjectType>
        <Parent Position="3">10415</Parent>
        <Down>10340</Down>
        <Up>10340</Up>
        <Hold>10340</Hold>
        <Text1>on</Text1>
        <Text2 />
        <PlacementTable>
          <Place>1</Place>
          <Place>2</Place>
          <Place>3</Place>
        </PlacementTable>
        <ButtonStyle>119</ButtonStyle>
        <LEDStyle>120</LEDStyle>
      </Button>
    </Object>
    <Object>
      <Button VID="10417" Master="9722" MTime="" Position="">
        <Name>off</Name>
        <Model />
        <Note />
        <DName />
        <ObjectType>Button</ObjectType>
        <Parent Position="5">10415</Parent>
        <Down>10341</Down>
        <Up>0</Up>
        <Hold>0</Hold>
        <Text1>off</Text1>
        <Text2 />
        <PlacementTable>
          <Place>4</Place>
          <Place>5</Place>
        </PlacementTable>
        <ButtonStyle>119</ButtonStyle>
        <LEDStyle>120</LEDStyle>
      </Button>
    </Object>
    <Object>
      <BackBox VID="10418" Master="9722" MTime="">
        <Name>Back Box 1</Name>
        <Model />
        <Note />
        <DName />
        <ObjectType>BackBox</ObjectType>
        <Area>22</Area>
        <Location />
        <KeypadStyle>261</KeypadStyle>
      </BackBox>
    </Object>
    <Object>
      <FilteredAVZone VID="10419" Master="9722" MTime="">
        <Name>Filtered AV Dining</Name>
        <Model />
        <Note />
        <DName />
        <ObjectType>FilteredAVZone</ObjectType>
        <Area>19</Area>
        <Location />
        <Category />
        <AVZone>10461</AVZone>
        <SourceTable>
          <Source>10446</Source>
          <Source>10447</Source>
          <Source>10449</Source>
          <Source>10450</Source>
        </SourceTable>
      </FilteredAVZone>
    </Object>
    <Object>
      <FilteredAVZone VID="10420" Master="9722" MTime="">
        <Name>Filtered AV Bathroom</Name>
        <Model />
        <Note />
        <DName />
        <ObjectType>FilteredAVZone</ObjectType>
        <Area>27</Area>
        <Location />
        <Category />
        <AVZone>10469</AVZone>
        <SourceTable>
          <Source>10446</Source>
          <Source>10447</Source>
          <Source>10449</Source>
          <Source>10450</Source>
        </SourceTable>
      </FilteredAVZone>
    </Object>
    <Object>
      <EqCtrl VID="10421" Master="9722" MTime="" Type="Thermostat">
        <Name>Bathroom</Name>
        <Model>Black</Model>
        <Note />
        <DName>Bathroom</DName>
        <ObjectType>EqCtrl</ObjectType>
        <Area>27</Area>
        <Location />
        <Pages>2</Pages>
        <Activate>0</Activate>
        <Header Type="Thermostat">6985</Header>
        <Zone>10420</Zone>
        <SerialNumber>5027826</SerialNumber>
        <Bus>3</Bus>
        <Style>117</Style>
        <PresetTable>
          <Preset>10430</Preset>
          <Preset>10431</Preset>
          <Preset>10432</Preset>
        </PresetTable>
      </EqCtrl>
    </Object>
    <Object>
      <Button VID="10422" Master="9722" MTime="" Position="" Adjust="Full" MaxLevel="100">
        <Name>Scene 3</Name>
        <Model />
        <Note />
        <DName />
        <ObjectType>Button</ObjectType>
        <Parent Position="7">10421</Parent>
        <Down>10053</Down>
        <Up>0</Up>
        <Hold>0</Hold>
        <Text1>scene 3</Text1>
        <Text2 />
        <PlacementTable />
        <ButtonStyle>119</ButtonStyle>
        <LEDStyle>120</LEDStyle>
      </Button>
    </Object>
    <Object>
      <Button VID="10423" Master="9722" MTime="" Position="" Adjust="Full" MaxLevel="100">
        <Name>Scene 1</Name>
        <Model />
        <Note />
        <DName />
        <ObjectType>Button</ObjectType>
        <Parent Position="1">10421</Parent>
        <Down>9735</Down>
        <Up>0</Up>
        <Hold>0</Hold>
        <Text1>scene 1 </Text1>
        <Text2 />
        <PlacementTable />
        <ButtonStyle>119</ButtonStyle>
        <LEDStyle>120</LEDStyle>
      </Button>
    </Object>
    <Object>
      <Button VID="10424" Master="9722" MTime="" Position="" Adjust="Full" MaxLevel="100">
        <Name>Scene 2</Name>
        <Model />
        <Note />
        <DName />
        <ObjectType>Button</ObjectType>
        <Parent Position="4">10421</Parent>
        <Down>10044</Down>
        <Up>0</Up>
        <Hold>0</Hold>
        <Text1>scene 2</Text1>
        <Text2 />
        <PlacementTable />
        <ButtonStyle>119</ButtonStyle>
        <LEDStyle>120</LEDStyle>
      </Button>
    </Object>
    <Object>
      <Button VID="10425" Master="9722" MTime="" Position="" Adjust="None" MaxLevel="100">
        <Name>Hard Right Button</Name>
        <Model />
        <Note />
        <DName />
        <ObjectType>Button</ObjectType>
        <Parent Position="254">10421</Parent>
        <Down>10011</Down>
        <Up>10011</Up>
        <Hold>10011</Hold>
        <Text1 />
        <Text2 />
        <PlacementTable />
        <ButtonStyle>119</ButtonStyle>
        <LEDStyle>120</LEDStyle>
      </Button>
    </Object>
    <Object>
      <DryContact VID="10426" Master="9722" MTime="" Position="">
        <Name>En-Suite PIR Task</Name>
        <Note />
        <Model>EM-MOTIONSENSOR15 - 360? PIR Motion Sensor 15 ft./4.6 m.</Model>
        <DName />
        <ObjectType>DryContact</ObjectType>
        <Area>6</Area>
        <Location />
        <Parent Position="252">10421</Parent>
        <Down>9733</Down>
        <Up>9733</Up>
        <ReversePolarity>true</ReversePolarity>
        <HoldOnTime>0</HoldOnTime>
      </DryContact>
    </Object>
    <Object>
      <Button VID="10427" Master="9722" MTime="" Position="" Adjust="Full" MaxLevel="100">
        <Name>Spots</Name>
        <Model />
        <Note />
        <DName />
        <ObjectType>Button</ObjectType>
        <Parent Position="2">10421</Parent>
        <Down>9998</Down>
        <Up>9998</Up>
        <Hold>9998</Hold>
        <Text1>Spots</Text1>
        <Text2 />
        <PlacementTable />
        <ButtonStyle>119</ButtonStyle>
        <LEDStyle>120</LEDStyle>
      </Button>
    </Object>
    <Object>
      <Button VID="10428" Master="9722" MTime="" Position="" Adjust="Full" MaxLevel="100">
        <Name>Mirror</Name>
        <Model />
        <Note />
        <DName />
        <ObjectType>Button</ObjectType>
        <Parent Position="5">10421</Parent>
        <Down>9997</Down>
        <Up>9997</Up>
        <Hold>9997</Hold>
        <Text1>Mirror</Text1>
        <Text2 />
        <PlacementTable />
        <ButtonStyle>119</ButtonStyle>
        <LEDStyle>120</LEDStyle>
      </Button>
    </Object>
    <Object>
      <Button VID="10429" Master="9722" MTime="" Position="" Adjust="None" MaxLevel="100">
        <Name />
        <Model />
        <Note />
        <DName />
        <ObjectType>Button</ObjectType>
        <Parent Position="8">10421</Parent>
        <Down>0</Down>
        <Up>0</Up>
        <Hold>0</Hold>
        <Text1 />
        <Text2 />
        <PlacementTable />
        <ButtonStyle>119</ButtonStyle>
        <LEDStyle>120</LEDStyle>
      </Button>
    </Object>
    <Object>
      <Preset VID="10430" Master="9722" MTime="2016-09-28T13:44:13.902" Preset="AM">
        <Name>AMBand 1</Name>
        <Model>AM</Model>
        <Note />
        <DName />
        <Category>9740</Category>
        <Setup>
          <Action Function="" />
        </Setup>
        <PresetTable>
          <Preset Name="Preset 1" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>540</val>
            </Action>
          </Preset>
          <Preset Name="Preset 2" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>770</val>
            </Action>
          </Preset>
          <Preset Name="Preset 3" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>1000</val>
            </Action>
          </Preset>
          <Preset Name="Preset 4">
            <Action Function="Tuner.SelectFrequency">
              <val>1230</val>
            </Action>
          </Preset>
          <Preset Name="Preset 5" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>1460</val>
            </Action>
          </Preset>
          <Preset Name="Preset 6" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>1690</val>
            </Action>
          </Preset>
        </PresetTable>
        <DeviceTable />
        <ObjectType>Preset</ObjectType>
      </Preset>
    </Object>
    <Object>
      <Preset VID="10431" Master="9722" MTime="2016-09-28T13:44:13.903" Preset="FM">
        <Name>FMBand 1</Name>
        <Model>FM</Model>
        <Note />
        <DName />
        <Category>9740</Category>
        <Setup>
          <Action Function="" />
        </Setup>
        <PresetTable>
          <Preset Name="Preset 1" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>87.5</val>
            </Action>
          </Preset>
          <Preset Name="Preset 2" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>91.5</val>
            </Action>
          </Preset>
          <Preset Name="Preset 3" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>95.5</val>
            </Action>
          </Preset>
          <Preset Name="Preset 4" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>99.5</val>
            </Action>
          </Preset>
          <Preset Name="Preset 5" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>103.5</val>
            </Action>
          </Preset>
          <Preset Name="Preset 6" GenericIcon="true">
            <Action Function="Tuner.SelectFrequency">
              <val>107.5</val>
            </Action>
          </Preset>
        </PresetTable>
        <DeviceTable />
        <ObjectType>Preset</ObjectType>
      </Preset>
    </Object>
    <Object>
      <Preset VID="10432" Master="9722" MTime="2016-09-28T13:44:13.904" Preset="XM">
        <Name>XMBand 1</Name>
        <Model>XM</Model>
        <Note />
        <DName />
        <Category>9740</Category>
        <Setup>
          <Action Function="" />
        </Setup>
        <PresetTable>
          <Preset Name="Preset 1" GenericIcon="true">
            <Action Function="Channel.Set">
              <val>1</val>
            </Action>
          </Preset>
          <Preset Name="Preset 2" GenericIcon="true">
            <Action Function="Channel.Set">
              <val>1</val>
            </Action>
          </Preset>
          <Preset Name="Preset 3" GenericIcon="true">
            <Action Function="Channel.Set">
              <val>1</val>
            </Action>
          </Preset>
          <Preset Name="Preset 4" GenericIcon="true">
            <Action Function="Channel.Set">
              <val>1</val>
            </Action>
          </Preset>
          <Preset Name="Preset 5" GenericIcon="true">
            <Action Function="Channel.Set">
              <val>1</val>
            </Action>
          </Preset>
          <Preset Name="Preset 6" GenericIcon="true">
            <Action Function="Channel.Set">
              <val>1</val>
            </Action>
          </Preset>
        </PresetTable>
        <DeviceTable />
        <ObjectType>Preset</ObjectType>
      </Preset>
    </Object>
    <Object>
      <Category VID="10433" Master="9722" MTime="">
        <Name>Bed 1 Dressing</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Category</ObjectType>
        <Category>7</Category>
        <Location>6</Location>
      </Category>
    </Object>
    <Object>
      <Task VID="10434" Master="9722" MTime="">
        <Name>Dressing PIR</Name>
        <Model>Dressing PIR</Model>
        <Note />
        <DName />
        <ObjectType>Task</ObjectType>
        <Category>10433</Category>
        <Procedure>
          <Target>10181</Target>
          <Function>SceneProgram_10434</Function>
          <Parameters>
            <Param>0</Param>
          </Parameters>
        </Procedure>
        <Query>
          <Target>10172</Target>
          <Function>VariableAtSpecifiedValue</Function>
          <Parameters>
            <Param>1</Param>
            <Param>2</Param>
          </Parameters>
        </Query>
        <Adjust>
          <Target>0</Target>
          <Function />
          <Parameters />
        </Adjust>
        <Level>
          <Target>0</Target>
          <Function />
          <Parameters />
        </Level>
        <ParamTable>
          <Param ID="0">
            <gmem Type="ref">10435</gmem>
          </Param>
          <Param ID="1">
            <gmem>10435</gmem>
          </Param>
          <Param ID="2">
            <val>0</val>
          </Param>
        </ParamTable>
        <DependTable>
          <Param>1</Param>
        </DependTable>
      </Task>
      <Module>
        <Library Name="Lighting\Toggle" Local="true" />
        <Library Name="vantage" Local="false" />
        <Scene>
          <Name>SceneProgram_10434</Name>
          <Type>procedure</Type>
          <Parameters>
            <Param>
              <Reference>true</Reference>
              <Label>Number</Label>
              <Label>GMem</Label>
              <Name>param1</Name>
            </Param>
          </Parameters>
          <ParameterValues>
            <Param>
              <Label>GMem</Label>
              <Constant Type="int">10435</Constant>
              <ParamName>param1</ParamName>
            </Param>
          </ParameterValues>
          <FunctionBody>
            <If disable="false">
              <LogicalExpression>
                <GivePrecedence>false</GivePrecedence>
                <Expanded>true</Expanded>
                <RelationalExpression>
                  <Operand>
                    <Label>Number</Label>
                    <Identifier>param1</Identifier>
                  </Operand>
                  <Operator>eq</Operator>
                  <Operand>
                    <Label>Number</Label>
                    <Constant Type="int">1</Constant>
                  </Operand>
                </RelationalExpression>
              </LogicalExpression>
              <StatementList>
                <Assignment disable="false">
                  <Operand>
                    <Identifier>param1</Identifier>
                  </Operand>
                  <Assign>equals</Assign>
                  <Operand>
                    <Label>Number</Label>
                    <Constant Type="int">0</Constant>
                  </Operand>
                </Assignment>
              </StatementList>
              <Expanded>True</Expanded>
            </If>
            <Else disable="false">
              <StatementList>
                <Assignment disable="false">
                  <Operand>
                    <Identifier>param1</Identifier>
                  </Operand>
                  <Assign>equals</Assign>
                  <Operand>
                    <Label>Number</Label>
                    <Constant Type="int">1</Constant>
                  </Operand>
                </Assignment>
                <FunctionCall disable="false">
                  <Name>Off</Name>
                  <Parameters>
                    <Param>
                      <Label>Load</Label>
                      <Initializer>
                        <Constant Type="int">10197</Constant>
                      </Initializer>
                      <ParamName>loads</ParamName>
                    </Param>
                    <Param>
                      <Label>Seconds</Label>
                      <Constant Type="float">2.0</Constant>
                      <ParamName>rampTime</ParamName>
                    </Param>
                  </Parameters>
                </FunctionCall>
              </StatementList>
              <Expanded>True</Expanded>
            </Else>
            <QueryCall>
              <Name>VariableAtSpecifiedValue</Name>
              <Parameters>
                <Param>
                  <Label>GMem</Label>
                  <Constant Type="int">10435</Constant>
                  <ParamName>variable</ParamName>
                </Param>
                <Param>
                  <Label>Number</Label>
                  <Constant Type="int">0</Constant>
                  <ParamName>value</ParamName>
                </Param>
              </Parameters>
            </QueryCall>
          </FunctionBody>
        </Scene>
      </Module>
    </Object>
    <Object>
      <GMem VID="10435" Master="9722" MTime="">
        <Name>Dressing PIR</Name>
        <Model />
        <Note />
        <DName />
        <ObjectType>GMem</ObjectType>
        <Category>10433</Category>
        <data Fixed="false">
          <val>0</val>
        </data>
        <Persistent>true</Persistent>
        <Tag object="false">Number</Tag>
      </GMem>
    </Object>
    <Object>
      <Task VID="10436" Master="9722" MTime="">
        <Name>Dressing PIR High</Name>
        <Model>Dressing PIR High</Model>
        <Note />
        <DName />
        <ObjectType>Task</ObjectType>
        <Category>10433</Category>
        <Procedure>
          <Target>10169</Target>
          <Function>On</Function>
          <Parameters>
            <Param>0</Param>
            <Param>1</Param>
            <Param>2</Param>
            <Param>3</Param>
            <Param>4</Param>
          </Parameters>
        </Procedure>
        <Query>
          <Target>0</Target>
          <Function />
          <Parameters />
        </Query>
        <Adjust>
          <Target>10173</Target>
          <Function>AdjustLoads</Function>
          <Parameters>
            <Param>0</Param>
            <Param>5</Param>
            <Param>6</Param>
          </Parameters>
        </Adjust>
        <Level Max="100">
          <Target>10173</Target>
          <Function>AverageLoadLevel</Function>
          <Parameters>
            <Param>0</Param>
          </Parameters>
        </Level>
        <ParamTable>
          <Param ID="0">
            <array>
              <val>10197</val>
            </array>
          </Param>
          <Param ID="1" Fixed="true">
            <array>
              <val>100</val>
            </array>
          </Param>
          <Param ID="2" Fixed="true">
            <val>2</val>
          </Param>
          <Param ID="3">
            <val>1</val>
          </Param>
          <Param ID="4">
            <val>0</val>
          </Param>
          <Param ID="5" Fixed="true">
            <val>5</val>
          </Param>
          <Param ID="6" Fixed="true">
            <val>10</val>
          </Param>
        </ParamTable>
        <DependTable />
      </Task>
      <Module>
        <Library Name="Lighting\Toggle" Local="true" />
        <Library Name="vantage" Local="false" />
        <Scene>
          <Name>SceneProgram_10436</Name>
          <Type>procedure</Type>
          <Parameters />
          <ParameterValues />
          <FunctionBody>
            <FunctionCall disable="false">
              <Name>On</Name>
              <Parameters>
                <Param>
                  <Label>Load</Label>
                  <Initializer>
                    <Constant Type="int">10197</Constant>
                  </Initializer>
                  <ParamName>loads</ParamName>
                </Param>
                <Param>
                  <Label>Level</Label>
                  <Initializer>
                    <Constant Type="float">100.0</Constant>
                  </Initializer>
                  <ParamName>levels</ParamName>
                </Param>
                <Param>
                  <Label>Seconds</Label>
                  <Constant Type="float">2.0</Constant>
                  <ParamName>rampTime</ParamName>
                </Param>
                <Param>
                  <Label>bool</Label>
                  <Constant Type="bool">true</Constant>
                  <ParamName>learnable</ParamName>
                </Param>
                <Param>
                  <Label>MemID</Label>
                  <Constant Type="int">0</Constant>
                  <ParamName>bufferid</ParamName>
                </Param>
              </Parameters>
            </FunctionCall>
          </FunctionBody>
        </Scene>
      </Module>
    </Object>
    <Object>
      <Task VID="10437" Master="9722" MTime="">
        <Name>Dressing PIR Low</Name>
        <Model>Dressing PIR Low</Model>
        <Note />
        <DName />
        <ObjectType>Task</ObjectType>
        <Category>10433</Category>
        <Procedure>
          <Target>10169</Target>
          <Function>On</Function>
          <Parameters>
            <Param>0</Param>
            <Param>1</Param>
            <Param>2</Param>
            <Param>3</Param>
            <Param>4</Param>
          </Parameters>
        </Procedure>
        <Query>
          <Target>0</Target>
          <Function />
          <Parameters />
        </Query>
        <Adjust>
          <Target>10173</Target>
          <Function>AdjustLoads</Function>
          <Parameters>
            <Param>0</Param>
            <Param>5</Param>
            <Param>6</Param>
          </Parameters>
        </Adjust>
        <Level Max="100">
          <Target>10173</Target>
          <Function>AverageLoadLevel</Function>
          <Parameters>
            <Param>0</Param>
          </Parameters>
        </Level>
        <ParamTable>
          <Param ID="0">
            <array>
              <val>10197</val>
            </array>
          </Param>
          <Param ID="1" Fixed="true">
            <array>
              <val>50</val>
            </array>
          </Param>
          <Param ID="2" Fixed="true">
            <val>2</val>
          </Param>
          <Param ID="3">
            <val>1</val>
          </Param>
          <Param ID="4">
            <val>0</val>
          </Param>
          <Param ID="5" Fixed="true">
            <val>5</val>
          </Param>
          <Param ID="6" Fixed="true">
            <val>10</val>
          </Param>
        </ParamTable>
        <DependTable />
      </Task>
      <Module>
        <Library Name="Lighting\Toggle" Local="true" />
        <Library Name="vantage" Local="false" />
        <Scene>
          <Name>SceneProgram_10437</Name>
          <Type>procedure</Type>
          <Parameters />
          <ParameterValues />
          <FunctionBody>
            <FunctionCall disable="false">
              <Name>On</Name>
              <Parameters>
                <Param>
                  <Label>Load</Label>
                  <Initializer>
                    <Constant Type="int">10197</Constant>
                  </Initializer>
                  <ParamName>loads</ParamName>
                </Param>
                <Param>
                  <Label>Level</Label>
                  <Initializer>
                    <Constant Type="float">50.0</Constant>
                  </Initializer>
                  <ParamName>levels</ParamName>
                </Param>
                <Param>
                  <Label>Seconds</Label>
                  <Constant Type="float">2.0</Constant>
                  <ParamName>rampTime</ParamName>
                </Param>
                <Param>
                  <Label>bool</Label>
                  <Constant Type="bool">true</Constant>
                  <ParamName>learnable</ParamName>
                </Param>
                <Param>
                  <Label>MemID</Label>
                  <Constant Type="int">0</Constant>
                  <ParamName>bufferid</ParamName>
                </Param>
              </Parameters>
            </FunctionCall>
          </FunctionBody>
        </Scene>
      </Module>
    </Object>
    <Object>
      <Task VID="10438" Master="9722" MTime="">
        <Name>Dressing PIR Task</Name>
        <Model>Dressing PIR Task</Model>
        <Note />
        <DName />
        <ObjectType>Task</ObjectType>
        <Category>10433</Category>
        <Procedure>
          <Target>10181</Target>
          <Function>SceneProgram_10438</Function>
          <Parameters>
            <Param>0</Param>
            <Param>1</Param>
            <Param>2</Param>
          </Parameters>
        </Procedure>
        <Query>
          <Target>0</Target>
          <Function />
          <Parameters />
        </Query>
        <Adjust>
          <Target>0</Target>
          <Function />
          <Parameters />
        </Adjust>
        <Level>
          <Target>0</Target>
          <Function />
          <Parameters />
        </Level>
        <ParamTable>
          <Param ID="0">
            <gmem Type="ref">10435</gmem>
          </Param>
          <Param ID="1">
            <gmem Type="ref">10441</gmem>
          </Param>
          <Param ID="2">
            <gmem Type="ref">10105</gmem>
          </Param>
        </ParamTable>
        <DependTable />
      </Task>
      <Module>
        <Library Name="Lighting\Toggle" Local="true" />
        <Library Name="Programming\LaunchTasks" Local="true" />
        <Library Name="Programming\VantageTime" Local="true" />
        <Library Name="Programming\MiscTasks" Local="true" />
        <Library Name="vantage" Local="false" />
        <Scene>
          <Name>SceneProgram_10438</Name>
          <Type>procedure</Type>
          <Parameters>
            <Param>
              <Reference>true</Reference>
              <Label>Number</Label>
              <Label>GMem</Label>
              <Name>param4</Name>
            </Param>
            <Param>
              <Reference>true</Reference>
              <Label>bool</Label>
              <Label>GMem</Label>
              <Name>param1</Name>
            </Param>
            <Param>
              <Reference>true</Reference>
              <Label>Delay</Label>
              <Label>GMem</Label>
              <Name>param5</Name>
            </Param>
          </Parameters>
          <ParameterValues>
            <Param>
              <Label>GMem</Label>
              <Constant Type="int">10435</Constant>
              <ParamName>param4</ParamName>
            </Param>
            <Param>
              <Label>GMem</Label>
              <Constant Type="int">10441</Constant>
              <ParamName>param1</ParamName>
            </Param>
            <Param>
              <Label>GMem</Label>
              <Constant Type="int">10105</Constant>
              <ParamName>param5</ParamName>
            </Param>
          </ParameterValues>
          <FunctionBody>
            <If disable="false">
              <LogicalExpression>
                <GivePrecedence>false</GivePrecedence>
                <Expanded>true</Expanded>
                <LogicalExpression>
                  <GivePrecedence>false</GivePrecedence>
                  <Expanded>true</Expanded>
                  <RelationalExpression>
                    <Operand>
                      <Label>bool</Label>
                      <Identifier>param1</Identifier>
                    </Operand>
                    <Operator>eq</Operator>
                    <Operand>
                      <Label>bool</Label>
                      <Constant Type="bool">false</Constant>
                    </Operand>
                  </RelationalExpression>
                </LogicalExpression>
                <Operator>and</Operator>
                <LogicalExpression>
                  <GivePrecedence>false</GivePrecedence>
                  <Expanded>true</Expanded>
                  <RelationalExpression>
                    <Operand>
                      <Label>Number</Label>
                      <Identifier>param4</Identifier>
                    </Operand>
                    <Operator>eq</Operator>
                    <Operand>
                      <Label>Number</Label>
                      <Constant Type="int">0</Constant>
                    </Operand>
                  </RelationalExpression>
                </LogicalExpression>
              </LogicalExpression>
              <StatementList>
                <If disable="false">
                  <LogicalExpression>
                    <GivePrecedence>false</GivePrecedence>
                    <Expanded>true</Expanded>
                    <RelationalExpression>
                      <Operand>
                        <Label>TriggerType</Label>
                        <FunctionCall>
                          <Name>GetEventType</Name>
                          <Parameters />
                        </FunctionCall>
                      </Operand>
                      <Operator>eq</Operator>
                      <Operand>
                        <Label>TriggerType</Label>
                        <Identifier>ButtonPress</Identifier>
                      </Operand>
                    </RelationalExpression>
                  </LogicalExpression>
                  <StatementList>
                    <If disable="false">
                      <LogicalExpression>
                        <GivePrecedence>false</GivePrecedence>
                        <Expanded>true</Expanded>
                        <RelationalExpression>
                          <Operand>
                            <Label>bool</Label>
                            <FunctionCall>
                              <Name>DayTime</Name>
                              <Parameters />
                            </FunctionCall>
                          </Operand>
                          <Operator>eq</Operator>
                          <Operand>
                            <Label>bool</Label>
                            <Constant Type="bool">true</Constant>
                          </Operand>
                        </RelationalExpression>
                      </LogicalExpression>
                      <StatementList>
                        <FunctionCall disable="false">
                          <Name>LaunchTaskWithCurrentEvent</Name>
                          <Parameters>
                            <Param>
                              <Label>Task</Label>
                              <Initializer>
                                <Constant Type="int">10436</Constant>
                              </Initializer>
                              <ParamName>tasks</ParamName>
                            </Param>
                          </Parameters>
                        </FunctionCall>
                      </StatementList>
                      <Expanded>True</Expanded>
                    </If>
                    <Else disable="false">
                      <StatementList>
                        <FunctionCall disable="false">
                          <Name>LaunchTaskWithCurrentEvent</Name>
                          <Parameters>
                            <Param>
                              <Label>Task</Label>
                              <Initializer>
                                <Constant Type="int">10437</Constant>
                              </Initializer>
                              <ParamName>tasks</ParamName>
                            </Param>
                          </Parameters>
                        </FunctionCall>
                      </StatementList>
                      <Expanded>True</Expanded>
                    </Else>
                  </StatementList>
                  <Expanded>True</Expanded>
                </If>
                <ElseIf disable="false">
                  <LogicalExpression>
                    <GivePrecedence>false</GivePrecedence>
                    <Expanded>true</Expanded>
                    <RelationalExpression>
                      <Operand>
                        <Label>TriggerType</Label>
                        <FunctionCall>
                          <Name>GetEventType</Name>
                          <Parameters />
                        </FunctionCall>
                      </Operand>
                      <Operator>eq</Operator>
                      <Operand>
                        <Label>TriggerType</Label>
                        <Identifier>ButtonRelease</Identifier>
                      </Operand>
                    </RelationalExpression>
                  </LogicalExpression>
                  <StatementList>
                    <FunctionCall disable="false">
                      <Name>TheDelay</Name>
                      <Parameters>
                        <Param>
                          <Label>Delay</Label>
                          <Identifier>param5</Identifier>
                          <ParamName>delayTime</ParamName>
                        </Param>
                      </Parameters>
                    </FunctionCall>
                    <FunctionCall disable="false">
                      <Name>Off</Name>
                      <Parameters>
                        <Param>
                          <Label>Load</Label>
                          <Initializer>
                            <Constant Type="int">10197</Constant>
                          </Initializer>
                          <ParamName>loads</ParamName>
                        </Param>
                        <Param>
                          <Label>Seconds</Label>
                          <Constant Type="float">2.0</Constant>
                          <ParamName>rampTime</ParamName>
                        </Param>
                      </Parameters>
                    </FunctionCall>
                  </StatementList>
                  <Expanded>True</Expanded>
                </ElseIf>
              </StatementList>
              <Expanded>True</Expanded>
            </If>
          </FunctionBody>
        </Scene>
      </Module>
    </Object>
    <Object>
      <Script VID="10440" Master="9722" MTime="">
        <Name>CustomScript_10440.sma</Name>
        <Model> 9972, 9977, 10047, 9975, 10434, 9955,</Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Script</ObjectType>
      </Script>
      <?File / 
/*******************************************************************************
*                                                                              *
*                WARNING! DO NOT EDIT! GENERATED CODE BELOW!                   *
*                                                                              *
*******************************************************************************/
#include <sounder>
#include "Lighting\Misc"
#include <vantage>
#include "Programming\LaunchTasks"
#include <load>
#include "Lighting\Toggle"
#include <blind>
#include "Audio Video\Theater"

procedure SceneProgram_9972(& {Number,GMem}:param1)
{
	if(Number:param1 == Number:2)
	{
		Learn(.tasks = Task:{10142, 9868});
	}
	else if(Number:param1 == Number:3)
	{
		Learn(.tasks = Task:{10029});
	}
	else if(Number:param1 == Number:4)
	{
		Learn(.tasks = Task:{10143, 10051});
	}

	Sounder_PlayFX(.object = Sounder:9804, .id = 0, .duration = Seconds:1.0, .volume = Percentage:50);
}

procedure SceneProgram_9977()
{
	if(Level:Load_GetLevel(.object = Load:9306) == Level:0.0 && 
	   Level:Load_GetLevel(.object = Load:86) == Level:0.0 && 
	   Level:Load_GetLevel(.object = Load:10383) == Level:0.0)
	{
		LaunchTask(.tasks = Task:{9868}, .eventType = TriggerType:ButtonRelease, .param1 = Number:1);
	}
	else
	{
		LaunchTask(.tasks = Task:{9866}, .eventType = TriggerType:ButtonRelease, .param1 = Number:1);
	}
}

procedure SceneProgram_10047(& {Number,GMem}:param2)
{
	On(.loads = Load:{9307, 67, 66}, .levels = Level:{0.0, 70.0, 0.0}, .rampTime = Seconds:2.0, .learnable = bool:true, .bufferid = MemID:0);

	param2 = Number:4;
}

procedure SceneProgram_9975()
{
	if(Level:Load_GetLevel(.object = Load:10384) == Level:0.0 && 
	   Level:Load_GetLevel(.object = Load:70) == Level:0.0 && 
	   Level:Load_GetLevel(.object = Load:83) == Level:0.0 && 
	   Level:Load_GetLevel(.object = Load:10413) == Level:0.0)
	{
		LaunchTask(.tasks = Task:{9933}, .eventType = TriggerType:ButtonRelease, .param1 = Number:1);
	}
	else
	{
		LaunchTask(.tasks = Task:{9932}, .eventType = TriggerType:ButtonRelease, .param1 = Number:1);
	}
}

procedure SceneProgram_10434(& {Number,GMem}:param1)
{
	if(Number:param1 == Number:1)
	{
		param1 = Number:0;
	}
	else
	{
		param1 = Number:1;

		Off(.loads = Load:{10197}, .rampTime = Seconds:2.0);
	}
}

procedure SceneProgram_9955()
{
	LaunchTaskWithCurrentEvent(.tasks = Task:{9921});

	TurnPowerOff(.objects = Power:{10463});

	Blind_Close(.object = Blind:9653);
}
?>
    </Object>
    <Object>
      <GMem VID="10441" Master="9722" MTime="">
        <Name>Motion sensor dressing overide</Name>
        <Model />
        <Note />
        <DName />
        <ObjectType>GMem</ObjectType>
        <Category>10433</Category>
        <data Fixed="false">
          <val>0</val>
        </data>
        <Persistent>true</Persistent>
        <Tag object="false">bool</Tag>
      </GMem>
    </Object>
    <Object>
      <DryContact VID="10442" Master="9722" MTime="" Position="">
        <Name>Motion Sensor 1</Name>
        <Note>
        </Note>
        <Model>FL-MS MINI 360-33 - PIR Motion Sensor 33 ft./10 m.</Model>
        <DName>
        </DName>
        <ObjectType>DryContact</ObjectType>
        <Area>0</Area>
        <Location>
        </Location>
        <Parent Position="9">10406</Parent>
        <Down>10438</Down>
        <Up>10438</Up>
        <ReversePolarity>true</ReversePolarity>
        <HoldOnTime>0</HoldOnTime>
      </DryContact>
    </Object>
    <Object>
      <Load VID="10444" Position="" Master="9722" MTime="">
        <Name>Master Bed LED 2</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <ContractorNumber>A4</ContractorNumber>
        <DName>LED 2</DName>
        <FixtureDefinition>0</FixtureDefinition>
        <LoadType>Fluor. Electronic Dim</LoadType>
        <FixturePower>100</FixturePower>
        <FixtureQuantity>1</FixtureQuantity>
        <Power>100</Power>
        <OverrideLevel>100</OverrideLevel>
        <Parent Position="7">52</Parent>
        <ObjectType>Load</ObjectType>
        <Area>22</Area>
        <Location>
        </Location>
        <PowerProfile>11</PowerProfile>
      </Load>
    </Object>
    <Object>
      <Vantage.SwitcherStack VID="10445" Master="9722" MTime="">
        <Name>Vantage 850D-DA Audio Stack 2</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Vantage.SwitcherStack</ObjectType>
        <Area>17</Area>
        <Location>
        </Location>
        <SourceCount>
        </SourceCount>
        <AmplifierType>
        </AmplifierType>
        <AmplifierCount>
        </AmplifierCount>
        <Presets>
        </Presets>
      </Vantage.SwitcherStack>
    </Object>
    <Object>
      <Vantage.StaticSource VID="10446" Master="9722" MTime="" Position="">
        <Name>Bed 1 TV</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Vantage.StaticSource</ObjectType>
        <Parent Position="1">10445</Parent>
        <Device>5880</Device>
        <InitialSettings>true</InitialSettings>
      </Vantage.StaticSource>
    </Object>
    <Object>
      <Vantage.StaticSource VID="10447" Master="9722" MTime="" Position="">
        <Name>Bed 2 TV</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Vantage.StaticSource</ObjectType>
        <Parent Position="2">10445</Parent>
        <Device>5881</Device>
        <InitialSettings>true</InitialSettings>
      </Vantage.StaticSource>
    </Object>
    <Object>
      <Vantage.StaticSource VID="10448" Master="9722" MTime="" Position="">
        <Name>Source 3</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Vantage.StaticSource</ObjectType>
        <Parent Position="3">10445</Parent>
        <Device>0</Device>
        <InitialSettings>
        </InitialSettings>
      </Vantage.StaticSource>
    </Object>
    <Object>
      <Vantage.StaticSource VID="10449" Master="9722" MTime="" Position="">
        <Name>Living TV</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Vantage.StaticSource</ObjectType>
        <Parent Position="4">10445</Parent>
        <Device>5879</Device>
        <InitialSettings>true</InitialSettings>
      </Vantage.StaticSource>
    </Object>
    <Object>
      <Vantage.StaticSource VID="10450" Master="9722" MTime="" Position="">
        <Name>Airplay</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Vantage.StaticSource</ObjectType>
        <Parent Position="5">10445</Parent>
        <Device>5823</Device>
        <InitialSettings>true</InitialSettings>
      </Vantage.StaticSource>
    </Object>
    <Object>
      <Vantage.StaticSource VID="10451" Master="9722" MTime="" Position="">
        <Name>Source 6</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Vantage.StaticSource</ObjectType>
        <Parent Position="6">10445</Parent>
        <Device>0</Device>
        <InitialSettings>
        </InitialSettings>
      </Vantage.StaticSource>
    </Object>
    <Object>
      <Vantage.StaticSource VID="10452" Master="9722" MTime="" Position="">
        <Name>Source 7</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Vantage.StaticSource</ObjectType>
        <Parent Position="7">10445</Parent>
        <Device>0</Device>
        <InitialSettings>
        </InitialSettings>
      </Vantage.StaticSource>
    </Object>
    <Object>
      <Vantage.StaticSource VID="10453" Master="9722" MTime="" Position="">
        <Name>Source 8</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Vantage.StaticSource</ObjectType>
        <Parent Position="8">10445</Parent>
        <Device>0</Device>
        <InitialSettings>
        </InitialSettings>
      </Vantage.StaticSource>
    </Object>
    <Object>
      <Vantage.StaticSource VID="10454" Master="9722" MTime="" Position="">
        <Name>Source 9</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Vantage.StaticSource</ObjectType>
        <Parent Position="9">10445</Parent>
        <Device>0</Device>
        <InitialSettings>
        </InitialSettings>
      </Vantage.StaticSource>
    </Object>
    <Object>
      <Vantage.StaticSource VID="10455" Master="9722" MTime="" Position="">
        <Name>Source 10</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Vantage.StaticSource</ObjectType>
        <Parent Position="10">10445</Parent>
        <Device>0</Device>
        <InitialSettings>
        </InitialSettings>
      </Vantage.StaticSource>
    </Object>
    <Object>
      <Vantage.StaticSource VID="10456" Master="9722" MTime="" Position="">
        <Name>Source 11</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Vantage.StaticSource</ObjectType>
        <Parent Position="11">10445</Parent>
        <Device>0</Device>
        <InitialSettings>
        </InitialSettings>
      </Vantage.StaticSource>
    </Object>
    <Object>
      <Vantage.StaticSource VID="10457" Master="9722" MTime="" Position="">
        <Name>Source 12</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Vantage.StaticSource</ObjectType>
        <Parent Position="12">10445</Parent>
        <Device>0</Device>
        <InitialSettings>
        </InitialSettings>
      </Vantage.StaticSource>
    </Object>
    <Object>
      <Vantage.850Switcher VID="10458" Master="9722" MTime="" Position="">
        <Name>Vantage 850D-DA 2</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Vantage.850Switcher</ObjectType>
        <Area>17</Area>
        <Location>
        </Location>
        <SerialNumber>2390675</SerialNumber>
        <Bus>4</Bus>
        <Parent Position="1">10445</Parent>
        <Debug>
        </Debug>
      </Vantage.850Switcher>
    </Object>
    <Object>
      <Vantage.Zone VID="10459" Master="9722" MTime="" Position="" NotInAudio="False">
        <Name>Bed 1</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Vantage.Zone</ObjectType>
        <Area>22</Area>
        <Location>
        </Location>
        <Parent Position="1">10458</Parent>
        <InitialSettings>
        </InitialSettings>
      </Vantage.Zone>
    </Object>
    <Object>
      <Vantage.DynamicSource VID="10460" Master="9722" MTime="">
        <Name>Current Source 9</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Vantage.DynamicSource</ObjectType>
        <Parent Position="">10459</Parent>
        <InitialSettings>
        </InitialSettings>
      </Vantage.DynamicSource>
    </Object>
    <Object>
      <Vantage.Zone VID="10461" Master="9722" MTime="" Position="">
        <Name>Dining</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Vantage.Zone</ObjectType>
        <Area>19</Area>
        <Location>
        </Location>
        <Parent Position="2">10458</Parent>
        <InitialSettings>
        </InitialSettings>
      </Vantage.Zone>
    </Object>
    <Object>
      <Vantage.DynamicSource VID="10462" Master="9722" MTime="">
        <Name>Current Source 10</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Vantage.DynamicSource</ObjectType>
        <Parent Position="">10461</Parent>
        <InitialSettings>
        </InitialSettings>
      </Vantage.DynamicSource>
    </Object>
    <Object>
      <Vantage.Zone VID="10463" Master="9722" MTime="" Position="">
        <Name>Bed 2</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Vantage.Zone</ObjectType>
        <Area>24</Area>
        <Location>
        </Location>
        <Parent Position="3">10458</Parent>
        <InitialSettings>
        </InitialSettings>
      </Vantage.Zone>
    </Object>
    <Object>
      <Vantage.DynamicSource VID="10464" Master="9722" MTime="">
        <Name>Current Source 11</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Vantage.DynamicSource</ObjectType>
        <Parent Position="">10463</Parent>
        <InitialSettings>
        </InitialSettings>
      </Vantage.DynamicSource>
    </Object>
    <Object>
      <Vantage.Zone VID="10465" Master="9722" MTime="" Position="">
        <Name>Living</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Vantage.Zone</ObjectType>
        <Area>19</Area>
        <Location>
        </Location>
        <Parent Position="4">10458</Parent>
        <InitialSettings>
        </InitialSettings>
      </Vantage.Zone>
    </Object>
    <Object>
      <Vantage.DynamicSource VID="10466" Master="9722" MTime="">
        <Name>Current Source 12</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Vantage.DynamicSource</ObjectType>
        <Parent Position="">10465</Parent>
        <InitialSettings>
        </InitialSettings>
      </Vantage.DynamicSource>
    </Object>
    <Object>
      <Vantage.Zone VID="10467" Master="9722" MTime="" Position="">
        <Name>Kitchen</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Vantage.Zone</ObjectType>
        <Area>20</Area>
        <Location>
        </Location>
        <Parent Position="5">10458</Parent>
        <InitialSettings>
        </InitialSettings>
      </Vantage.Zone>
    </Object>
    <Object>
      <Vantage.DynamicSource VID="10468" Master="9722" MTime="">
        <Name>Current Source 13</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Vantage.DynamicSource</ObjectType>
        <Parent Position="">10467</Parent>
        <InitialSettings>
        </InitialSettings>
      </Vantage.DynamicSource>
    </Object>
    <Object>
      <Vantage.Zone VID="10469" Master="9722" MTime="" Position="">
        <Name>Bathroom</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Vantage.Zone</ObjectType>
        <Area>27</Area>
        <Location>
        </Location>
        <Parent Position="6">10458</Parent>
        <InitialSettings>
        </InitialSettings>
      </Vantage.Zone>
    </Object>
    <Object>
      <Vantage.DynamicSource VID="10470" Master="9722" MTime="">
        <Name>Current Source 14</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Vantage.DynamicSource</ObjectType>
        <Parent Position="">10469</Parent>
        <InitialSettings>
        </InitialSettings>
      </Vantage.DynamicSource>
    </Object>
    <Object>
      <Vantage.Zone VID="10471" Master="9722" MTime="" Position="">
        <Name>En-Suite</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Vantage.Zone</ObjectType>
        <Area>23</Area>
        <Location>
        </Location>
        <Parent Position="7">10458</Parent>
        <InitialSettings>
        </InitialSettings>
      </Vantage.Zone>
    </Object>
    <Object>
      <Vantage.DynamicSource VID="10472" Master="9722" MTime="">
        <Name>Current Source 15</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Vantage.DynamicSource</ObjectType>
        <Parent Position="">10471</Parent>
        <InitialSettings>
        </InitialSettings>
      </Vantage.DynamicSource>
    </Object>
    <Object>
      <Vantage.Zone VID="10473" Master="9722" MTime="" Position="" NotInAudio="True">
        <Name>Zone 8</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Vantage.Zone</ObjectType>
        <Area>0</Area>
        <Location>
        </Location>
        <Parent Position="8">10458</Parent>
        <InitialSettings>
        </InitialSettings>
      </Vantage.Zone>
    </Object>
    <Object>
      <Vantage.DynamicSource VID="10474" Master="9722" MTime="">
        <Name>Current Source 16</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Vantage.DynamicSource</ObjectType>
        <Parent Position="">10473</Parent>
        <InitialSettings>
        </InitialSettings>
      </Vantage.DynamicSource>
    </Object>
    <Object>
      <Vantage.InternalSource VID="10475" Master="9722" MTime="" Position="">
        <Name>MediaPlayer Source 1</Name>
        <Model>
        </Model>
        <Note>
        </Note>
        <DName>
        </DName>
        <ObjectType>Vantage.InternalSource</ObjectType>
        <Parent Position="13">10445</Parent>
        <InitialSettings>
        </InitialSettings>
      </Vantage.InternalSource>
    </Object>
  </Objects>
  <UserObjects MTime="2016-11-21T11:24:28">
  </UserObjects>
  <ProjectInfo>
    <JobInfo>
      <JobName>Home</JobName>
      <Class>Residential</Class>
      <SubClass>Luxury Home</SubClass>
      <Type>WireLink</Type>
      <StartDate>10/15/2014</StartDate>
      <CompletionDate>
      </CompletionDate>
      <SquareFootage>
      </SquareFootage>
    </JobInfo>
    <OwnerInfo>
      <Name>RJK</Name>
      <Address>
      </Address>
      <IPAddress>192.168.1.200</IPAddress>
      <IPPort>2001</IPPort>
      <Email>
      </Email>
      <Phone>
      </Phone>
      <Fax>
      </Fax>
      <Modem>
      </Modem>
    </OwnerInfo>
    <DealerInfo>
      <CompanyName>RJK</CompanyName>
      <ContactName>
      </ContactName>
      <Email>
      </Email>
      <Phone>
      </Phone>
      <Fax>
      </Fax>
    </DealerInfo>
    <InstallerInfo>
      <CompanyName>
      </CompanyName>
      <ContactName>
      </ContactName>
      <Email>
      </Email>
      <Phone>
      </Phone>
      <Fax>
      </Fax>
    </InstallerInfo>
    <ProjectPreferences>
      <ZeroCrossMaxAdjust>40</ZeroCrossMaxAdjust>
      <TemperatureUnits>Fahrenheit</TemperatureUnits>
      <GlobalThermostat>0</GlobalThermostat>
      <SounderPulseLength>0.1</SounderPulseLength>
      <ContactInputPolarity>NO</ContactInputPolarity>
      <DefaultLoadType>Incandescent</DefaultLoadType>
      <ArcFaultMaxWattage>1000</ArcFaultMaxWattage>
    </ProjectPreferences>
    <Passcode>sYqJoA39kJ6sOCelmntgug==</Passcode>
    <EmailInfo>
      <Server>
      </Server>
      <User>
      </User>
      <Password>242,135,6,131,238,218,244,126</Password>
    </EmailInfo>
    <C3POTable>
      <C3PO ObjectType="Vantage.Generic_HVAC_RS485_PORT" Version="66">206252</C3PO>
      <C3PO ObjectType="Vantage.Generic_HVAC_RS485_Zone_CHILD" Version="25">206240</C3PO>
      <C3PO ObjectType="GenericDevice" Version="0">-1</C3PO>
      <C3PO ObjectType="Vantage.SwitcherStack" Version="1">0</C3PO>
      <C3PO ObjectType="Vantage.Zone" Version="1">0</C3PO>
      <C3PO ObjectType="Vantage.StaticSource" Version="1">0</C3PO>
      <C3PO ObjectType="Vantage.Generic_HVAC_RS485_TechContacts_CHILD" Version="6">171574</C3PO>
      <C3PO ObjectType="Vantage.DynamicSource" Version="1">0</C3PO>
      <C3PO ObjectType="Vantage.InternalSource" Version="1">0</C3PO>
      <C3PO ObjectType="Vantage.Generic_HVAC_RS485_Compound_CHILD" Version="7">206239</C3PO>
      <C3PO ObjectType="Vantage.850Switcher" Version="1">0</C3PO>
    </C3POTable>
    <LabelTypes>
      <LabelType>
        <Name>DegC</Name>
        <Localization Language="en">
          <DisplayName>Celsius</DisplayName>
          <Description>The temperature measured in Celsius or Fahrenheit.  This is not the unit of temperature, but the actual temperature value.</Description>
          <Category>Standard</Category>
        </Localization>
        <DataType>float</DataType>
        <Parser>\s*([0-9\.]*)\s*?*\w*\s*</Parser>
        <Quantifier>[Value]?C</Quantifier>
        <ValidRange>
          <LowerBound Type="float">-40.0</LowerBound>
          <UpperBound Type="float">150.0</UpperBound>
        </ValidRange>
        <AdjustingLabelType>DeltaDegC</AdjustingLabelType>
        <Conversion>
          <Current>Celsius</Current>
          <Possible>
            <Function Name="Fahrenheit" Quantifier="[Value]?F">
              <Forward>x*9/5+32</Forward>
              <Reverse>(x-32)*5/9</Reverse>
            </Function>
            <Function Name="Kelvin" Quantifier="[Value]K">
              <Forward>x+273.15</Forward>
              <Reverse>x-273.15</Reverse>
            </Function>
            <Function Name="Rankine" Quantifier="[Value]?Ra">
              <Forward>x*9/5+491.67</Forward>
              <Reverse>(x-491.67)*5/9</Reverse>
            </Function>
            <Function Name="Celsius" Quantifier="[Value]?C">
              <Forward>x</Forward>
              <Reverse>x</Reverse>
            </Function>
          </Possible>
        </Conversion>
        <SchemaType>vntg:Celsius</SchemaType>
      </LabelType>
      <LabelType>
        <Name>DeltaDegC</Name>
        <Localization Language="en">
          <DisplayName>Celsius Degrees</DisplayName>
          <Description>A unit or of temperature, or change in temperature.  To be used to add or subtract degrees from a temperature.</Description>
          <Category>None</Category>
        </Localization>
        <DataType>float</DataType>
        <Parser>\s*([0-9\.]*)\s*?*\w*\s*</Parser>
        <Quantifier>[Value]?C</Quantifier>
        <ValidRange>
          <LowerBound Type="float">-40.0</LowerBound>
          <UpperBound Type="float">150.0</UpperBound>
        </ValidRange>
        <Conversion>
          <Current>Celsius Degrees</Current>
          <Possible>
            <Function Name="Fahrenheit Degrees" Quantifier="[Value]?F">
              <Forward>x*9/5</Forward>
              <Reverse>x*5/9</Reverse>
            </Function>
            <Function Name="Kelvin Degrees" Quantifier="[Value]K">
              <Forward>x</Forward>
              <Reverse>x</Reverse>
            </Function>
            <Function Name="Rankine Degrees" Quantifier="[Value]?Ra">
              <Forward>x*9/5</Forward>
              <Reverse>x*5/9</Reverse>
            </Function>
            <Function Name="Celsius Degrees" Quantifier="[Value]?C">
              <Forward>x</Forward>
              <Reverse>x</Reverse>
            </Function>
          </Possible>
        </Conversion>
      </LabelType>
    </LabelTypes>
    <AdminPasscode>
    </AdminPasscode>
    <ProjectSecuritySetting>None</ProjectSecuritySetting>
    <IpAddressExceptions />
    <IconRegion>
      <IconId>1</IconId>
    </IconRegion>
    <LocationAndTime>
      <NTPServer name="" />
      <Country name="United Kingdom">
        <State name=" ">
          <City name="London">
            <UserCity>true</UserCity>
            <TimeZone>0</TimeZone>
            <Latitude>51.29</Latitude>
            <Longitude>0</Longitude>
            <DaylightSavings>
              <AdjustTime>60</AdjustTime>
              <SetAhead>
                <StartMonth>3</StartMonth>
                <StartWeek>29</StartWeek>
                <StartDayOfWeek>1</StartDayOfWeek>
                <StartHour>1</StartHour>
                <StartMinute>0</StartMinute>
              </SetAhead>
              <SetBack>
                <EndMonth>10</EndMonth>
                <EndWeek>29</EndWeek>
                <EndDayOfWeek>1</EndDayOfWeek>
                <EndHour>2</EndHour>
                <EndMinute>0</EndMinute>
              </SetBack>
            </DaylightSavings>
          </City>
        </State>
      </Country>
    </LocationAndTime>
  </ProjectInfo>
  <BillOfMaterials>
    <Customer>0</Customer>
    <POType>Dealer</POType>
    <Quantities />
    <BillShip>
      <BillTo />
      <ShipTo />
      <PONumber />
      <CompanyName />
      <Name />
      <JobName />
      <CSR />
      <Email />
      <Shipping>
        <Method>Best Method</Method>
        <FedExAcct />
      </Shipping>
      <Payment>
        <Method>Bill My Account</Method>
        <AcctNumber />
        <CCHolder />
        <CCType>Visa</CCType>
        <CCExpDate />
      </Payment>
    </BillShip>
    <Notes />
  </BillOfMaterials>
  <UserObjectsBackup>
  </UserObjectsBackup>
</Project>
